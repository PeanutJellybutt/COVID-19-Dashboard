{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react'; //MUI\n\nimport { withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar, Typography, CssBaseline, Container, Paper, Grid, styles, darkTheme } from '../components/muiComponents.js'; //DROPDOWN\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css'; //RECHARTS\n\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts'; //AXIOS DATA\n\nimport axios from 'axios';\nimport { fetchData, callAPIGlobalAll, callAPIGlobalTimeline, callAPIGlobal, callAPIThailand, clearAxiosCalls, getLastDate, getDateDiff, processData } from '../components/dataFetch.js'; //RANKING\n\nimport { countryCompare, globalRankSelect, globalRankTopTen, globalRanking, globalRankingHeading } from '../components/dataRank.js'; //JVECTORMAP\n\nimport { countryEncodeAssist, countryDecodeAssist, processMapGlobalData } from '../components/dataMap.js';\nimport '../public/jquery-jvectormap.css';\nimport dynamic from 'next/dynamic';\nexport var VectorMap = dynamic(function () {\n  return import(\"react-jvectormap\").then(function (m) {\n    return m.VectorMap;\n  });\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-jvectormap\")];\n    },\n    modules: [\"react-jvectormap\"]\n  }\n}); //----------------------------------------------------------------\n\nvar cBlue = '#20A0E0';\nvar cOrange = '#F7B860';\nvar cRed = '#E04040';\nvar cGreen = '#80D080';\nvar cDRed = '#BB0A1E';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasData: false,\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      fastMode: true,\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false,\n      selectCategory: 'Hospitalized',\n      rankSelect: -1,\n      rankTopTen: [],\n      mapGlobalData: null\n    };\n    _this.referenceDate = new Date();\n\n    _this.referenceDate.setDate(_this.referenceDate.getDate() - 1);\n\n    var CancelToken = axios.CancelToken;\n    _this.cancelSource = CancelToken.source();\n\n    var _require = require(\"country-list\"),\n        getCode = _require.getCode,\n        getName = _require.getName,\n        getData = _require.getData;\n\n    _this.getCountryCode = getCode;\n    _this.getCountryName = getName;\n    _this.getCountryData = getData; //Binding dataFetch functions\n\n    _this.fetchData = fetchData.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobalAll = callAPIGlobalAll.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobal = callAPIGlobal.bind(_assertThisInitialized(_this));\n    _this.callAPIThailand = callAPIThailand.bind(_assertThisInitialized(_this));\n    _this.clearAxiosCalls = clearAxiosCalls.bind(_assertThisInitialized(_this));\n    _this.getLastDate = getLastDate.bind(_assertThisInitialized(_this));\n    _this.getDateDiff = getDateDiff.bind(_assertThisInitialized(_this));\n    _this.processData = processData.bind(_assertThisInitialized(_this)); //Binding dataRank functions\n\n    _this.countryCompare = countryCompare.bind(_assertThisInitialized(_this));\n    _this.globalRankSelect = globalRankSelect.bind(_assertThisInitialized(_this));\n    _this.globalRankTopTen = globalRankTopTen.bind(_assertThisInitialized(_this));\n    _this.globalRanking = globalRanking.bind(_assertThisInitialized(_this));\n    _this.globalRankingHeading = globalRankingHeading.bind(_assertThisInitialized(_this)); //Binding dataRank functions\n\n    _this.countryEncodeAssist = countryEncodeAssist.bind(_assertThisInitialized(_this));\n    _this.countryDecodeAssist = countryDecodeAssist.bind(_assertThisInitialized(_this));\n    _this.processMapGlobalData = processMapGlobalData.bind(_assertThisInitialized(_this));\n    _this.renderMap = renderMap.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPIGlobalAll(this.referenceDate);\n      this.fetchData(this.referenceDate);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.selectCountry != this.state.selectCountry || prevState.selectCity != this.state.selectCity || prevState.fastMode != this.state.fastMode) {\n        this.clearAxiosCalls();\n        this.fetchData(this.referenceDate);\n      }\n\n      if (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry) this.globalRanking(this.state.selectCategory);\n    }\n  }, {\n    key: \"renderSourceInfo\",\n    value: function renderSourceInfo() {\n      var data_text = this.state.data_text;\n      return __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 4\n        }\n      }, __jsx(Typography, {\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 5\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }\n      }, \" \", data_text.source)));\n    }\n  }, {\n    key: \"renderFetchControls\",\n    value: function renderFetchControls(which) {\n      var _this2 = this;\n\n      if (which == 0) {\n        //Button Fast/Full Mode Select\n        var fastMode = this.state.fastMode;\n        return __jsx(React.Fragment, null, __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 5\n          }\n        }), __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 10\n          }\n        }), __jsx(\"button\", {\n          style: {\n            height: '32px',\n            width: '128px',\n            \"float\": 'right',\n            color: fastMode ? cDRed : 'blue'\n          },\n          onClick: function onClick() {\n            return _this2.setState({\n              fastMode: !fastMode\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 5\n          }\n        }, __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 6\n          }\n        }, fastMode ? \"FAST MODE\" : \"FULL MODE\")));\n      } else if (which == 1) {\n        //Dropdown Country Select\n        var _this$state = this.state,\n            countries = _this$state.countries,\n            selectCountry = _this$state.selectCountry;\n        return __jsx(React.Fragment, null, __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 5\n          }\n        }), __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 10\n          }\n        }), __jsx(Dropdown, {\n          options: countries,\n          value: selectCountry,\n          onChange: function onChange(select) {\n            return _this2.setState({\n              selectCountry: select.value,\n              selectCity: 'Overall'\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 5\n          }\n        }));\n      } else {\n        //Dropdown City Select\n        var _this$state2 = this.state,\n            _selectCountry = _this$state2.selectCountry,\n            selectCity = _this$state2.selectCity;\n        var selectedCountryData = this.state.globalData[_selectCountry];\n        var cityChoice = [\"Overall\"];\n\n        if (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\n          cityChoice = selectedCountryData.Cities.slice(0);\n          cityChoice.splice(0, 0, \"Overall\");\n        }\n\n        return __jsx(React.Fragment, null, __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 5\n          }\n        }), __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 10\n          }\n        }), __jsx(Dropdown, {\n          options: cityChoice,\n          value: selectCity,\n          onChange: function onChange(select) {\n            return _this2.setState({\n              selectCity: select.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 5\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderNumbers\",\n    value: function renderNumbers(which) {\n      var data_text = this.state.data_text;\n      var classes = this.props.classes;\n\n      if (which == 0) {\n        return __jsx(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 5\n          }\n        }, __jsx(Typography, {\n          style: {\n            color: 'steelblue'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 6\n          }\n        }, __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 49\n          }\n        }, \"Confirmed\")), __jsx(Typography, {\n          style: {\n            color: cBlue\n          },\n          variant: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 6\n          }\n        }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n          style: {\n            color: 'steelblue'\n          },\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 6\n          }\n        }, \"+ \", data_text.newConfirmed.toLocaleString()));\n      } else if (which == 1) {\n        return __jsx(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 5\n          }\n        }, __jsx(Typography, {\n          style: {\n            color: 'goldenrod'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 6\n          }\n        }, __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 49\n          }\n        }, \"Hospitalized\")), __jsx(Typography, {\n          style: {\n            color: cOrange\n          },\n          variant: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 6\n          }\n        }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n          style: {\n            color: 'goldenrod'\n          },\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 6\n          }\n        }, data_text.newHospitalized >= 0 ? '+' : '-', \" \", Math.abs(data_text.newHospitalized).toLocaleString()));\n      } else if (which == 2) {\n        return __jsx(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 5\n          }\n        }, __jsx(Typography, {\n          style: {\n            color: 'fireBrick'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 6\n          }\n        }, __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 49\n          }\n        }, \"Deaths\")), __jsx(Typography, {\n          style: {\n            color: cRed\n          },\n          variant: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 6\n          }\n        }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n          style: {\n            color: 'fireBrick'\n          },\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 6\n          }\n        }, \"+ \", data_text.newDeaths.toLocaleString()));\n      } else {\n        return __jsx(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 5\n          }\n        }, __jsx(Typography, {\n          style: {\n            color: 'green'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 6\n          }\n        }, __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 45\n          }\n        }, \"Recovered\")), __jsx(Typography, {\n          style: {\n            color: cGreen\n          },\n          variant: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 6\n          }\n        }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n          style: {\n            color: 'green'\n          },\n          variant: \"h5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 6\n          }\n        }, \"+ \", data_text.newRecovered.toLocaleString()));\n      }\n    }\n  }, {\n    key: \"renderStreaks\",\n    value: function renderStreaks() {\n      var classes = this.props.classes;\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 4\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 5\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 5\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"));\n    }\n  }, {\n    key: \"renderRates\",\n    value: function renderRates() {\n      var classes = this.props.classes;\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 4\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 5\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 5\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath));\n    }\n  }, {\n    key: \"renderGraphButton\",\n    value: function renderGraphButton() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return __jsx(React.Fragment, null, __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: this.state.showGraph ? 'grey' : 'steelblue'\n        },\n        onClick: function onClick() {\n          return _this3.setState({\n            showGraph: !_this3.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 4\n        }\n      }, \"Show/Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 4\n        }\n      }));\n    }\n  }, {\n    key: \"renderGraphs\",\n    value: function renderGraphs() {\n      var _this4 = this;\n\n      var classes = this.props.classes;\n      var _this$state3 = this.state,\n          dataTimeline = _this$state3.dataTimeline,\n          dataTimeline15 = _this$state3.dataTimeline15,\n          data_pie = _this$state3.data_pie;\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 4\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 6\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 7\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 8\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: cBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 6\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 7\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 8\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }\n      }, __jsx(Cell, {\n        fill: cOrange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 10\n        }\n      }), __jsx(Cell, {\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 10\n        }\n      }), __jsx(Cell, {\n        fill: cGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 10\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 6\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 7\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 8\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: cBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: cOrange,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 9\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: cRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: cGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      })))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 4\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: 'grey'\n        },\n        onClick: function onClick() {\n          return _this4.setState({\n            showGraph: !_this4.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 4\n        }\n      }, \"Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 4\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderRankingHeader\",\n    value: function renderRankingHeader() {\n      return __jsx(React.Fragment, null, __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 4\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 5\n        }\n      }, \"Global Ranking based on:\")), __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 4\n        }\n      }, this.globalRankingHeading(this.state.selectCategory)));\n    }\n  }, {\n    key: \"renderCategoryDropdown\",\n    value: function renderCategoryDropdown() {\n      var _this5 = this;\n\n      var categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\n      return __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 4\n        }\n      }), __jsx(Dropdown, {\n        options: categoryChoice,\n        value: 'Hospitalized',\n        onChange: function onChange(select) {\n          return _this5.setState({\n            selectCategory: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 4\n        }\n      }));\n    }\n  }, {\n    key: \"renderRanking\",\n    value: function renderRanking() {\n      var _this6 = this;\n\n      if (this.state.rankSelect < 0) return null;\n      var classes = this.props.classes;\n      var _this$state4 = this.state,\n          selectCountry = _this$state4.selectCountry,\n          selectCategory = _this$state4.selectCategory;\n      var rankSuffix = \" cases\";\n      if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') rankSuffix = \"%\";\n      return __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 4\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 6\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 7\n        }\n      }, __jsx(Typography, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 8\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 9\n        }\n      }, \"Rank \", this.state.rankSelect, \". \", selectCountry, \" - \", this.state.globalData[selectCountry][selectCategory], rankSuffix), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }), \"out of \", this.state.countries.length, \" countries\"))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 6\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 7\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 8\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 9\n        }\n      }, \"Top 10 Countries\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 32\n        }\n      })), __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 8\n        }\n      }, this.state.rankTopTen.map(function (c, i) {\n        return __jsx(React.Fragment, null, __jsx(\"b\", {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }\n        }, i + 1, \".\"), \" \", c.Country, \" - \", c[selectCategory], rankSuffix, __jsx(\"br\", {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 70\n          }\n        }));\n      }))))));\n    }\n  }, {\n    key: \"renderMap\",\n    value: function renderMap(category) {\n      var _this7 = this;\n\n      if (this.state.mapGlobalData == null) return null;\n\n      var handleClick = function handleClick(e, code) {\n        var country = _this7.countryDecodeAssist(code);\n\n        if (_this7.state.countries.includes(country)) _this7.setState({\n          selectCountry: country,\n          selectCity: 'Overall'\n        });\n      };\n\n      var data = this.state.mapGlobalData;\n      var mapData = data[category]; //console.log(mapData);\n\n      var minColor = \"#FFFFFF\";\n      var maxColor = cRed;\n      if (category == \"Recovered\" || category == \"RecoveryRate\") maxColor = cBlue;\n      var normFunction = \"polynomial\";\n      if (category == \"RecoveryRate\" || category == \"MortalityRate\") normFunction = \"linear\";\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 4\n        }\n      }, __jsx(VectorMap, {\n        map: \"world_mill\",\n        backgroundColor: \"#000000\" //\"transparent\" //change it to ocean blue: #0077be\n        ,\n        zoomOnScroll: false,\n        containerStyle: {\n          width: \"100%\",\n          height: \"520px\"\n        },\n        onRegionClick: handleClick,\n        containerClassName: \"map\",\n        regionStyle: {\n          initial: {\n            fill: \"#A0A0A0\",\n            \"fill-opacity\": 1,\n            stroke: \"white\",\n            \"stroke-width\": 0.2,\n            \"stroke-opacity\": 1\n          },\n          hover: {\n            \"fill-opacity\": 0.75,\n            cursor: \"pointer\"\n          },\n          selected: {},\n          selectedHover: {}\n        },\n        regionsSelectable: false,\n        series: {\n          regions: [{\n            values: mapData,\n            //this is your data\n            scale: [minColor, maxColor],\n            //your color game's here\n            normalizeFunction: normFunction\n          }]\n        },\n        onRegionTipShow: function onRegionTipShow(event, label, code) {\n          label.html('<b><i>' + label.html() + '</i></b></br>' + 'Confirmed: ' + data['Confirmed'][code] + '</br>' + 'Hospitalized: ' + data['Hospitalized'][code] + '</br>' + 'Deaths: ' + data['Deaths'][code] + '</br>' + 'Recovered: ' + data['Recovered'][code] + '</br>' + 'Recovery rate: ' + data['RecoveryRate'][code] + '%' + '</br>' + 'Mortality rate: ' + data['MortalityRate'][code] + '%');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 5\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var hasData = this.state.hasData;\n      if (!hasData) return \"ERROR: Cannot fetch data\";\n      var rankSuffix = \" cases\";\n\n      if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') {\n        rankSuffix = \"%\";\n      }\n\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 8\n        }\n      }, \"COVID-19 Dashboard\")))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 7\n        }\n      }, this.renderSourceInfo()), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 7\n        }\n      }, this.renderFetchControls(0)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 7\n        }\n      }, this.renderFetchControls(1)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 7\n        }\n      }, this.renderFetchControls(2)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 7\n        }\n      }, this.renderNumbers(0)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 7\n        }\n      }, this.renderNumbers(1)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 7\n        }\n      }, this.renderNumbers(2)), \" \", __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 7\n        }\n      }, this.renderNumbers(3)), \" \", this.state.hasTimeline && __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 38\n        }\n      }, this.renderStreaks()), \" \", __jsx(Grid, {\n        item: true,\n        xs: this.state.hasTimeline ? 6 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 7\n        }\n      }, this.renderRates()), \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 6\n        }\n      }), this.state.hasTimeline && this.renderGraphButton(), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 6\n        }\n      }), this.state.showGraph && this.renderGraphs(), \" \", __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 7\n        }\n      }, this.renderRankingHeader()), \" \", __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 7\n        }\n      }, this.renderCategoryDropdown()), \" \"), __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 6\n        }\n      }, this.renderRanking(), \" \", __jsx(Grid, {\n        item: true,\n        xs: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 7\n        }\n      }, this.renderMap(selectCategory)), \" \")), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        style: {\n          background: \"#8F8080\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 8\n        }\n      }, \"COVID-19 Dashboard for Tencent Thailand's Internship Project\")), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","styles","darkTheme","Dropdown","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","axios","fetchData","callAPIGlobalAll","callAPIGlobalTimeline","callAPIGlobal","callAPIThailand","clearAxiosCalls","getLastDate","getDateDiff","processData","countryCompare","globalRankSelect","globalRankTopTen","globalRanking","globalRankingHeading","countryEncodeAssist","countryDecodeAssist","processMapGlobalData","dynamic","VectorMap","then","m","ssr","cBlue","cOrange","cRed","cGreen","cDRed","App","props","state","hasData","selectCountry","selectCity","countries","globalData","fastMode","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","selectCategory","rankSelect","rankTopTen","mapGlobalData","referenceDate","Date","setDate","getDate","CancelToken","cancelSource","source","require","getCode","getName","getData","getCountryCode","getCountryName","getCountryData","bind","renderMap","prevProps","prevState","which","height","width","color","setState","select","value","selectedCountryData","cityChoice","undefined","CitiesN","Cities","slice","splice","classes","paper","toLocaleString","Math","abs","top","right","left","bottom","categoryChoice","rankSuffix","length","map","c","i","Country","category","handleClick","e","code","country","includes","data","mapData","minColor","maxColor","normFunction","initial","fill","stroke","hover","cursor","selected","selectedHover","regions","values","scale","normalizeFunction","event","label","html","root","background","title","appBarSpacer","renderSourceInfo","renderFetchControls","renderNumbers","renderStreaks","renderRates","renderGraphButton","renderGraphs","renderRankingHeader","renderCategoryDropdown","renderRanking","footer","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\n\r\n//MUI\r\nimport {withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar,\r\n\tTypography, CssBaseline, Container, Paper, Grid,\r\n\tstyles, darkTheme} from '../components/muiComponents.js';\r\n\r\n//DROPDOWN\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n//RECHARTS\r\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \r\n  Pie, Cell, } from 'recharts';\r\n\t\r\n//AXIOS DATA\r\nimport axios from 'axios';\r\nimport {fetchData, callAPIGlobalAll, callAPIGlobalTimeline,\r\n\tcallAPIGlobal, callAPIThailand, clearAxiosCalls,\r\n\tgetLastDate, getDateDiff, processData} from '../components/dataFetch.js';\r\n\t\r\n//RANKING\r\nimport {countryCompare, globalRankSelect, globalRankTopTen,\r\n\tglobalRanking, globalRankingHeading} from '../components/dataRank.js';\r\n\t\r\n//JVECTORMAP\r\nimport {countryEncodeAssist, countryDecodeAssist, processMapGlobalData} from '../components/dataMap.js';\r\nimport '../public/jquery-jvectormap.css'\r\nimport dynamic from 'next/dynamic'\r\nexport const VectorMap = dynamic(\r\n  () => import(\"react-jvectormap\").then((m) => m.VectorMap),\r\n  { ssr: false, }\r\n);\r\n\t\r\n//----------------------------------------------------------------\r\n\r\nconst cBlue = '#20A0E0';\r\nconst cOrange = '#F7B860';\r\nconst cRed = '#E04040';\r\nconst cGreen = '#80D080';\r\nconst cDRed = '#BB0A1E';\r\n\r\nclass App extends React.Component {\r\n\t\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasData: false,\r\n\t\t\tselectCountry: 'Thailand',\r\n\t\t\tselectCity: 'Overall',\r\n\t\t\tcountries: [],\r\n\t\t\tglobalData: [],\r\n\t\t\tfastMode: true,\r\n\t\t\thasTimeline: true,\r\n\t\t\tdataTimeline: [],\r\n\t\t\tdataTimeline15: [],\r\n\t\t\tdata_text: {\r\n\t\t\t\tupdatedDate: '',\r\n\t\t\t\tconfirmed: '',\r\n\t\t\t\thospitalized: '',\r\n\t\t\t\tdeaths: '',\r\n\t\t\t\trecovered: '',\r\n\t\t\t\tnewConfirmed: '',\r\n\t\t\t\tnewHospitalized: '',\r\n\t\t\t\tnewDeaths: '',\r\n\t\t\t\tnewRecovered: '',\r\n\t\t\t},\r\n\t\t\tdata_pie: [{}],\r\n\t\t\tlastConfirmed: 0,\r\n\t\t\tlastDeath: 0,\r\n\t\t\tnoConfirmedStreak: 0,\r\n\t\t\tnoDeathStreak: 0,\r\n\t\t\trateRecovery: 0,\r\n\t\t\trateDeath: 0,\r\n\t\t\tshowGraph: false,\r\n\t\t\tselectCategory: 'Hospitalized',\r\n\t\t\trankSelect: -1,\r\n\t\t\trankTopTen: [],\r\n\t\t\tmapGlobalData: null,\r\n\t\t};\r\n\t\t\r\n\t\tthis.referenceDate = new Date();\r\n\t\tthis.referenceDate.setDate(this.referenceDate.getDate()-1);\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n\t\t\r\n\t\tconst { getCode, getName, getData } = require(\"country-list\");\r\n\t\tthis.getCountryCode = getCode;\r\n\t\tthis.getCountryName = getName;\r\n\t\tthis.getCountryData = getData;\r\n\t\t\r\n\t\t//Binding dataFetch functions\r\n\t\tthis.fetchData = fetchData.bind(this);\r\n\t\tthis.callAPIGlobalAll = callAPIGlobalAll.bind(this);\r\n\t\tthis.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\r\n\t\tthis.callAPIGlobal = callAPIGlobal.bind(this);\r\n\t\tthis.callAPIThailand = callAPIThailand.bind(this);\r\n\t\tthis.clearAxiosCalls = clearAxiosCalls.bind(this);\r\n\t\tthis.getLastDate = getLastDate.bind(this);\r\n\t\tthis.getDateDiff = getDateDiff.bind(this);\r\n\t\tthis.processData = processData.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryCompare = countryCompare.bind(this);\r\n\t\tthis.globalRankSelect = globalRankSelect.bind(this);\r\n\t\tthis.globalRankTopTen = globalRankTopTen.bind(this);\r\n\t\tthis.globalRanking = globalRanking.bind(this);\r\n\t\tthis.globalRankingHeading = globalRankingHeading.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryEncodeAssist = countryEncodeAssist.bind(this);\r\n\t\tthis.countryDecodeAssist = countryDecodeAssist.bind(this);\r\n\t\tthis.processMapGlobalData = processMapGlobalData.bind(this);\r\n\t\tthis.renderMap = renderMap.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t\tthis.callAPIGlobalAll(this.referenceDate);\r\n\t\tthis.fetchData(this.referenceDate);\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.selectCountry != this.state.selectCountry) ||\r\n     \t\t(prevState.selectCity != this.state.selectCity) ||\r\n\t\t\t\t(prevState.fastMode != this.state.fastMode))\r\n\t\t{\r\n\t\t\tthis.clearAxiosCalls();\r\n\t\t\tthis.fetchData(this.referenceDate);\r\n\t\t}\r\n\t\t\r\n\t\tif (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry)\r\n\t\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\t\r\n\trenderSourceInfo() {\r\n\t\tconst {data_text} = this.state;\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={darkTheme}>\r\n\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\tLast updated: {data_text.updatedDate}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\thref={data_text.source}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"> {\r\n\t\t\t\t\t\tdata_text.source\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Typography>\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderFetchControls(which) {\r\n\t\tif (which == 0) {\t//Button Fast/Full Mode Select\r\n\t\t\tconst {fastMode} = this.state;\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\twidth : '128px',\r\n\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\tcolor: (fastMode ? cDRed : 'blue')\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => this.setState({ fastMode: !fastMode })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<b>{fastMode ? \"FAST MODE\" : \"FULL MODE\"}</b>\r\n\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 1) {\t//Dropdown Country Select\r\n\t\t\tconst {countries, selectCountry} = this.state;\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<Dropdown options={countries} value={selectCountry}\r\n\t\t\t\t\tonChange={(select) => this.setState({ selectCountry: select.value, selectCity: 'Overall' })}\r\n\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\t//Dropdown City Select\r\n\t\t\tconst {selectCountry, selectCity} = this.state;\r\n\t\t\tconst selectedCountryData = this.state.globalData[selectCountry];\r\n\t\t\tlet cityChoice = [\"Overall\"];\r\n\t\t\tif (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\r\n\t\t\t\tcityChoice = selectedCountryData.Cities.slice(0);\r\n\t\t\t\tcityChoice.splice(0,0,\"Overall\");\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<Dropdown options={cityChoice} value={selectCity}\r\n\t\t\t\t\tonChange={(select) => this.setState({ selectCity:select.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\trenderNumbers(which) {\r\n\t\tconst {data_text} = this.state;\r\n\t\tconst {classes} = this.props;\r\n\t\tif (which == 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'steelblue' }}><b>Confirmed</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cBlue }} variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'steelblue' }} variant=\"h5\">+ {data_text.newConfirmed.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'goldenrod' }}><b>Hospitalized</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cOrange }} variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'goldenrod' }} variant=\"h5\">\r\n\t\t\t\t\t\t{(data_text.newHospitalized >= 0) ? '+' : '-'} {Math.abs(data_text.newHospitalized).toLocaleString()}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'fireBrick' }}><b>Deaths</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cRed }} variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'fireBrick' }} variant=\"h5\">+ {data_text.newDeaths.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'green' }}><b>Recovered</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cGreen }} variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'green' }} variant=\"h5\">+ {data_text.newRecovered.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\trenderStreaks() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\r\n\t\t\t\t</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRates() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Typography variant='h6' style={{ color: 'green' }}>\r\n\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h6' style={{ color: cDRed }}>\r\n\t\t\t\t\tMortality Rate: {this.state.rateDeath}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderGraphButton() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '32px',\r\n\t\t\t\t\twidth : '144px',\r\n\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\tcolor: (this.state.showGraph ? 'grey' : 'steelblue')\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t>\r\n\t\t\t\tShow/Hide Graphs\r\n\t\t\t</button>\r\n\t\t\t<br/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderGraphs() {\r\n\t\tconst {classes} = this.props;\r\n\t\tconst {dataTimeline, dataTimeline15, data_pie} = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\r\n\t\t\t\t{/*Bar, last 14 days*/}\r\n\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\tdata={dataTimeline15}\r\n\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\r\n\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={cBlue}/>\r\n\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={cRed}/>\r\n\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t{/*Pie, in total*/}\r\n\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cOrange} />\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cRed} />\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cGreen} />\r\n\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t{/*Bar, in total*/}\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tdata={dataTimeline}\r\n\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\r\n\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={cBlue} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={cOrange} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={cRed} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={cGreen} dot={false} />\r\n\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{/*Hide Graph Button*/}\r\n\t\t\t<br/>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{ height: '32px', width : '144px', float: 'right', color: 'grey' }}\r\n\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t>\r\n\t\t\t\tHide Graphs\r\n\t\t\t</button>\r\n\t\t\t<br/><br/>\r\n\t\t\t\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRankingHeader() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<Typography variant='h5' style={{ color: cRed }}>\r\n\t\t\t\t<b>Global Ranking based on:</b>\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='h5' style={{ color: cDRed }}>\r\n\t\t\t\t{this.globalRankingHeading(this.state.selectCategory)}\r\n\t\t\t</Typography>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderCategoryDropdown() {\r\n\t\tconst categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<Dropdown options={categoryChoice} value={'Hospitalized'}\r\n\t\t\t\tonChange={(select) => this.setState({ selectCategory: select.value})}\r\n\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRanking() {\r\n\t\tif (this.state.rankSelect < 0)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst {classes} = this.props;\r\n\t\tconst {selectCountry, selectCategory} = this.state;\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate'))\r\n\t\t\trankSuffix = \"%\";\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Grid container spacing={2} direction='column'>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<Typography align='center'>\r\n\t\t\t\t\t\t\t\t<b>Rank {this.state.rankSelect}. {selectCountry} - {this.state.globalData[selectCountry][selectCategory]}{rankSuffix}</b>\r\n\t\t\t\t\t\t\t\t<br/>out of {this.state.countries.length} countries\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t<b>Top 10 Countries</b><br/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{this.state.rankTopTen.map((c, i) => (\r\n\t\t\t\t\t\t\t\t<><b>{i+1}.</b> {c.Country} - {c[selectCategory]}{rankSuffix}<br/></>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderMap(category) {\r\n\t\tif (this.state.mapGlobalData == null)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst handleClick = (e, code) => {\r\n\t\t\tconst country = this.countryDecodeAssist(code);\r\n\t\t\tif (this.state.countries.includes(country))\r\n\t\t\t\tthis.setState({ selectCountry: country, selectCity: 'Overall'});\r\n\t\t};\r\n\r\n\t\tconst data = this.state.mapGlobalData;\r\n\t\tconst mapData = data[category];\r\n\t\t//console.log(mapData);\r\n\r\n\t\tlet minColor = \"#FFFFFF\";\r\n\t\tlet maxColor = cRed;\r\n\t\tif (category == \"Recovered\" || category == \"RecoveryRate\")\r\n\t\t\tmaxColor = cBlue;\r\n\r\n\t\tlet normFunction = \"polynomial\";\r\n\t\tif (category == \"RecoveryRate\" || category == \"MortalityRate\")\r\n\t\t\tnormFunction = \"linear\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<VectorMap\r\n\t\t\t\t\tmap={\"world_mill\"}\r\n\t\t\t\t\tbackgroundColor=\"#000000\"//\"transparent\" //change it to ocean blue: #0077be\r\n\t\t\t\t\tzoomOnScroll={false}\r\n\t\t\t\t\tcontainerStyle={{\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\theight: \"520px\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionClick={handleClick}\r\n\t\t\t\t\tcontainerClassName=\"map\"\r\n\t\t\t\t\tregionStyle={{\r\n\t\t\t\t\t\tinitial: {\r\n\t\t\t\t\t\t\tfill: \"#A0A0A0\",\r\n\t\t\t\t\t\t\t\"fill-opacity\": 1,\r\n\t\t\t\t\t\t\tstroke: \"white\",\r\n\t\t\t\t\t\t\t\"stroke-width\": 0.2,\r\n\t\t\t\t\t\t\t\"stroke-opacity\": 1\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\"fill-opacity\": 0.75,\r\n\t\t\t\t\t\t\tcursor: \"pointer\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tselected: {},\r\n\t\t\t\t\t\tselectedHover: {}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tregionsSelectable={false}\r\n\t\t\t\t\tseries={{\r\n\t\t\t\t\t\tregions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalues: mapData, //this is your data\r\n\t\t\t\t\t\t\t\tscale: [minColor, maxColor], //your color game's here\r\n\t\t\t\t\t\t\t\tnormalizeFunction: normFunction\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionTipShow={(event, label, code) => {\r\n\t\t\t\t\t\tlabel.html(\r\n\t\t\t\t\t\t\t'<b><i>'+label.html()+'</i></b></br>'+\r\n\t\t\t\t\t\t\t'Confirmed: '+data['Confirmed'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Hospitalized: '+data['Hospitalized'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Deaths: '+data['Deaths'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovered: '+data['Recovered'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovery rate: '+data['RecoveryRate'][code]+'%'+'</br>'+\r\n\t\t\t\t\t\t\t'Mortality rate: '+data['MortalityRate'][code]+'%'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst { hasData } = this.state;\r\n\t\t\r\n\t\tif (!hasData)\r\n\t\t\treturn \"ERROR: Cannot fetch data\";\r\n\t\t\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate')) {\r\n\t\t\trankSuffix = \"%\";\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t\r\n\t\t\t\t{/* ******************************** Title Bar ******************************** */}\r\n\t\t\t\t<AppBar style={{background: cDRed}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<div className={classes.appBarSpacer}/>\r\n\t\t\t\t\r\n\t\t\t\t<Container>\r\n\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Top Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{/* -- Source Info -- */}\r\n\t\t\t\t\t\t<Grid item xs={4}>{this.renderSourceInfo()}</Grid>\r\n\t\t\t\t\t\t{/* -- Data Fetch Controls -- */}\r\n\t\t\t\t\t\t<Grid item xs={2}>{this.renderFetchControls(0)}</Grid> {/* Fast/Full Button */}\r\n\t\t\t\t\t\t<Grid item xs={3}>{this.renderFetchControls(1)}</Grid> {/* Country Dropdown */}\r\n\t\t\t\t\t\t<Grid item xs={3}>{this.renderFetchControls(2)}</Grid> {/* City Dropdown */}\r\n\t\t\t\t\t\t{/* -- Basic Numbers -- */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(0)}</Grid> {/* Confirmed */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(1)}</Grid> {/* Hospitalized */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(2)}</Grid> {/* Deaths */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(3)}</Grid> {/* Recovered */}\r\n\t\t\t\t\t\t{/* -- Additional Numbers -- */}\r\n\t\t\t\t\t\t{ (this.state.hasTimeline) && (<Grid item xs={6}>{this.renderStreaks()}</Grid>) } {/* Streaks */}\r\n\t\t\t\t\t\t<Grid item xs={ this.state.hasTimeline ? 6 : 12}>{this.renderRates()}</Grid> {/* Rates */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\r\n\r\n\t\t\t\t\t{/* ******************************** Graphs Section ******************************** */}\r\n\t\t\t\t\t<br/>{ (this.state.hasTimeline) && (this.renderGraphButton())} {/* Show/Hide Graph Button */}\r\n\t\t\t\t\t<br/>{ (this.state.showGraph) && (this.renderGraphs())} {/* Graphs */}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Upper Bottom Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={6}>{this.renderRankingHeader()}</Grid> {/* Ranking Header */}\r\n\t\t\t\t\t\t<Grid item xs={2}>{this.renderCategoryDropdown()}</Grid> {/* Category Dropdown */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Bottom Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{this.renderRanking()} {/* Rankings */}\r\n\t\t\t\t\t\t<Grid item xs={9}>{this.renderMap(selectCategory)}</Grid> {/* Map */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t{/* ******************************** Footer ******************************** */}\r\n\t\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t\t<Paper className={classes.paper} style={{background: \"#8F8080\"}}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard for Tencent Thailand's Internship Project</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\r\n            </Typography>\r\n          </Paper>\r\n        </footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}