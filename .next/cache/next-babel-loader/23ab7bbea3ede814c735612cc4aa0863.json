{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nvar styles = function styles(theme) {\n  return {\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperFoot: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#777070\"\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(2)\n    },\n    root: {\n      backgroundColor: \"#000000\"\n    }\n  };\n};\n\nvar darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      useGlobal: false,\n      selectCountry: 'China',\n      selectCity: 'Beijing',\n      countries: [],\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.selectCountry != 'Thailand') {\n        this.setState({\n          useGlobal: true\n        });\n      }\n\n      if (this.state.selectCountry == 'Thailand') this.callAPIThailand(); //else this.callAPIGlobalTimeline(this.state.selectCity,this.state.selectCountry);\n\n      this.callAPIGlobalAll(new Date(2020, 7, 19)); //this.callAPIGlobal('','Thailand',new Date(),true);\n    } //Retrospective data (timeline)\n    //Provides graph functionality\n    //Taxing, over 200 csv files must be processed\n\n  }, {\n    key: \"callAPIGlobalTimeline\",\n    value: function callAPIGlobalTimeline(city, country) {\n      var data, dataN, prevConfirmed, prevHospitalized, prevDeaths, prevRecovered, sourcePrefix, markDate, tomorrow, now, cityIndex, countryIndex, conIndex, deathIndex, recIndex, lastIndex, formatChange, lines, markDateStr, sourceDate, response, date, values, i, _i, confirmed, hospitalized, deaths, recovered;\n\n      return _regeneratorRuntime.async(function callAPIGlobalTimeline$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = [];\n              dataN = 0;\n              prevConfirmed = 0;\n              prevHospitalized = 0;\n              prevDeaths = 0;\n              prevRecovered = 0;\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              markDate = new Date(2020, 0, 23);\n              tomorrow = new Date();\n              tomorrow.setDate(tomorrow.getDate() + 1);\n              now = tomorrow.getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              lastIndex = 1;\n              formatChange = new Date(2020, 2, 22).getTime();\n\n            case 18:\n              if (!(markDate.getTime() < now)) {\n                _context.next = 68;\n                break;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate); //console.log(lastIndex);\n              //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n              }\n\n              _context.prev = 24;\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 27:\n              response = _context.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context.next = 34;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](24);\n              console.log(_context.t0);\n\n            case 34:\n              markDate.setDate(markDate.getDate() + 1);\n\n              if (!(lines == '')) {\n                _context.next = 37;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 18);\n\n            case 37:\n              console.log(lastIndex);\n              date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              values = undefined;\n              if (lines[lastIndex]) values = lines[lastIndex].split(',');else lastIndex = 1;\n\n              if (!(values == undefined || city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context.next = 65;\n                break;\n              }\n\n              i = lastIndex + 1;\n\n            case 43:\n              if (!(i < lines.length)) {\n                _context.next = 53;\n                break;\n              }\n\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context.next = 48;\n                break;\n              }\n\n              values = undefined;\n              return _context.abrupt(\"continue\", 50);\n\n            case 48:\n              lastIndex = i;\n              return _context.abrupt(\"break\", 53);\n\n            case 50:\n              i++;\n              _context.next = 43;\n              break;\n\n            case 53:\n              if (!(values == undefined)) {\n                _context.next = 65;\n                break;\n              }\n\n              _i = 1;\n\n            case 55:\n              if (!(_i < lastIndex)) {\n                _context.next = 65;\n                break;\n              }\n\n              values = lines[_i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context.next = 60;\n                break;\n              }\n\n              values = undefined;\n              return _context.abrupt(\"continue\", 62);\n\n            case 60:\n              lastIndex = _i;\n              return _context.abrupt(\"break\", 65);\n\n            case 62:\n              _i++;\n              _context.next = 55;\n              break;\n\n            case 65:\n              if (values != undefined) {\n                confirmed = parseInt(values[conIndex]);\n                hospitalized = parseInt(values[10]);\n                deaths = parseInt(values[deathIndex]);\n                recovered = parseInt(values[recIndex]);\n                data[dataN] = {\n                  Date: date,\n                  Confirmed: confirmed,\n                  Hospitalized: hospitalized,\n                  Deaths: deaths,\n                  Recovered: recovered,\n                  NewConfirmed: confirmed - prevConfirmed,\n                  NewHospitalized: hospitalized - prevHospitalized,\n                  NewDeaths: deaths - prevDeaths,\n                  NewRecovered: recovered - prevRecovered\n                };\n                prevConfirmed = confirmed;\n                prevHospitalized = hospitalized;\n                prevDeaths = deaths;\n                prevRecovered = recovered;\n                dataN++;\n              }\n\n              _context.next = 18;\n              break;\n\n            case 68:\n              console.log(data);\n              this.processData(sourcePrefix, data);\n\n            case 70:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[24, 31]], Promise);\n    } //For map\n\n  }, {\n    key: \"callAPIGlobalAll\",\n    value: function callAPIGlobalAll(markDate) {\n      var countries, countriesN, data, sourcePrefix, formatChange, cityIndex, countryIndex, conIndex, deathIndex, recIndex, quoteLimit, lines, markDateStr, sourceDate, response, i, values, country, confirmed, hospitalized, deaths, recovered, citiesN;\n      return _regeneratorRuntime.async(function callAPIGlobalAll$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              countries = [];\n              countriesN = 0;\n              data = new Object();\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              formatChange = new Date(2020, 2, 22).getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              quoteLimit = 0; //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n                quoteLimit = 2;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate);\n              _context2.prev = 16;\n              _context2.next = 19;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 19:\n              response = _context2.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context2.next = 26;\n              break;\n\n            case 23:\n              _context2.prev = 23;\n              _context2.t0 = _context2[\"catch\"](16);\n              console.log(_context2.t0);\n\n            case 26:\n              if (!(lines != '')) {\n                _context2.next = 52;\n                break;\n              }\n\n              i = 1;\n\n            case 28:\n              if (!(i < lines.length)) {\n                _context2.next = 50;\n                break;\n              }\n\n              if (!((lines[i].match(/\"/g) || []).length > quoteLimit)) {\n                _context2.next = 31;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 47);\n\n            case 31:\n              values = lines[i].split(',');\n              country = values[countryIndex];\n              confirmed = parseInt(values[conIndex]);\n              hospitalized = parseInt(values[10]);\n              deaths = parseInt(values[deathIndex]);\n              recovered = parseInt(values[recIndex]);\n\n              if (data[country] != undefined) {\n                confirmed += data[country][\"Confirmed\"];\n                hospitalized += data[country][\"Hospitalized\"];\n                deaths += data[country][\"Deaths\"];\n                recovered += data[country][\"Recovered\"];\n              } else {\n                data[country] = new Object();\n                data[country].CitiesN = 0;\n                countries[countriesN] = country;\n                countriesN++;\n              }\n\n              citiesN = data[country].CitiesN;\n              data[country].Confirmed = confirmed;\n              data[country].Hospitalized = hospitalized;\n              data[country].Deaths = deaths;\n              data[country].Recovered = recovered;\n              data[country].RecoveryRate = recovered / confirmed * 100;\n              data[country].MortalityRate = deaths / confirmed * 100;\n              data[country].Cities[citiesN] = values[cityIndex];\n              data[country].CitiesN = citiesN + 1;\n\n            case 47:\n              i++;\n              _context2.next = 28;\n              break;\n\n            case 50:\n              console.log(data);\n              this.setState({\n                countries: countries,\n                globalData: data\n              }); //console.log(this.state.countries);\n\n            case 52:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[16, 23]], Promise);\n    } //For when other country is selected\n    //No timeline functionality\n    //Doesn't really work as past data is required for 'streaks' anyway\n\n  }, {\n    key: \"callAPIGlobal\",\n    value: function callAPIGlobal(city, country, markDate, process) {\n      var data, thisData, sourcePrefix, lines, markDateStr, sourceDate, response, i, values, confirmed, deaths, recovered, prevData;\n      return _regeneratorRuntime.async(function callAPIGlobal$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = [];\n              data[0] = {\n                Date: '',\n                Confirmed: 0,\n                Hospitalized: 0,\n                Deaths: 0,\n                Recovered: 0,\n                RecoveryRate: 0,\n                MortalityRate: 0,\n                NewConfirmed: 0,\n                NewHospitalized: 0,\n                NewDeaths: 0,\n                NewRecovered: 0\n              };\n              thisData = data[0];\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              lines = '';\n\n            case 5:\n              if (!(lines == '')) {\n                _context3.next = 23;\n                break;\n              }\n\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              markDate.setDate(markDate.getDate() - 1);\n              console.log(sourceDate);\n              _context3.prev = 10;\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 13:\n              response = _context3.sent;\n              lines = response.data.split(/\\r?\\n/);\n              thisData.Date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              _context3.next = 21;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](10);\n              console.log(_context3.t0);\n\n            case 21:\n              _context3.next = 5;\n              break;\n\n            case 23:\n              i = 1;\n\n            case 24:\n              if (!(i < lines.length)) {\n                _context3.next = 42;\n                break;\n              }\n\n              if (!((lines[i].match(/\"/g) || []).length > 2)) {\n                _context3.next = 27;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 39);\n\n            case 27:\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[2] || country != '' && country != values[3])) {\n                _context3.next = 30;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 39);\n\n            case 30:\n              confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\n              deaths = thisData[\"Deaths\"] + parseInt(values[8]);\n              recovered = thisData[\"Recovered\"] + parseInt(values[9]);\n              thisData.Confirmed = confirmed;\n              thisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\n              thisData.Deaths = deaths;\n              thisData.Recovered = recovered;\n              thisData.RecoveryRate = recovered / confirmed * 100;\n              thisData.MortalityRate = deaths / confirmed * 100;\n\n            case 39:\n              i++;\n              _context3.next = 24;\n              break;\n\n            case 42:\n              if (!process) {\n                _context3.next = 53;\n                break;\n              }\n\n              _context3.next = 45;\n              return _regeneratorRuntime.awrap(this.callAPIGlobal(city, country, markDate, false));\n\n            case 45:\n              prevData = _context3.sent;\n              console.log(\"DUH\");\n              console.log(prevData);\n              thisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\n              thisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\n              thisData.NewDeaths = thisData.Deaths - prevData.Deaths;\n              thisData.NewRecovered = thisData.Recovered - prevData.Recovered;\n              this.processData(sourcePrefix, data);\n\n            case 53:\n              console.log(data);\n              return _context3.abrupt(\"return\", thisData);\n\n            case 55:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[10, 18]], Promise);\n    } //For when Thailand is selected\n\n  }, {\n    key: \"callAPIThailand\",\n    value: function callAPIThailand() {\n      var source, data, response;\n      return _regeneratorRuntime.async(function callAPIThailand$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              source = 'https://covid19.th-stat.com/api/open/timeline';\n              data = [];\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(source));\n\n            case 5:\n              response = _context4.sent;\n              console.log(response);\n              data = response.data['Data'];\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log(_context4.t0);\n\n            case 13:\n              this.processData(source, data);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[2, 10]], Promise);\n    }\n  }, {\n    key: \"getLastDate\",\n    value: function getLastDate(type, data) {\n      for (var i = data.length - 1; i >= 0; i--) {\n        if (data[i][type] != 0) return data[i]['Date'];\n      }\n    }\n  }, {\n    key: \"getDateDiff\",\n    value: function getDateDiff(date) {\n      var now = new Date().getTime();\n      return Math.floor((now - new Date(date).getTime()) / 86400000);\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(source, data) {\n      if (data.length <= 0) return;\n      var lastData = data.slice(-1)[0];\n      var dataReformatted = data.slice().map(function (d) {\n        return Object.assign({}, d, {\n          Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n        });\n      });\n      var lastConfirmed = this.getLastDate('NewConfirmed', data);\n      var lastDeath = this.getLastDate('NewDeaths', data);\n      var lastConfirmedFormatted = lastConfirmed.slice(3, 6) + lastConfirmed.slice(0, 3) + lastConfirmed.slice(6);\n      var lastDeathFormatted = lastDeath.slice(3, 6) + lastDeath.slice(0, 3) + lastDeath.slice(6);\n      var lastUpdated = lastData['Date'];\n      this.setState({\n        dataTimeline: dataReformatted,\n        dataTimeline15: dataReformatted.slice(1).slice(-15),\n        data_text: {\n          source: source,\n          updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n          confirmed: lastData['Confirmed'],\n          hospitalized: lastData['Hospitalized'],\n          deaths: lastData['Deaths'],\n          recovered: lastData['Recovered'],\n          newConfirmed: lastData['NewConfirmed'],\n          newHospitalized: lastData['NewHospitalized'],\n          newDeaths: lastData['NewDeaths'],\n          newRecovered: lastData['NewRecovered']\n        },\n        data_pie: [{\n          name: 'Hospitalized',\n          value: lastData['Hospitalized']\n        }, {\n          name: 'Deaths',\n          value: lastData['Deaths']\n        }, {\n          name: 'Recovered',\n          value: lastData['Recovered']\n        }],\n        lastConfirmed: lastConfirmedFormatted,\n        lastDeath: lastDeathFormatted,\n        noConfirmedStreak: this.getDateDiff(lastConfirmed),\n        noDeathStreak: this.getDateDiff(lastDeath),\n        rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n        rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var graphBlue = '#20A0E0';\n      var graphYellow = '#FFC060';\n      var graphRed = '#E04040';\n      var graphGreen = '#80E080';\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie;\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: '#BB0A1E'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 8\n        }\n      }, \"Simple COVID-19 Dashboard\")))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"right\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 9\n        }\n      }, \"Confirmed\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newConfirmed.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 9\n        }\n      }, \"Hospitalized\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newHospitalized.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }\n      }, \"Deaths\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newDeaths.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 9\n        }\n      }, \"Recovered\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newRecovered.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 9\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 7\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 7\n        }\n      }, \"Show/Hide Graph\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 7\n        }\n      }), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }\n      })), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: graphBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: graphYellow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: graphBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: graphYellow,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: graphRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: graphGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }\n      })))))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paperFoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 7\n        }\n      }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\"), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/App.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperFoot","footer","palette","background","marginTop","root","darkTheme","type","App","props","state","useGlobal","selectCountry","selectCity","countries","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","setState","callAPIThailand","callAPIGlobalAll","Date","city","country","data","dataN","prevConfirmed","prevHospitalized","prevDeaths","prevRecovered","sourcePrefix","markDate","tomorrow","setDate","getDate","now","getTime","cityIndex","countryIndex","conIndex","deathIndex","recIndex","lastIndex","formatChange","lines","markDateStr","toISOString","sourceDate","slice","getFullYear","console","log","get","headers","response","split","date","replace","values","undefined","i","length","parseInt","Confirmed","Hospitalized","Deaths","Recovered","NewConfirmed","NewHospitalized","NewDeaths","NewRecovered","processData","countriesN","Object","quoteLimit","match","CitiesN","citiesN","RecoveryRate","MortalityRate","Cities","globalData","process","thisData","callAPIGlobal","prevData","source","Math","floor","lastData","dataReformatted","map","d","assign","getLastDate","lastConfirmedFormatted","lastDeathFormatted","lastUpdated","name","value","getDateDiff","toFixed","graphBlue","graphYellow","graphRed","graphGreen","classes","toLocaleString","top","right","left","bottom","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n  \nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#FFFEFE\",\n  },\n\tpaperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#777070\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2),\n  },\n\troot: {\n    backgroundColor: \"#000000\",\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuseGlobal: false,\n\t\t\tselectCountry: 'China',\n\t\t\tselectCity: 'Beijing',\n\t\t\tcountries: [],\n\t\t\tdataTimeline: [],\n\t\t\tdataTimeline15: [],\n\t\t\tdata_text: {\n\t\t\t\tupdatedDate: '',\n\t\t\t\tconfirmed: '',\n\t\t\t\thospitalized: '',\n\t\t\t\tdeaths: '',\n\t\t\t\trecovered: '',\n\t\t\t\tnewConfirmed: '',\n\t\t\t\tnewHospitalized: '',\n\t\t\t\tnewDeaths: '',\n\t\t\t\tnewRecovered: '',\n\t\t\t},\n\t\t\tdata_pie: [{}],\n\t\t\tlastConfirmed: 0,\n\t\t\tlastDeath: 0,\n\t\t\tnoConfirmedStreak: 0,\n\t\t\tnoDeathStreak: 0,\n\t\t\trateRecovery: 0,\n\t\t\trateDeath: 0,\n\t\t\tshowGraph: false,\n\t\t};\n  }\n  \n  componentDidMount() {\n\t\tif (this.state.selectCountry != 'Thailand') {\n\t\t\tthis.setState({ useGlobal: true });\n\t\t}\n\t\t\n\t\tif (this.state.selectCountry == 'Thailand')\n\t\t\tthis.callAPIThailand();\n\t\t//else this.callAPIGlobalTimeline(this.state.selectCity,this.state.selectCountry);\n\t\tthis.callAPIGlobalAll(new Date(2020,7,19));\n\t\t//this.callAPIGlobal('','Thailand',new Date(),true);\n  }\n\t\n\t//Retrospective data (timeline)\n\t//Provides graph functionality\n\t//Taxing, over 200 csv files must be processed\n\tasync callAPIGlobalTimeline(city, country) {\n\t\t\n\t\tlet data = [];\n\t\tlet dataN = 0;\n\t\t\n\t\tlet prevConfirmed = 0;\n\t\tlet prevHospitalized = 0;\n\t\tlet prevDeaths = 0;\n\t\tlet prevRecovered = 0;\n\t\t\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tlet markDate = new Date(2020,0,23);\n\t\tconst tomorrow = new Date();\n\t\ttomorrow.setDate(tomorrow.getDate()+1);\n\t\tconst now = tomorrow.getTime();\n\t\t\n\t\tlet cityIndex = 0;\n\t\tlet countryIndex = 1;\n\t\tlet conIndex = 3;\n\t\tlet deathIndex = 4;\n\t\tlet recIndex = 5;\n\t\t\n\t\tlet lastIndex = 1;\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\n\t\t\n\t\twhile (markDate.getTime() < now) {\n\t\t\tlet lines = '';\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tconsole.log(sourceDate);\n\t\t\t//console.log(lastIndex);\n\t\t\t\n\t\t\t//Workaround for source's formatting inconsistencies\n\t\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\n\t\t\t\tcityIndex = 2;\n\t\t\t\tcountryIndex = 3;\n\t\t\t\tconIndex = 7;\n\t\t\t\tdeathIndex = 8;\n\t\t\t\trecIndex = 9;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\t\n\t\t\tmarkDate.setDate(markDate.getDate()+1);\n\t\t\t\n\t\t\tif (lines == '')\n\t\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconsole.log(lastIndex);\n\t\t\tconst date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\tlet values = undefined;\n\t\t\tif (lines[lastIndex])\n\t\t\t\tvalues = lines[lastIndex].split(',');\n\t\t\telse lastIndex = 1;\n\t\t\t\n\t\t\tif (values == undefined || (city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex]))\n\t\t\t{\n\t\t\t\tfor (let i=lastIndex+1; i<lines.length; i++) {\n\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlastIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (values == undefined) {\n\t\t\t\t\tfor (let i=1; i<lastIndex; i++) {\n\t\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (values != undefined) {\n\t\t\t\tconst confirmed = parseInt(values[conIndex]);\n\t\t\t\tconst hospitalized = parseInt(values[10]);\n\t\t\t\tconst deaths = parseInt(values[deathIndex]);\n\t\t\t\tconst recovered = parseInt(values[recIndex]);\n\t\t\t\t\n\t\t\t\tdata[dataN] = {\n\t\t\t\t\tDate: date,\n\t\t\t\t\tConfirmed: confirmed,\n\t\t\t\t\tHospitalized: hospitalized,\n\t\t\t\t\tDeaths: deaths,\n\t\t\t\t\tRecovered: recovered,\n\t\t\t\t\tNewConfirmed: confirmed - prevConfirmed,\n\t\t\t\t\tNewHospitalized: hospitalized - prevHospitalized,\n\t\t\t\t\tNewDeaths: deaths - prevDeaths,\n\t\t\t\t\tNewRecovered: recovered - prevRecovered,\n\t\t\t\t}\n\t\t\t\tprevConfirmed = confirmed;\n\t\t\t\tprevHospitalized = hospitalized;\n\t\t\t\tprevDeaths = deaths;\n\t\t\t\tprevRecovered = recovered;\n\t\t\t\tdataN++;\n\t\t\t}\n\t\t}\n\t\tconsole.log(data);\n\t\t\n\t\tthis.processData(sourcePrefix, data);\n\t}\n\t\n\t//For map\n\tasync callAPIGlobalAll(markDate) {\n\t\t\n\t\tlet countries = [];\n\t\tlet countriesN = 0;\n\t\t\n\t\tlet data = new Object();\n\t\t\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\n\t\t\n\t\tlet cityIndex = 0;\n\t\tlet countryIndex = 1;\n\t\tlet conIndex = 3;\n\t\tlet deathIndex = 4;\n\t\tlet recIndex = 5;\n\t\tlet quoteLimit = 0;\n\t\t//Workaround for source's formatting inconsistencies\n\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\n\t\t\tcityIndex = 2;\n\t\t\tcountryIndex = 3;\n\t\t\tconIndex = 7;\n\t\t\tdeathIndex = 8;\n\t\t\trecIndex = 9;\n\t\t\tquoteLimit = 2;\n\t\t}\n\t\t\n\t\tlet lines = '';\n\t\tconst markDateStr = markDate.toISOString();\n\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\tconsole.log(sourceDate);\n\n\t\ttry {\n\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tif (lines != '') {\n\t\t\tfor (let i=1; i<lines.length; i++) {\n\t\t\t\tif ((lines[i].match(/\"/g) || []).length > quoteLimit)\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tconst values = lines[i].split(',');\n\t\t\t\tconst country = values[countryIndex];\n\t\t\t\tlet confirmed = parseInt(values[conIndex]);\n\t\t\t\tlet hospitalized = parseInt(values[10]);\n\t\t\t\tlet deaths = parseInt(values[deathIndex]);\n\t\t\t\tlet recovered = parseInt(values[recIndex]);\n\t\t\t\tif (data[country] != undefined) {\n\t\t\t\t\tconfirmed += data[country][\"Confirmed\"];\n\t\t\t\t\thospitalized += data[country][\"Hospitalized\"];\n\t\t\t\t\tdeaths += data[country][\"Deaths\"];\n\t\t\t\t\trecovered += data[country][\"Recovered\"];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdata[country] = new Object();\n\t\t\t\t\tdata[country].CitiesN = 0;\n\t\t\t\t\tcountries[countriesN] = country;\n\t\t\t\t\tcountriesN++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst citiesN = data[country].CitiesN;\n\t\t\t\tdata[country].Confirmed = confirmed;\n\t\t\t\tdata[country].Hospitalized = hospitalized;\n\t\t\t\tdata[country].Deaths = deaths;\n\t\t\t\tdata[country].Recovered = recovered;\n\t\t\t\tdata[country].RecoveryRate = (recovered/confirmed) * 100;\n\t\t\t\tdata[country].MortalityRate = (deaths/confirmed) * 100;\n\t\t\t\tdata[country].Cities[citiesN] = values[cityIndex];\n\t\t\t\tdata[country].CitiesN = citiesN + 1;\n\t\t\t}\n\t\t\tconsole.log(data);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcountries: countries,\n\t\t\t\tglobalData: data,\n\t\t\t});\n\t\t\t//console.log(this.state.countries);\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t//For when other country is selected\n\t//No timeline functionality\n\t//Doesn't really work as past data is required for 'streaks' anyway\n\tasync callAPIGlobal(city, country, markDate, process) {\n\t\t\n\t\tlet data = [];\n\t\tdata[0] = {\n\t\t\tDate: '',\n\t\t\tConfirmed: 0,\n\t\t\tHospitalized: 0,\n\t\t\tDeaths: 0,\n\t\t\tRecovered: 0,\n\t\t\tRecoveryRate: 0,\n\t\t\tMortalityRate: 0,\n\t\t\tNewConfirmed: 0,\n\t\t\tNewHospitalized: 0,\n\t\t\tNewDeaths: 0,\n\t\t\tNewRecovered: 0,\n\t\t};\n\t\tconst thisData = data[0];\n\t\t\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\t\n\t\tlet lines = '';\n\t\twhile (lines == '') {\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tmarkDate.setDate(markDate.getDate()-1);\n\t\t\tconsole.log(sourceDate);\n\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t\tthisData.Date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i=1; i<lines.length; i++) {\n\t\t\tif ((lines[i].match(/\"/g) || []).length > 2)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst values = lines[i].split(',');\n\t\t\tif ((city != '' && city != values[2]) || (country != '' && country != values[3]))\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\n\t\t\tconst deaths = thisData[\"Deaths\"] + parseInt(values[8]);\n\t\t\tconst recovered = thisData[\"Recovered\"] + parseInt(values[9]);\n\t\t\tthisData.Confirmed = confirmed;\n\t\t\tthisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\n\t\t\tthisData.Deaths = deaths;\n\t\t\tthisData.Recovered = recovered;\n\t\t\tthisData.RecoveryRate = (recovered/confirmed) * 100;\n\t\t\tthisData.MortalityRate = (deaths/confirmed) * 100;\n\t\t}\n\t\t\n\t\tif (process) {\n\t\t\tconst prevData = await this.callAPIGlobal(city, country, markDate, false);\n\t\t\tconsole.log(\"DUH\");\n\t\t\tconsole.log(prevData);\n\t\t\tthisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\n\t\t\tthisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\n\t\t\tthisData.NewDeaths = thisData.Deaths - prevData.Deaths;\n\t\t\tthisData.NewRecovered = thisData.Recovered - prevData.Recovered;\n\t\t\t\n\t\t\tthis.processData(sourcePrefix, data);\n\t\t}\n\t\t\n\t\tconsole.log(data);\n\t\t\n\t\treturn thisData;\n\t}\n\t\n\t//For when Thailand is selected\n\tasync callAPIThailand() {\n\t\t\n\t\tconst source = 'https://covid19.th-stat.com/api/open/timeline';\n\t\tlet data = [];\n\t\t\n\t\ttry {\n\t\t\tconst response = await axios.get(source);\n\t\t\tconsole.log(response);\n\t\t\tdata = response.data['Data'];\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tthis.processData(source, data);\n\t}\n\t\n\tgetLastDate(type, data) {\n\t\tfor (let i=data.length-1; i>=0; i--) {\n\t\t\tif (data[i][type] != 0)\n\t\t\t\treturn data[i]['Date'];\n\t\t}\n\t}\n\t\n\tgetDateDiff(date) {\n\t\tlet now = (new Date()).getTime();\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\n\t}\n\t\n\tprocessData(source, data) {\n\t\tif (data.length <= 0)\n\t\t\treturn;\n\t\t\n\t\tconst lastData = data.slice(-1)[0];\n\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\treturn (\n\t\t\t\tObject.assign({},d,{\n\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\t\n\t\tconst lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\tconst lastDeath = this.getLastDate('NewDeaths',data);\n\t\tconst lastConfirmedFormatted = lastConfirmed.slice(3,6) + lastConfirmed.slice(0,3) + lastConfirmed.slice(6);\n\t\tconst lastDeathFormatted = lastDeath.slice(3,6) + lastDeath.slice(0,3) + lastDeath.slice(6);\n\t\tconst lastUpdated = lastData['Date'];\n\t\t\n\t\tthis.setState({\n\t\t\tdataTimeline: dataReformatted,\n\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\tdata_text: {\n\t\t\t\tsource: source,\n\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t},\n\t\t\tdata_pie: [\n\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t],\n\t\t\tlastConfirmed: lastConfirmedFormatted,\n\t\t\tlastDeath: lastDeathFormatted,\n\t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n\t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t});\n\t}\n\t\n\trender() {\n\t\t\n\t\tconst graphBlue = '#20A0E0';\n\t\tconst graphYellow = '#FFC060';\n\t\tconst graphRed = '#E04040';\n\t\tconst graphGreen = '#80E080';\n\t\tconst { classes } = this.props;\n\t\tconst { dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar style={{background:'#BB0A1E'}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\n\t\t\t\t\t\t\t<b>Simple COVID-19 Dashboard</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.appBarSpacer}/>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\n\t\t\t\t\t\t\t\t<Typography align=\"right\" color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"right\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={data_text.source}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\n\t\t\t\t\t\t\t\t\t\tdata_text.source\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Confirmed</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Hospitalized</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Deaths</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Recovered</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\n\t\t\t\t\n\t\t\t\t\t{/*Button to toggle graph display*/}\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button onClick={() => this.setState({ showGraph: !this.state.showGraph })}>\n\t\t\t\t\t\t\tShow/Hide Graph\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\n\t\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={graphBlue} />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={graphRed} />\n\t\t\t\t\t\t\t\t\t</BarChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Pie, in total*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphYellow} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphRed} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphGreen} />\n\t\t\t\t\t\t\t\t\t\t</Pie>\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Bar, in total*/}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\n\t\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={graphBlue} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={graphYellow} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={graphRed} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={graphGreen} dot={false} />\n\t\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer className={classes.footer}>\n\t\t\t\t\t<Paper className={classes.paperFoot}>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tSimple Covid-19 Dashboard for Tencent Thailand's Internship Project\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\n            </Typography>\n          </Paper>\n        </footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}