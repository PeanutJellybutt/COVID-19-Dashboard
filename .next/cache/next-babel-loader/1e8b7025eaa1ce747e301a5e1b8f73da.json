{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#FFFEFE\"\n  },\n  paperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#777070\"\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2)\n  },\n  root: {\n    backgroundColor: \"#000000\"\n  }\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useGlobal: true,\n      selectCountry: 'Thailand',\n      selectCity: '',\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.useGlobal) this.callAPIThailand();else this.callAPIGlobal('', 'Thailand');\n  } //Retrospective data (timeline)\n  //Provides graph functionality\n  //Currently unused, too many format inconsistencies within source data\n\n\n  async callAPIGlobal(city, country) {\n    let data = [];\n    let dataN = 0;\n    let prevConfirmed = 0;\n    let prevHospitalized = 0;\n    let prevDeaths = 0;\n    let prevRecovered = 0;\n    const sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n    let markDate = new Date(2020, 0, 22);\n    const todayStr = new Date().toDateString();\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const now = tomorrow.getTime();\n    let cityIndex = 0;\n    let countryIndex = 1;\n    let conIndex = 3;\n    let deathIndex = 4;\n    let recIndex = 5;\n    let lastIndex = 1;\n\n    while (markDate.getTime() < now) {\n      let lines = '';\n      const markDateStr = markDate.toISOString();\n      const sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n      console.log(sourceDate);\n      console.log(lastIndex); //Workaround for source's formatting inconsistencies\n\n      if (sourceDate == '03-22-2020') {\n        cityIndex = 2;\n        countryIndex = 3;\n        conIndex = 7;\n        deathIndex = 8;\n        recIndex = 9;\n      }\n\n      try {\n        const response = await axios.get(sourcePrefix + sourceDate + '.csv', {\n          headers: {\n            'Content-Type': 'text/csv'\n          }\n        });\n        lines = response.data.split(/\\r?\\n/);\n      } catch (err) {\n        console.log(err);\n      }\n\n      markDate.setDate(markDate.getDate() + 1);\n      if (lines == '') continue;\n      const date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n      let values = undefined;\n      if (lines[lastIndex]) values = lines[lastIndex].split(',');else lastIndex = 1;\n\n      if (values == undefined || city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex]) {\n        for (let i = lastIndex + 1; i < lines.length; i++) {\n          values = lines[i].split(',');\n\n          if (city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex]) {\n            values = undefined;\n            continue;\n          }\n\n          lastIndex = i;\n          break;\n        }\n\n        if (values == undefined) {\n          for (let i = 1; i < lastIndex; i++) {\n            values = lines[i].split(',');\n\n            if (city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex]) {\n              values = undefined;\n              continue;\n            }\n\n            lastIndex = i;\n            break;\n          }\n        }\n      }\n\n      if (values != undefined) {\n        const confirmed = values[conIndex];\n        const hospitalized = values[10];\n        const deaths = values[deathIndex];\n        const recovered = values[recIndex];\n        data[dataN] = {\n          Date: date,\n          Confirmed: confirmed,\n          Hospitalized: hospitalized,\n          Deaths: deaths,\n          Recovered: recovered,\n          NewConfirmed: confirmed - prevConfirmed,\n          NewHospitalized: hospitalized - prevHospitalized,\n          NewDeaths: deaths - prevDeaths,\n          NewRecovered: recovered - prevRecovered\n        };\n        prevConfirmed = confirmed;\n        prevHospitalized = hospitalized;\n        prevDeaths = deaths;\n        prevRecovered = recovered;\n        dataN++;\n      }\n    }\n\n    console.log(data);\n    this.processData(sourcePrefix, data);\n  }\n\n  async callAPIThailand() {\n    const source = 'https://covid19.th-stat.com/api/open/timeline';\n    let data = [];\n\n    try {\n      const response = await axios.get(source);\n      console.log(response);\n      data = response.data['Data'];\n    } catch (err) {\n      console.log(err);\n    }\n\n    this.processData(source, data);\n  }\n\n  getLastDate(type, data) {\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (data[i][type] != 0) return data[i]['Date'];\n    }\n  }\n\n  getDateDiff(date) {\n    let now = new Date().getTime();\n    return Math.floor((now - new Date(date).getTime()) / 86400000);\n  }\n\n  processData(source, data) {\n    if (data.length <= 0) return;\n    const lastData = data.slice(-1)[0];\n    const dataReformatted = data.slice().map(d => {\n      return Object.assign({}, d, {\n        Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n      });\n    });\n    const lastConfirmed = this.getLastDate('NewConfirmed', data);\n    const lastDeath = this.getLastDate('NewDeaths', data);\n    const lastConfirmedFormatted = lastConfirmed.slice(3, 6) + lastConfirmed.slice(0, 3) + lastConfirmed.slice(6);\n    const lastDeathFormatted = lastDeath.slice(3, 6) + lastDeath.slice(0, 3) + lastDeath.slice(6);\n    const lastUpdated = lastData['Date'];\n    this.setState({\n      dataTimeline: dataReformatted,\n      dataTimeline15: dataReformatted.slice(1).slice(-15),\n      data_text: {\n        source: source,\n        updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n        confirmed: lastData['Confirmed'],\n        hospitalized: lastData['Hospitalized'],\n        deaths: lastData['Deaths'],\n        recovered: lastData['Recovered'],\n        newConfirmed: lastData['NewConfirmed'],\n        newHospitalized: lastData['NewHospitalized'],\n        newDeaths: lastData['NewDeaths'],\n        newRecovered: lastData['NewRecovered']\n      },\n      data_pie: [{\n        name: 'Hospitalized',\n        value: lastData['Hospitalized']\n      }, {\n        name: 'Deaths',\n        value: lastData['Deaths']\n      }, {\n        name: 'Recovered',\n        value: lastData['Recovered']\n      }],\n      lastConfirmed: lastConfirmedFormatted,\n      lastDeath: lastDeathFormatted,\n      noConfirmedStreak: this.getDateDiff(lastConfirmed),\n      noDeathStreak: this.getDateDiff(lastDeath),\n      rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n      rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n    });\n  }\n\n  render() {\n    const graphBlue = '#20A0E0';\n    const graphYellow = '#FFC060';\n    const graphRed = '#E04040';\n    const graphGreen = '#80E080';\n    const {\n      classes\n    } = this.props;\n    const {\n      dataTimeline,\n      dataTimeline15,\n      data_text,\n      data_pie\n    } = this.state;\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 4\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 5\n      }\n    }), __jsx(AppBar, {\n      style: {\n        background: '#BB0A1E'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 5\n      }\n    }, __jsx(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 8\n      }\n    }, \"Simple COVID-19 Dashboard\")))), __jsx(\"div\", {\n      className: classes.appBarSpacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 5\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, __jsx(MuiThemeProvider, {\n      theme: darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      align: \"right\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 10\n      }\n    }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n      variant: \"subtitle2\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      href: data_text.source,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 10\n      }\n    }, \" \", data_text.source)))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, \"Confirmed\"), __jsx(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, \"(\", data_text.newConfirmed.toLocaleString(), \")\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }, \"Hospitalized\"), __jsx(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }, \"(\", data_text.newHospitalized.toLocaleString(), \")\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, \"Deaths\"), __jsx(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }\n    }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }\n    }, \"(\", data_text.newDeaths.toLocaleString(), \")\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, \"Recovered\"), __jsx(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }, \"(\", data_text.newRecovered.toLocaleString(), \")\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }\n    }, \"Mortality Rate: \", this.state.rateDeath)))), !this.state.useGlobal && __jsx(React.Fragment, null, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }\n    }), __jsx(\"button\", {\n      onClick: () => this.setState({\n        showGraph: !this.state.showGraph\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 7\n      }\n    }, \"Show/Hide Graph\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 7\n      }\n    }), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    })), this.state.showGraph && //Whether or not to display graphs\n    __jsx(React.Fragment, null, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }\n    }, __jsx(BarChart, {\n      width: 500,\n      height: 300,\n      data: dataTimeline15,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 10\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewConfirmed\",\n      fill: graphBlue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewDeaths\",\n      fill: graphRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    }, __jsx(PieChart, {\n      width: 400,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 10\n      }\n    }, __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }), __jsx(Pie, {\n      dataKey: \"value\",\n      isAnimationActive: false,\n      data: data_pie,\n      outerRadius: 100,\n      label: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, __jsx(Cell, {\n      fill: graphYellow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 12\n      }\n    }), __jsx(Cell, {\n      fill: graphRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 12\n      }\n    }), __jsx(Cell, {\n      fill: graphGreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 12\n      }\n    })), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, __jsx(LineChart, {\n      data: dataTimeline,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 10\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Confirmed\",\n      stroke: graphBlue,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Hospitalized\",\n      stroke: graphYellow,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Deaths\",\n      stroke: graphRed,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Recovered\",\n      stroke: graphGreen,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    })))))))), __jsx(\"footer\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paperFoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 7\n      }\n    }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\"), __jsx(Typography, {\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }\n    }, \"By Thanjira S. and Woottipat H.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/App.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperFoot","footer","palette","background","marginTop","root","darkTheme","type","App","Component","constructor","props","state","useGlobal","selectCountry","selectCity","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","componentDidMount","callAPIThailand","callAPIGlobal","city","country","data","dataN","prevConfirmed","prevHospitalized","prevDeaths","prevRecovered","sourcePrefix","markDate","Date","todayStr","toDateString","tomorrow","setDate","getDate","now","getTime","cityIndex","countryIndex","conIndex","deathIndex","recIndex","lastIndex","lines","markDateStr","toISOString","sourceDate","slice","getFullYear","console","log","response","get","headers","split","err","date","replace","values","undefined","i","length","Confirmed","Hospitalized","Deaths","Recovered","NewConfirmed","NewHospitalized","NewDeaths","NewRecovered","processData","source","getLastDate","getDateDiff","Math","floor","lastData","dataReformatted","map","d","Object","assign","lastConfirmedFormatted","lastDeathFormatted","lastUpdated","setState","name","value","toFixed","render","graphBlue","graphYellow","graphRed","graphGreen","classes","toLocaleString","top","right","left","bottom"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n  \nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#FFFEFE\",\n  },\n\tpaperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#777070\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2),\n  },\n\troot: {\n    backgroundColor: \"#000000\",\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tuseGlobal: true,\n\t\t\tselectCountry: 'Thailand',\n\t\t\tselectCity: '',\n\t\t\tdataTimeline: [],\n\t\t\tdataTimeline15: [],\n\t\t\tdata_text: {\n\t\t\t\tupdatedDate: '',\n\t\t\t\tconfirmed: '',\n\t\t\t\thospitalized: '',\n\t\t\t\tdeaths: '',\n\t\t\t\trecovered: '',\n\t\t\t\tnewConfirmed: '',\n\t\t\t\tnewHospitalized: '',\n\t\t\t\tnewDeaths: '',\n\t\t\t\tnewRecovered: '',\n\t\t\t},\n\t\t\tdata_pie: [{}],\n\t\t\tlastConfirmed: 0,\n\t\t\tlastDeath: 0,\n\t\t\tnoConfirmedStreak: 0,\n\t\t\tnoDeathStreak: 0,\n\t\t\trateRecovery: 0,\n\t\t\trateDeath: 0,\n\t\t\tshowGraph: false,\n\t\t};\n  }\n  \n  componentDidMount() {\n\t\tif (!this.state.useGlobal)\n\t\t\tthis.callAPIThailand();\n\t\telse this.callAPIGlobal('','Thailand');\n  }\n\t\n\t//Retrospective data (timeline)\n\t//Provides graph functionality\n\t//Currently unused, too many format inconsistencies within source data\n\tasync callAPIGlobal(city, country) {\n\t\t\n\t\tlet data = [];\n\t\tlet dataN = 0;\n\t\t\n\t\tlet prevConfirmed = 0;\n\t\tlet prevHospitalized = 0;\n\t\tlet prevDeaths = 0;\n\t\tlet prevRecovered = 0;\n\t\t\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tlet markDate = new Date(2020,0,22);\n\t\tconst todayStr = (new Date()).toDateString();\n\t\tconst tomorrow = new Date();\n\t\ttomorrow.setDate(tomorrow.getDate()+1);\n\t\tconst now = tomorrow.getTime();\n\t\t\n\t\tlet cityIndex = 0;\n\t\tlet countryIndex = 1;\n\t\tlet conIndex = 3;\n\t\tlet deathIndex = 4;\n\t\tlet recIndex = 5;\n\t\t\n\t\tlet lastIndex = 1;\n\t\t\n\t\twhile (markDate.getTime() < now) {\n\t\t\tlet lines = '';\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tconsole.log(sourceDate);\n\t\t\tconsole.log(lastIndex);\n\t\t\t\n\t\t\t//Workaround for source's formatting inconsistencies\n\t\t\tif (sourceDate == '03-22-2020') {\n\t\t\t\tcityIndex = 2;\n\t\t\t\tcountryIndex = 3;\n\t\t\t\tconIndex = 7;\n\t\t\t\tdeathIndex = 8;\n\t\t\t\trecIndex = 9;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\t\n\t\t\tmarkDate.setDate(markDate.getDate()+1);\n\t\t\t\n\t\t\tif (lines == '')\n\t\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\tlet values = undefined;\n\t\t\tif (lines[lastIndex])\n\t\t\t\tvalues = lines[lastIndex].split(',');\n\t\t\telse lastIndex = 1;\n\t\t\t\n\t\t\tif (values == undefined || (city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex]))\n\t\t\t{\n\t\t\t\tfor (let i=lastIndex+1; i<lines.length; i++) {\n\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlastIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (values == undefined) {\n\t\t\t\t\tfor (let i=1; i<lastIndex; i++) {\n\t\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (values != undefined) {\n\t\t\t\tconst confirmed = values[conIndex];\n\t\t\t\tconst hospitalized = values[10];\n\t\t\t\tconst deaths = values[deathIndex];\n\t\t\t\tconst recovered = values[recIndex];\n\t\t\t\t\n\t\t\t\tdata[dataN] = {\n\t\t\t\t\tDate: date,\n\t\t\t\t\tConfirmed: confirmed,\n\t\t\t\t\tHospitalized: hospitalized,\n\t\t\t\t\tDeaths: deaths,\n\t\t\t\t\tRecovered: recovered,\n\t\t\t\t\tNewConfirmed: confirmed - prevConfirmed,\n\t\t\t\t\tNewHospitalized: hospitalized - prevHospitalized,\n\t\t\t\t\tNewDeaths: deaths - prevDeaths,\n\t\t\t\t\tNewRecovered: recovered - prevRecovered,\n\t\t\t\t}\n\t\t\t\tprevConfirmed = confirmed;\n\t\t\t\tprevHospitalized = hospitalized;\n\t\t\t\tprevDeaths = deaths;\n\t\t\t\tprevRecovered = recovered;\n\t\t\t\tdataN++;\n\t\t\t}\n\t\t}\n\t\tconsole.log(data);\n\t\t\n\t\tthis.processData(sourcePrefix, data);\n\t}\n\t\n\tasync callAPIThailand() {\n\t\t\n\t\tconst source = 'https://covid19.th-stat.com/api/open/timeline';\n\t\tlet data = [];\n\t\t\n\t\ttry {\n\t\t\tconst response = await axios.get(source);\n\t\t\tconsole.log(response);\n\t\t\tdata = response.data['Data'];\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tthis.processData(source, data);\n\t}\n\t\n\tgetLastDate(type, data) {\n\t\tfor (let i=data.length-1; i>=0; i--) {\n\t\t\tif (data[i][type] != 0)\n\t\t\t\treturn data[i]['Date'];\n\t\t}\n\t}\n\t\n\tgetDateDiff(date) {\n\t\tlet now = (new Date()).getTime();\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\n\t}\n\t\n\tprocessData(source, data) {\n\t\tif (data.length <= 0)\n\t\t\treturn;\n\t\t\n\t\tconst lastData = data.slice(-1)[0];\n\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\treturn (\n\t\t\t\tObject.assign({},d,{\n\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\t\n\t\tconst lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\tconst lastDeath = this.getLastDate('NewDeaths',data);\n\t\tconst lastConfirmedFormatted = lastConfirmed.slice(3,6) + lastConfirmed.slice(0,3) + lastConfirmed.slice(6);\n\t\tconst lastDeathFormatted = lastDeath.slice(3,6) + lastDeath.slice(0,3) + lastDeath.slice(6);\n\t\tconst lastUpdated = lastData['Date'];\n\t\t\n\t\tthis.setState({\n\t\t\tdataTimeline: dataReformatted,\n\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\tdata_text: {\n\t\t\t\tsource: source,\n\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t},\n\t\t\tdata_pie: [\n\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t],\n\t\t\tlastConfirmed: lastConfirmedFormatted,\n\t\t\tlastDeath: lastDeathFormatted,\n\t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n\t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t});\n\t}\n\t\n\trender() {\n\t\t\n\t\tconst graphBlue = '#20A0E0';\n\t\tconst graphYellow = '#FFC060';\n\t\tconst graphRed = '#E04040';\n\t\tconst graphGreen = '#80E080';\n\t\tconst { classes } = this.props;\n\t\tconst { dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar style={{background:'#BB0A1E'}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\n\t\t\t\t\t\t\t<b>Simple COVID-19 Dashboard</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.appBarSpacer}/>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\n\t\t\t\t\t\t\t\t<Typography align=\"right\" color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"right\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={data_text.source}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\n\t\t\t\t\t\t\t\t\t\tdata_text.source\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Confirmed</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Hospitalized</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Deaths</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Recovered</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\n\t\t\t\t\n\t\t\t\t\t{/*Button to toggle graph display*/}\n\t\t\t\t\t{ !this.state.useGlobal && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button onClick={() => this.setState({ showGraph: !this.state.showGraph })}>\n\t\t\t\t\t\t\tShow/Hide Graph\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\n\t\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={graphBlue} />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={graphRed} />\n\t\t\t\t\t\t\t\t\t</BarChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Pie, in total*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphYellow} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphRed} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphGreen} />\n\t\t\t\t\t\t\t\t\t\t</Pie>\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Bar, in total*/}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\n\t\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={graphBlue} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={graphYellow} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={graphRed} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={graphGreen} dot={false} />\n\t\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer className={classes.footer}>\n\t\t\t\t\t<Paper className={classes.paperFoot}>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tSimple Covid-19 Dashboard for Tencent Thailand's Internship Project\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\n            </Typography>\n          </Paper>\n        </footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}