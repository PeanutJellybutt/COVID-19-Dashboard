{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nvar styles = function styles(theme) {\n  return {\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperFoot: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#777070\"\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(2)\n    },\n    root: {\n      backgroundColor: \"#000000\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  };\n};\n\nvar darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var refDate = new Date(2020, 7, 20);\n      this.callAPIGlobalAll(refDate);\n      if (this.state.selectCountry == 'Thailand') this.callAPIThailand();else this.callAPIGlobal(this.state.selectCity, this.state.selectCountry, refDate); //else this.callAPIGlobalTimeline(this.state.selectCity,this.state.selectCountry);\n    } //For ranking and map functionalities\n    //Only data from one day/file is processed\n\n  }, {\n    key: \"callAPIGlobalAll\",\n    value: function callAPIGlobalAll(markDate) {\n      var countries, countriesN, data, sourceRef, sourcePrefix, formatChange, cityIndex, countryIndex, conIndex, deathIndex, recIndex, quoteLimit, lines, markDateStr, sourceDate, response, i, values, country, city, confirmed, hospitalized, deaths, recovered, citiesN;\n      return _regeneratorRuntime.async(function callAPIGlobalAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              countries = [];\n              countriesN = 0;\n              data = new Object();\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              formatChange = new Date(2020, 2, 22).getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              quoteLimit = 0; //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n                quoteLimit = 2;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate);\n              _context.prev = 17;\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 20:\n              response = _context.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context.next = 27;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](17);\n              console.log(_context.t0);\n\n            case 27:\n              if (!(lines != '')) {\n                _context.next = 53;\n                break;\n              }\n\n              i = 1;\n\n            case 29:\n              if (!(i < lines.length)) {\n                _context.next = 51;\n                break;\n              }\n\n              if (!(lines[i] == '' || (lines[i].match(/\"/g) || []).length > quoteLimit)) {\n                _context.next = 32;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 48);\n\n            case 32:\n              values = lines[i].split(',');\n              country = values[countryIndex];\n              city = values[cityIndex];\n              confirmed = parseInt(values[conIndex]);\n              hospitalized = parseInt(values[10]);\n              deaths = parseInt(values[deathIndex]);\n              recovered = parseInt(values[recIndex]);\n\n              if (data[country] != undefined) {\n                confirmed += data[country][\"Confirmed\"];\n                hospitalized += data[country][\"Hospitalized\"];\n                deaths += data[country][\"Deaths\"];\n                recovered += data[country][\"Recovered\"];\n              } else {\n                data[country] = new Object();\n                data[country].Cities = [];\n                data[country].CitiesN = 0;\n                countries[countriesN] = country;\n                countriesN++;\n              }\n\n              citiesN = data[country].CitiesN;\n              data[country].Confirmed = confirmed;\n              data[country].Hospitalized = hospitalized;\n              data[country].Deaths = deaths;\n              data[country].Recovered = recovered;\n              data[country].RecoveryRate = recovered / confirmed * 100;\n              data[country].MortalityRate = deaths / confirmed * 100;\n\n              if (city != '') {\n                data[country].Cities[citiesN] = city;\n                data[country].CitiesN = citiesN + 1;\n              }\n\n            case 48:\n              i++;\n              _context.next = 29;\n              break;\n\n            case 51:\n              console.log(data);\n              this.setState({\n                countries: countries,\n                globalData: data\n              }); //console.log(this.state.countries);\n\n            case 53:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[17, 24]], Promise);\n    } //When foreign country is selected\n    //Provides retrospective data and graph functionalities\n    //Taxing, over 200 days/files must be processed\n    //Somehow sometimes fast, sometimes slow. Cause still unknown.\n\n  }, {\n    key: \"callAPIGlobalTimeline\",\n    value: function callAPIGlobalTimeline(city, country) {\n      var data, dataN, prevConfirmed, prevHospitalized, prevDeaths, prevRecovered, sourceRef, sourcePrefix, markDate, tomorrow, now, cityIndex, countryIndex, conIndex, deathIndex, recIndex, lastIndex, formatChange, lines, markDateStr, sourceDate, response, date, values, i, _i, confirmed, hospitalized, deaths, recovered;\n\n      return _regeneratorRuntime.async(function callAPIGlobalTimeline$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (city == 'Overall') {\n                city = '';\n              }\n\n              data = [{}];\n              dataN = 0;\n              prevConfirmed = 0;\n              prevHospitalized = 0;\n              prevDeaths = 0;\n              prevRecovered = 0;\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              markDate = new Date(2020, 0, 23);\n              tomorrow = new Date();\n              tomorrow.setDate(tomorrow.getDate() + 1);\n              now = tomorrow.getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              lastIndex = 1;\n              formatChange = new Date(2020, 2, 22).getTime();\n\n            case 20:\n              if (!(markDate.getTime() < now)) {\n                _context2.next = 70;\n                break;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate); //console.log(lastIndex);\n              //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n              }\n\n              _context2.prev = 26;\n              _context2.next = 29;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 29:\n              response = _context2.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context2.next = 36;\n              break;\n\n            case 33:\n              _context2.prev = 33;\n              _context2.t0 = _context2[\"catch\"](26);\n              console.log(_context2.t0);\n\n            case 36:\n              markDate.setDate(markDate.getDate() + 1);\n\n              if (!(lines == '')) {\n                _context2.next = 39;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 20);\n\n            case 39:\n              console.log(lastIndex);\n              date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              values = undefined;\n              if (lines[lastIndex]) values = lines[lastIndex].split(',');else lastIndex = 1;\n\n              if (!(values == undefined || city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 67;\n                break;\n              }\n\n              i = lastIndex + 1;\n\n            case 45:\n              if (!(i < lines.length)) {\n                _context2.next = 55;\n                break;\n              }\n\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 50;\n                break;\n              }\n\n              values = undefined;\n              return _context2.abrupt(\"continue\", 52);\n\n            case 50:\n              lastIndex = i;\n              return _context2.abrupt(\"break\", 55);\n\n            case 52:\n              i++;\n              _context2.next = 45;\n              break;\n\n            case 55:\n              if (!(values == undefined)) {\n                _context2.next = 67;\n                break;\n              }\n\n              _i = 1;\n\n            case 57:\n              if (!(_i < lastIndex)) {\n                _context2.next = 67;\n                break;\n              }\n\n              values = lines[_i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 62;\n                break;\n              }\n\n              values = undefined;\n              return _context2.abrupt(\"continue\", 64);\n\n            case 62:\n              lastIndex = _i;\n              return _context2.abrupt(\"break\", 67);\n\n            case 64:\n              _i++;\n              _context2.next = 57;\n              break;\n\n            case 67:\n              if (values != undefined) {\n                confirmed = parseInt(values[conIndex]);\n                hospitalized = parseInt(values[10]);\n                deaths = parseInt(values[deathIndex]);\n                recovered = parseInt(values[recIndex]);\n                data[dataN] = {\n                  Date: date,\n                  Confirmed: confirmed,\n                  Hospitalized: hospitalized,\n                  Deaths: deaths,\n                  Recovered: recovered,\n                  NewConfirmed: confirmed - prevConfirmed,\n                  NewHospitalized: hospitalized - prevHospitalized,\n                  NewDeaths: deaths - prevDeaths,\n                  NewRecovered: recovered - prevRecovered\n                };\n                prevConfirmed = confirmed;\n                prevHospitalized = hospitalized;\n                prevDeaths = deaths;\n                prevRecovered = recovered;\n                dataN++;\n              }\n\n              _context2.next = 20;\n              break;\n\n            case 70:\n              console.log(data);\n              this.processData(sourceRef, data);\n\n            case 72:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[26, 33]], Promise);\n    } //When foreign country is selected\n    //No streak data or timeline functionality\n    //Only data from two days/files is processed\n\n  }, {\n    key: \"callAPIGlobal\",\n    value: function callAPIGlobal(city, country, markDate) {\n      var process,\n          data,\n          thisData,\n          sourceRef,\n          sourcePrefix,\n          lines,\n          markDateStr,\n          sourceDate,\n          response,\n          i,\n          values,\n          confirmed,\n          deaths,\n          recovered,\n          prevData,\n          _args3 = arguments;\n      return _regeneratorRuntime.async(function callAPIGlobal$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              process = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : true;\n\n              if (city == 'Overall') {\n                city = '';\n              }\n\n              data = [{}];\n              data[0] = {\n                Date: '',\n                Confirmed: 0,\n                Hospitalized: 0,\n                Deaths: 0,\n                Recovered: 0,\n                RecoveryRate: 0,\n                MortalityRate: 0,\n                NewConfirmed: 0,\n                NewHospitalized: 0,\n                NewDeaths: 0,\n                NewRecovered: 0\n              };\n              thisData = data[0];\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              lines = '';\n\n            case 8:\n              if (!(lines == '')) {\n                _context3.next = 26;\n                break;\n              }\n\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              markDate.setDate(markDate.getDate() - 1);\n              console.log(sourceDate);\n              _context3.prev = 13;\n              _context3.next = 16;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 16:\n              response = _context3.sent;\n              lines = response.data.split(/\\r?\\n/);\n              thisData.Date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              _context3.next = 24;\n              break;\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](13);\n              console.log(_context3.t0);\n\n            case 24:\n              _context3.next = 8;\n              break;\n\n            case 26:\n              i = 1;\n\n            case 27:\n              if (!(i < lines.length)) {\n                _context3.next = 45;\n                break;\n              }\n\n              if (!((lines[i].match(/\"/g) || []).length > 2)) {\n                _context3.next = 30;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 42);\n\n            case 30:\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[2] || country != '' && country != values[3])) {\n                _context3.next = 33;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 42);\n\n            case 33:\n              confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\n              deaths = thisData[\"Deaths\"] + parseInt(values[8]);\n              recovered = thisData[\"Recovered\"] + parseInt(values[9]);\n              thisData.Confirmed = confirmed;\n              thisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\n              thisData.Deaths = deaths;\n              thisData.Recovered = recovered;\n              thisData.RecoveryRate = recovered / confirmed * 100;\n              thisData.MortalityRate = deaths / confirmed * 100;\n\n            case 42:\n              i++;\n              _context3.next = 27;\n              break;\n\n            case 45:\n              if (!process) {\n                _context3.next = 55;\n                break;\n              }\n\n              _context3.next = 48;\n              return _regeneratorRuntime.awrap(this.callAPIGlobal(city, country, markDate, false));\n\n            case 48:\n              prevData = _context3.sent;\n              thisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\n              thisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\n              thisData.NewDeaths = thisData.Deaths - prevData.Deaths;\n              thisData.NewRecovered = thisData.Recovered - prevData.Recovered;\n              console.log(data);\n              this.processData(sourceRef, data, false);\n\n            case 55:\n              return _context3.abrupt(\"return\", thisData);\n\n            case 56:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[13, 21]], Promise);\n    } //For when Thailand is selected\n    //Provides retrospective data and graph functionalities\n    //Local scoped source, data from over 200 days are stored within only one file\n\n  }, {\n    key: \"callAPIThailand\",\n    value: function callAPIThailand() {\n      var source, data, response;\n      return _regeneratorRuntime.async(function callAPIThailand$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              source = 'https://covid19.th-stat.com/api/open/timeline';\n              data = [];\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(source));\n\n            case 5:\n              response = _context4.sent;\n              console.log(response);\n              data = response.data['Data'];\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log(_context4.t0);\n\n            case 13:\n              this.processData(source, data);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[2, 10]], Promise);\n    }\n  }, {\n    key: \"getLastDate\",\n    value: function getLastDate(type, data) {\n      for (var i = data.length - 1; i >= 0; i--) {\n        if (data[i][type] != 0) return data[i]['Date'];\n      }\n    }\n  }, {\n    key: \"getDateDiff\",\n    value: function getDateDiff(date) {\n      var now = new Date().getTime();\n      return Math.floor((now - new Date(date).getTime()) / 86400000);\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(source, data) {\n      var hasTimeline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (data.length <= 0) return;\n      var lastData = data.slice(-1)[0];\n      var dataReformatted = data.slice().map(function (d) {\n        return Object.assign({}, d, {\n          Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n        });\n      });\n      var lastUpdated = lastData['Date'];\n      var lastConfirmedFormatted = 0;\n      var lastDeathFormatted = 0;\n      var noConfirmedStreak = 0;\n      var noDeathStreak = 0;\n\n      if (hasTimeline) {\n        var lastConfirmed = this.getLastDate('NewConfirmed', data);\n        var lastDeath = this.getLastDate('NewDeaths', data);\n        lastConfirmedFormatted = lastConfirmed.slice(3, 6) + lastConfirmed.slice(0, 3) + lastConfirmed.slice(6);\n        lastDeathFormatted = lastDeath.slice(3, 6) + lastDeath.slice(0, 3) + lastDeath.slice(6);\n        noConfirmedStreak = this.getDateDiff(lastConfirmed);\n        noDeathStreak = this.getDateDiff(lastDeath);\n      }\n\n      this.setState({\n        hasTimeline: hasTimeline,\n        dataTimeline: dataReformatted,\n        dataTimeline15: dataReformatted.slice(1).slice(-15),\n        data_text: {\n          source: source,\n          updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n          confirmed: lastData['Confirmed'],\n          hospitalized: lastData['Hospitalized'],\n          deaths: lastData['Deaths'],\n          recovered: lastData['Recovered'],\n          newConfirmed: lastData['NewConfirmed'],\n          newHospitalized: lastData['NewHospitalized'],\n          newDeaths: lastData['NewDeaths'],\n          newRecovered: lastData['NewRecovered']\n        },\n        data_pie: [{\n          name: 'Hospitalized',\n          value: lastData['Hospitalized']\n        }, {\n          name: 'Deaths',\n          value: lastData['Deaths']\n        }, {\n          name: 'Recovered',\n          value: lastData['Recovered']\n        }],\n        lastConfirmed: lastConfirmedFormatted,\n        lastDeath: lastDeathFormatted,\n        noConfirmedStreak: noConfirmedStreak,\n        noDeathStreak: noDeathStreak,\n        rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n        rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var graphBlue = '#20A0E0';\n      var graphYellow = '#FFC060';\n      var graphRed = '#E04040';\n      var graphGreen = '#80E080';\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          selectCountry = _this$state.selectCountry,\n          selectCity = _this$state.selectCity,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie;\n      var selectedCountryData = this.state.globalData[selectCountry];\n      var cityChoice = selectedCountryData != undefined && selectedCountryData.CitiesN != 0 ? selectedCountryData.Cities : [\"Overall\"];\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: '#BB0A1E'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 7\n        }\n      }, this.state.selectCity))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: this.state.countries,\n        value: selectCountry,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCountry: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 8\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: cityChoice,\n        value: selectCity,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCity: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 8\n        }\n      }))), __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 9\n        }\n      }, \"Confirmed\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newConfirmed.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 9\n        }\n      }, \"Hospitalized\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newHospitalized.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 9\n        }\n      }, \"Deaths\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newDeaths.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 9\n        }\n      }, \"Recovered\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newRecovered.toLocaleString(), \")\"))), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 8\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 10\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 10\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\")))), __jsx(Grid, {\n        item: true,\n        xs: this.state.hasTimeline ? 6 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 7\n        }\n      }, \"Show/Hide Graph\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 7\n        }\n      }), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }\n      })), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: graphBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: graphYellow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: graphBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: graphYellow,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: graphRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: graphGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }\n      })))))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paperFoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 7\n        }\n      }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\"), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","Dropdown","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperFoot","footer","palette","background","marginTop","root","formControl","margin","minWidth","selectEmpty","darkTheme","type","App","props","state","selectCountry","selectCity","countries","globalData","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","refDate","Date","callAPIGlobalAll","callAPIThailand","callAPIGlobal","markDate","countriesN","data","Object","sourceRef","sourcePrefix","formatChange","getTime","cityIndex","countryIndex","conIndex","deathIndex","recIndex","quoteLimit","lines","markDateStr","toISOString","sourceDate","slice","getFullYear","console","log","get","headers","response","split","i","length","match","values","country","city","parseInt","undefined","Cities","CitiesN","citiesN","Confirmed","Hospitalized","Deaths","Recovered","RecoveryRate","MortalityRate","setState","dataN","prevConfirmed","prevHospitalized","prevDeaths","prevRecovered","tomorrow","setDate","getDate","now","lastIndex","date","replace","NewConfirmed","NewHospitalized","NewDeaths","NewRecovered","processData","process","thisData","prevData","source","Math","floor","lastData","dataReformatted","map","d","assign","lastUpdated","lastConfirmedFormatted","lastDeathFormatted","getLastDate","getDateDiff","name","value","toFixed","graphBlue","graphYellow","graphRed","graphGreen","classes","selectedCountryData","cityChoice","select","toLocaleString","top","right","left","bottom","Component"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,0BAAjD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,aAA5C,EACEC,OADF,EACWC,MADX,EACmBC,SADnB,EAC8BC,IAD9B,EACoCC,QADpC,EAC8CC,GAD9C,EACmDC,QADnD,EAEEC,GAFF,EAEOC,IAFP,QAEoB,UAFpB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,YAAY,EAAED,KAAK,CAACE,MAAN,CAAaC,OADJ;AAEvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KAFgB;AAKvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,aAAa,EAAE,QAFN;AAGTC,MAAAA,UAAU,EAAE,QAHH;AAITC,MAAAA,cAAc,EAAE;AAJP,KALY;AAWvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CADJ;AAELN,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,aAAa,EAAE,QAHV;AAILC,MAAAA,UAAU,EAAE,QAJP;AAKLC,MAAAA,cAAc,EAAE,QALX;AAMPI,MAAAA,eAAe,EAAE;AANV,KAXgB;AAmBxBC,IAAAA,SAAS,EAAE;AACRH,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CADD;AAERN,MAAAA,OAAO,EAAE,MAFD;AAGRC,MAAAA,aAAa,EAAE,QAHP;AAIRC,MAAAA,UAAU,EAAE,QAJJ;AAKRC,MAAAA,cAAc,EAAE,QALR;AAMVI,MAAAA,eAAe,EAAE;AANP,KAnBa;AA2BvBE,IAAAA,MAAM,EAAE;AACNF,MAAAA,eAAe,EAAEd,KAAK,CAACiB,OAAN,CAAcC,UAAd,CAAyBP,KADpC;AAENQ,MAAAA,SAAS,EAAEnB,KAAK,CAACa,OAAN,CAAc,CAAd;AAFL,KA3Be;AA+BxBO,IAAAA,IAAI,EAAE;AACHN,MAAAA,eAAe,EAAE;AADd,KA/BkB;AAkCxBO,IAAAA,WAAW,EAAE;AACVC,MAAAA,MAAM,EAAEtB,KAAK,CAACa,OAAN,CAAc,CAAd,CADE;AAEVU,MAAAA,QAAQ,EAAE;AAFA,KAlCW;AAsCvBC,IAAAA,WAAW,EAAE;AACXL,MAAAA,SAAS,EAAEnB,KAAK,CAACa,OAAN,CAAc,CAAd;AADA;AAtCU,GAAL;AAAA,CAApB;;AA2CA,IAAMY,SAAS,GAAGlD,cAAc,CAAC;AAC/B0C,EAAAA,OAAO,EAAE;AACPS,IAAAA,IAAI,EAAE;AADC;AADsB,CAAD,CAAhC;;IAMMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAE,UADH;AAEZC,MAAAA,UAAU,EAAE,SAFA;AAGZC,MAAAA,SAAS,EAAE,EAHC;AAIZC,MAAAA,UAAU,EAAE,EAJA;AAKZC,MAAAA,WAAW,EAAE,IALD;AAMZC,MAAAA,YAAY,EAAE,EANF;AAOZC,MAAAA,cAAc,EAAE,EAPJ;AAQZC,MAAAA,SAAS,EAAE;AACVC,QAAAA,WAAW,EAAE,EADH;AAEVC,QAAAA,SAAS,EAAE,EAFD;AAGVC,QAAAA,YAAY,EAAE,EAHJ;AAIVC,QAAAA,MAAM,EAAE,EAJE;AAKVC,QAAAA,SAAS,EAAE,EALD;AAMVC,QAAAA,YAAY,EAAE,EANJ;AAOVC,QAAAA,eAAe,EAAE,EAPP;AAQVC,QAAAA,SAAS,EAAE,EARD;AASVC,QAAAA,YAAY,EAAE;AATJ,OARC;AAmBZC,MAAAA,QAAQ,EAAE,CAAC,EAAD,CAnBE;AAoBZC,MAAAA,aAAa,EAAE,CApBH;AAqBZC,MAAAA,SAAS,EAAE,CArBC;AAsBZC,MAAAA,iBAAiB,EAAE,CAtBP;AAuBZC,MAAAA,aAAa,EAAE,CAvBH;AAwBZC,MAAAA,YAAY,EAAE,CAxBF;AAyBZC,MAAAA,SAAS,EAAE,CAzBC;AA0BZC,MAAAA,SAAS,EAAE;AA1BC,KAAb;AAFmB;AA8BlB;;;;wCAEmB;AACpB,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,CAAhB;AACA,WAAKC,gBAAL,CAAsBF,OAAtB;AAEA,UAAI,KAAK1B,KAAL,CAAWC,aAAX,IAA4B,UAAhC,EACC,KAAK4B,eAAL,GADD,KAEK,KAAKC,aAAL,CAAmB,KAAK9B,KAAL,CAAWE,UAA9B,EAAyC,KAAKF,KAAL,CAAWC,aAApD,EAAkEyB,OAAlE,EANe,CAOpB;AACC,K,CAEF;AACA;;;;qCACuBK,Q;;;;;;AAElB5B,cAAAA,S,GAAY,E;AACZ6B,cAAAA,U,GAAa,C;AAEbC,cAAAA,I,GAAO,IAAIC,MAAJ,E;AAELC,cAAAA,S,GAAY,uG;AACZC,cAAAA,Y,GAAe,kH;AACfC,cAAAA,Y,GAAgB,IAAIV,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,CAAD,CAAsBW,OAAtB,E;AAEjBC,cAAAA,S,GAAY,C;AACZC,cAAAA,Y,GAAe,C;AACfC,cAAAA,Q,GAAW,C;AACXC,cAAAA,U,GAAa,C;AACbC,cAAAA,Q,GAAW,C;AACXC,cAAAA,U,GAAa,C,EACjB;;AACA,kBAAIL,SAAS,IAAI,CAAb,IAAkBR,QAAQ,CAACO,OAAT,MAAsBD,YAA5C,EAA0D;AACzDE,gBAAAA,SAAS,GAAG,CAAZ;AACAC,gBAAAA,YAAY,GAAG,CAAf;AACAC,gBAAAA,QAAQ,GAAG,CAAX;AACAC,gBAAAA,UAAU,GAAG,CAAb;AACAC,gBAAAA,QAAQ,GAAG,CAAX;AACAC,gBAAAA,UAAU,GAAG,CAAb;AACA;;AAEGC,cAAAA,K,GAAQ,E;AACNC,cAAAA,W,GAAcf,QAAQ,CAACgB,WAAT,E;AACdC,cAAAA,U,GAAaF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,IAAyBH,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAzB,GAAmD,GAAnD,GAAyDlB,QAAQ,CAACmB,WAAT,E;AAC5EC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;;+CAGwB5F,KAAK,CAACiG,GAAN,CAAUjB,YAAY,GAAGY,UAAf,GAA4B,MAAtC,EAA8C;AAAEM,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAA9C,C;;;AAAjBC,cAAAA,Q;AACNV,cAAAA,KAAK,GAAGU,QAAQ,CAACtB,IAAT,CAAcuB,KAAd,CAAoB,OAApB,CAAR;;;;;;;AAEAL,cAAAA,OAAO,CAACC,GAAR;;;oBAGGP,KAAK,IAAI,E;;;;;AACHY,cAAAA,C,GAAE,C;;;oBAAGA,CAAC,GAACZ,KAAK,CAACa,M;;;;;oBACjBb,KAAK,CAACY,CAAD,CAAL,IAAY,EAAZ,IAAmB,CAACZ,KAAK,CAACY,CAAD,CAAL,CAASE,KAAT,CAAe,IAAf,KAAwB,EAAzB,EAA6BD,MAA7B,GAAsCd,U;;;;;;;;AAGvDgB,cAAAA,M,GAASf,KAAK,CAACY,CAAD,CAAL,CAASD,KAAT,CAAe,GAAf,C;AACTK,cAAAA,O,GAAUD,MAAM,CAACpB,YAAD,C;AAChBsB,cAAAA,I,GAAOF,MAAM,CAACrB,SAAD,C;AACf7B,cAAAA,S,GAAYqD,QAAQ,CAACH,MAAM,CAACnB,QAAD,CAAP,C;AACpB9B,cAAAA,Y,GAAeoD,QAAQ,CAACH,MAAM,CAAC,EAAD,CAAP,C;AACvBhD,cAAAA,M,GAASmD,QAAQ,CAACH,MAAM,CAAClB,UAAD,CAAP,C;AACjB7B,cAAAA,S,GAAYkD,QAAQ,CAACH,MAAM,CAACjB,QAAD,CAAP,C;;AACxB,kBAAIV,IAAI,CAAC4B,OAAD,CAAJ,IAAiBG,SAArB,EAAgC;AAC/BtD,gBAAAA,SAAS,IAAIuB,IAAI,CAAC4B,OAAD,CAAJ,CAAc,WAAd,CAAb;AACAlD,gBAAAA,YAAY,IAAIsB,IAAI,CAAC4B,OAAD,CAAJ,CAAc,cAAd,CAAhB;AACAjD,gBAAAA,MAAM,IAAIqB,IAAI,CAAC4B,OAAD,CAAJ,CAAc,QAAd,CAAV;AACAhD,gBAAAA,SAAS,IAAIoB,IAAI,CAAC4B,OAAD,CAAJ,CAAc,WAAd,CAAb;AACA,eALD,MAOA;AACC5B,gBAAAA,IAAI,CAAC4B,OAAD,CAAJ,GAAgB,IAAI3B,MAAJ,EAAhB;AACAD,gBAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcI,MAAd,GAAuB,EAAvB;AACAhC,gBAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcK,OAAd,GAAwB,CAAxB;AACA/D,gBAAAA,SAAS,CAAC6B,UAAD,CAAT,GAAwB6B,OAAxB;AACA7B,gBAAAA,UAAU;AACV;;AAEKmC,cAAAA,O,GAAUlC,IAAI,CAAC4B,OAAD,CAAJ,CAAcK,O;AAC9BjC,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcO,SAAd,GAA0B1D,SAA1B;AACAuB,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcQ,YAAd,GAA6B1D,YAA7B;AACAsB,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcS,MAAd,GAAuB1D,MAAvB;AACAqB,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcU,SAAd,GAA0B1D,SAA1B;AACAoB,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcW,YAAd,GAA8B3D,SAAS,GAACH,SAAX,GAAwB,GAArD;AACAuB,cAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcY,aAAd,GAA+B7D,MAAM,GAACF,SAAR,GAAqB,GAAnD;;AACA,kBAAIoD,IAAI,IAAI,EAAZ,EAAgB;AACf7B,gBAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcI,MAAd,CAAqBE,OAArB,IAAgCL,IAAhC;AACA7B,gBAAAA,IAAI,CAAC4B,OAAD,CAAJ,CAAcK,OAAd,GAAwBC,OAAO,GAAG,CAAlC;AACA;;;AApC4BV,cAAAA,CAAC,E;;;;;AAsC/BN,cAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AAEA,mBAAKyC,QAAL,CAAc;AACbvE,gBAAAA,SAAS,EAAEA,SADE;AAEbC,gBAAAA,UAAU,EAAE6B;AAFC,eAAd,E,CAIA;;;;;;;;MAMF;AACA;AACA;AACA;;;;0CAC4B6B,I,EAAMD,O;;;;;;;AAEjC,kBAAIC,IAAI,IAAI,SAAZ,EAAuB;AACtBA,gBAAAA,IAAI,GAAG,EAAP;AACA;;AAEG7B,cAAAA,I,GAAO,CAAC,EAAD,C;AACP0C,cAAAA,K,GAAQ,C;AAERC,cAAAA,a,GAAgB,C;AAChBC,cAAAA,gB,GAAmB,C;AACnBC,cAAAA,U,GAAa,C;AACbC,cAAAA,a,GAAgB,C;AAEd5C,cAAAA,S,GAAY,uG;AACZC,cAAAA,Y,GAAe,kH;AACjBL,cAAAA,Q,GAAW,IAAIJ,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,C;AACTqD,cAAAA,Q,GAAW,IAAIrD,IAAJ,E;AACjBqD,cAAAA,QAAQ,CAACC,OAAT,CAAiBD,QAAQ,CAACE,OAAT,KAAmB,CAApC;AACMC,cAAAA,G,GAAMH,QAAQ,CAAC1C,OAAT,E;AAERC,cAAAA,S,GAAY,C;AACZC,cAAAA,Y,GAAe,C;AACfC,cAAAA,Q,GAAW,C;AACXC,cAAAA,U,GAAa,C;AACbC,cAAAA,Q,GAAW,C;AAEXyC,cAAAA,S,GAAY,C;AACV/C,cAAAA,Y,GAAgB,IAAIV,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,CAAD,CAAsBW,OAAtB,E;;;oBAEdP,QAAQ,CAACO,OAAT,KAAqB6C,G;;;;;AACvBtC,cAAAA,K,GAAQ,E;AACNC,cAAAA,W,GAAcf,QAAQ,CAACgB,WAAT,E;AACdC,cAAAA,U,GAAaF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,IAAyBH,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAzB,GAAmD,GAAnD,GAAyDlB,QAAQ,CAACmB,WAAT,E;AAC5EC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,E,CACA;AAEA;;AACA,kBAAIT,SAAS,IAAI,CAAb,IAAkBR,QAAQ,CAACO,OAAT,MAAsBD,YAA5C,EAA0D;AACzDE,gBAAAA,SAAS,GAAG,CAAZ;AACAC,gBAAAA,YAAY,GAAG,CAAf;AACAC,gBAAAA,QAAQ,GAAG,CAAX;AACAC,gBAAAA,UAAU,GAAG,CAAb;AACAC,gBAAAA,QAAQ,GAAG,CAAX;AACA;;;;+CAGuBvF,KAAK,CAACiG,GAAN,CAAUjB,YAAY,GAAGY,UAAf,GAA4B,MAAtC,EAA8C;AAAEM,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAA9C,C;;;AAAjBC,cAAAA,Q;AACNV,cAAAA,KAAK,GAAGU,QAAQ,CAACtB,IAAT,CAAcuB,KAAd,CAAoB,OAApB,CAAR;;;;;;;AAEAL,cAAAA,OAAO,CAACC,GAAR;;;AAGDrB,cAAAA,QAAQ,CAACkD,OAAT,CAAiBlD,QAAQ,CAACmD,OAAT,KAAmB,CAApC;;oBAEIrC,KAAK,IAAI,E;;;;;;;;AAGbM,cAAAA,OAAO,CAACC,GAAR,CAAYgC,SAAZ;AACMC,cAAAA,I,GAAOrC,UAAU,CAACsC,OAAX,CAAmB,GAAnB,EAAuB,IAAvB,EAA6BA,OAA7B,CAAqC,GAArC,EAAyC,IAAzC,C;AACT1B,cAAAA,M,GAASI,S;AACb,kBAAInB,KAAK,CAACuC,SAAD,CAAT,EACCxB,MAAM,GAAGf,KAAK,CAACuC,SAAD,CAAL,CAAiB5B,KAAjB,CAAuB,GAAvB,CAAT,CADD,KAEK4B,SAAS,GAAG,CAAZ;;oBAEDxB,MAAM,IAAII,SAAV,IAAwBF,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAIF,MAAM,CAACrB,SAAD,CAApD,IAAqEsB,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAID,MAAM,CAACpB,YAAD,C;;;;;AAEjGiB,cAAAA,C,GAAE2B,SAAS,GAAC,C;;;oBAAG3B,CAAC,GAACZ,KAAK,CAACa,M;;;;;AAC/BE,cAAAA,MAAM,GAAGf,KAAK,CAACY,CAAD,CAAL,CAASD,KAAT,CAAe,GAAf,CAAT;;oBACKM,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAIF,MAAM,CAACrB,SAAD,CAA7B,IAA8CsB,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAID,MAAM,CAACpB,YAAD,C;;;;;AACnFoB,cAAAA,MAAM,GAAGI,SAAT;;;;AAGDoB,cAAAA,SAAS,GAAG3B,CAAZ;;;;AANuCA,cAAAA,CAAC,E;;;;;oBASrCG,MAAM,IAAII,S;;;;;AACJP,cAAAA,E,GAAE,C;;;oBAAGA,EAAC,GAAC2B,S;;;;;AACfxB,cAAAA,MAAM,GAAGf,KAAK,CAACY,EAAD,CAAL,CAASD,KAAT,CAAe,GAAf,CAAT;;oBACKM,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAIF,MAAM,CAACrB,SAAD,CAA7B,IAA8CsB,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAID,MAAM,CAACpB,YAAD,C;;;;;AACnFoB,cAAAA,MAAM,GAAGI,SAAT;;;;AAGDoB,cAAAA,SAAS,GAAG3B,EAAZ;;;;AAN0BA,cAAAA,EAAC,E;;;;;AAY9B,kBAAIG,MAAM,IAAII,SAAd,EAAyB;AAClBtD,gBAAAA,SADkB,GACNqD,QAAQ,CAACH,MAAM,CAACnB,QAAD,CAAP,CADF;AAElB9B,gBAAAA,YAFkB,GAEHoD,QAAQ,CAACH,MAAM,CAAC,EAAD,CAAP,CAFL;AAGlBhD,gBAAAA,MAHkB,GAGTmD,QAAQ,CAACH,MAAM,CAAClB,UAAD,CAAP,CAHC;AAIlB7B,gBAAAA,SAJkB,GAINkD,QAAQ,CAACH,MAAM,CAACjB,QAAD,CAAP,CAJF;AAMxBV,gBAAAA,IAAI,CAAC0C,KAAD,CAAJ,GAAc;AACbhD,kBAAAA,IAAI,EAAE0D,IADO;AAEbjB,kBAAAA,SAAS,EAAE1D,SAFE;AAGb2D,kBAAAA,YAAY,EAAE1D,YAHD;AAIb2D,kBAAAA,MAAM,EAAE1D,MAJK;AAKb2D,kBAAAA,SAAS,EAAE1D,SALE;AAMb0E,kBAAAA,YAAY,EAAE7E,SAAS,GAAGkE,aANb;AAObY,kBAAAA,eAAe,EAAE7E,YAAY,GAAGkE,gBAPnB;AAQbY,kBAAAA,SAAS,EAAE7E,MAAM,GAAGkE,UARP;AASbY,kBAAAA,YAAY,EAAE7E,SAAS,GAAGkE;AATb,iBAAd;AAWAH,gBAAAA,aAAa,GAAGlE,SAAhB;AACAmE,gBAAAA,gBAAgB,GAAGlE,YAAnB;AACAmE,gBAAAA,UAAU,GAAGlE,MAAb;AACAmE,gBAAAA,aAAa,GAAGlE,SAAhB;AACA8D,gBAAAA,KAAK;AACL;;;;;;AAEFxB,cAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AAEA,mBAAK0D,WAAL,CAAiBxD,SAAjB,EAA4BF,IAA5B;;;;;;;;MAGD;AACA;AACA;;;;kCACoB6B,I,EAAMD,O,EAAS9B,Q;;;;;;;;;;;;;;;;;;;;;AAAU6D,cAAAA,O,8DAAU,I;;AAEtD,kBAAI9B,IAAI,IAAI,SAAZ,EAAuB;AACtBA,gBAAAA,IAAI,GAAG,EAAP;AACA;;AAEG7B,cAAAA,I,GAAO,CAAC,EAAD,C;AACXA,cAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU;AACTN,gBAAAA,IAAI,EAAE,EADG;AAETyC,gBAAAA,SAAS,EAAE,CAFF;AAGTC,gBAAAA,YAAY,EAAE,CAHL;AAITC,gBAAAA,MAAM,EAAE,CAJC;AAKTC,gBAAAA,SAAS,EAAE,CALF;AAMTC,gBAAAA,YAAY,EAAE,CANL;AAOTC,gBAAAA,aAAa,EAAE,CAPN;AAQTc,gBAAAA,YAAY,EAAE,CARL;AASTC,gBAAAA,eAAe,EAAE,CATR;AAUTC,gBAAAA,SAAS,EAAE,CAVF;AAWTC,gBAAAA,YAAY,EAAE;AAXL,eAAV;AAaMG,cAAAA,Q,GAAW5D,IAAI,CAAC,CAAD,C;AAEfE,cAAAA,S,GAAY,uG;AACZC,cAAAA,Y,GAAe,kH;AAEjBS,cAAAA,K,GAAQ,E;;;oBACLA,KAAK,IAAI,E;;;;;AACTC,cAAAA,W,GAAcf,QAAQ,CAACgB,WAAT,E;AACdC,cAAAA,U,GAAaF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,IAAyBH,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAzB,GAAmD,GAAnD,GAAyDlB,QAAQ,CAACmB,WAAT,E;AAC5EnB,cAAAA,QAAQ,CAACkD,OAAT,CAAiBlD,QAAQ,CAACmD,OAAT,KAAmB,CAApC;AACA/B,cAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;;+CAGwB5F,KAAK,CAACiG,GAAN,CAAUjB,YAAY,GAAGY,UAAf,GAA4B,MAAtC,EAA8C;AAAEM,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAA9C,C;;;AAAjBC,cAAAA,Q;AACNV,cAAAA,KAAK,GAAGU,QAAQ,CAACtB,IAAT,CAAcuB,KAAd,CAAoB,OAApB,CAAR;AACAqC,cAAAA,QAAQ,CAAClE,IAAT,GAAgBqB,UAAU,CAACsC,OAAX,CAAmB,GAAnB,EAAuB,IAAvB,EAA6BA,OAA7B,CAAqC,GAArC,EAAyC,IAAzC,CAAhB;;;;;;;AAEAnC,cAAAA,OAAO,CAACC,GAAR;;;;;;;AAIOK,cAAAA,C,GAAE,C;;;oBAAGA,CAAC,GAACZ,KAAK,CAACa,M;;;;;oBACjB,CAACb,KAAK,CAACY,CAAD,CAAL,CAASE,KAAT,CAAe,IAAf,KAAwB,EAAzB,EAA6BD,MAA7B,GAAsC,C;;;;;;;;AAGpCE,cAAAA,M,GAASf,KAAK,CAACY,CAAD,CAAL,CAASD,KAAT,CAAe,GAAf,C;;oBACVM,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAIF,MAAM,CAAC,CAAD,CAA7B,IAAsCC,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAID,MAAM,CAAC,CAAD,C;;;;;;;;AAGtElD,cAAAA,S,GAAYmF,QAAQ,CAAC,WAAD,CAAR,GAAwB9B,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,C;AAC5ChD,cAAAA,M,GAASiF,QAAQ,CAAC,QAAD,CAAR,GAAqB9B,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,C;AACtC/C,cAAAA,S,GAAYgF,QAAQ,CAAC,WAAD,CAAR,GAAwB9B,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,C;AAClDiC,cAAAA,QAAQ,CAACzB,SAAT,GAAqB1D,SAArB;AACAmF,cAAAA,QAAQ,CAACxB,YAAT,GAAwBwB,QAAQ,CAAC,cAAD,CAAR,GAA2B9B,QAAQ,CAACH,MAAM,CAAC,EAAD,CAAP,CAA3D;AACAiC,cAAAA,QAAQ,CAACvB,MAAT,GAAkB1D,MAAlB;AACAiF,cAAAA,QAAQ,CAACtB,SAAT,GAAqB1D,SAArB;AACAgF,cAAAA,QAAQ,CAACrB,YAAT,GAAyB3D,SAAS,GAACH,SAAX,GAAwB,GAAhD;AACAmF,cAAAA,QAAQ,CAACpB,aAAT,GAA0B7D,MAAM,GAACF,SAAR,GAAqB,GAA9C;;;AAhB6B+C,cAAAA,CAAC,E;;;;;mBAmB3BmC,O;;;;;;+CACoB,KAAK9D,aAAL,CAAmBgC,IAAnB,EAAyBD,OAAzB,EAAkC9B,QAAlC,EAA4C,KAA5C,C;;;AAAjB+D,cAAAA,Q;AACND,cAAAA,QAAQ,CAACN,YAAT,GAAwBM,QAAQ,CAACzB,SAAT,GAAqB0B,QAAQ,CAAC1B,SAAtD;AACAyB,cAAAA,QAAQ,CAACL,eAAT,GAA2BK,QAAQ,CAACxB,YAAT,GAAwByB,QAAQ,CAACzB,YAA5D;AACAwB,cAAAA,QAAQ,CAACJ,SAAT,GAAqBI,QAAQ,CAACvB,MAAT,GAAkBwB,QAAQ,CAACxB,MAAhD;AACAuB,cAAAA,QAAQ,CAACH,YAAT,GAAwBG,QAAQ,CAACtB,SAAT,GAAqBuB,QAAQ,CAACvB,SAAtD;AAEApB,cAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACA,mBAAK0D,WAAL,CAAiBxD,SAAjB,EAA4BF,IAA5B,EAAkC,KAAlC;;;gDAGM4D,Q;;;;;;;;MAGR;AACA;AACA;;;;;;;;;;AAGOE,cAAAA,M,GAAS,+C;AACX9D,cAAAA,I,GAAO,E;;;+CAGa7E,KAAK,CAACiG,GAAN,CAAU0C,MAAV,C;;;AAAjBxC,cAAAA,Q;AACNJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAtB,cAAAA,IAAI,GAAGsB,QAAQ,CAACtB,IAAT,CAAc,MAAd,CAAP;;;;;;;AAEAkB,cAAAA,OAAO,CAACC,GAAR;;;AAGD,mBAAKuC,WAAL,CAAiBI,MAAjB,EAAyB9D,IAAzB;;;;;;;;;;;gCAGWpC,I,EAAMoC,I,EAAM;AACvB,WAAK,IAAIwB,CAAC,GAACxB,IAAI,CAACyB,MAAL,GAAY,CAAvB,EAA0BD,CAAC,IAAE,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AACpC,YAAIxB,IAAI,CAACwB,CAAD,CAAJ,CAAQ5D,IAAR,KAAiB,CAArB,EACC,OAAOoC,IAAI,CAACwB,CAAD,CAAJ,CAAQ,MAAR,CAAP;AACD;AACD;;;gCAEW4B,I,EAAM;AACjB,UAAIF,GAAG,GAAI,IAAIxD,IAAJ,EAAD,CAAaW,OAAb,EAAV;AACA,aAAO0D,IAAI,CAACC,KAAL,CAAW,CAACd,GAAG,GAAI,IAAIxD,IAAJ,CAAS0D,IAAT,CAAD,CAAiB/C,OAAjB,EAAP,IAAmC,QAA9C,CAAP;AACA;;;gCAEWyD,M,EAAQ9D,I,EAA0B;AAAA,UAApB5B,WAAoB,uEAAN,IAAM;AAC7C,UAAI4B,IAAI,CAACyB,MAAL,IAAe,CAAnB,EACC;AAED,UAAMwC,QAAQ,GAAGjE,IAAI,CAACgB,KAAL,CAAW,CAAC,CAAZ,EAAe,CAAf,CAAjB;AACA,UAAMkD,eAAe,GAAGlE,IAAI,CAACgB,KAAL,GAAamD,GAAb,CAAiB,UAAAC,CAAC,EAAI;AAC7C,eACCnE,MAAM,CAACoE,MAAP,CAAc,EAAd,EAAiBD,CAAjB,EAAmB;AAClB1E,UAAAA,IAAI,EAAE0E,CAAC,CAAC1E,IAAF,CAAOsB,KAAP,CAAa,CAAb,EAAe,CAAf,IAAoBoD,CAAC,CAAC1E,IAAF,CAAOsB,KAAP,CAAa,CAAb,EAAe,CAAf;AADR,SAAnB,CADD;AAKA,OANuB,CAAxB;AAQA,UAAMsD,WAAW,GAAGL,QAAQ,CAAC,MAAD,CAA5B;AACA,UAAIM,sBAAsB,GAAG,CAA7B;AACA,UAAIC,kBAAkB,GAAG,CAAzB;AACA,UAAIpF,iBAAiB,GAAG,CAAxB;AACA,UAAIC,aAAa,GAAG,CAApB;;AAEA,UAAIjB,WAAJ,EAAiB;AAChB,YAAMc,aAAa,GAAG,KAAKuF,WAAL,CAAiB,cAAjB,EAAgCzE,IAAhC,CAAtB;AACA,YAAMb,SAAS,GAAG,KAAKsF,WAAL,CAAiB,WAAjB,EAA6BzE,IAA7B,CAAlB;AACAuE,QAAAA,sBAAsB,GAAGrF,aAAa,CAAC8B,KAAd,CAAoB,CAApB,EAAsB,CAAtB,IAA2B9B,aAAa,CAAC8B,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAA3B,GAAsD9B,aAAa,CAAC8B,KAAd,CAAoB,CAApB,CAA/E;AACAwD,QAAAA,kBAAkB,GAAGrF,SAAS,CAAC6B,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,IAAuB7B,SAAS,CAAC6B,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,CAAvB,GAA8C7B,SAAS,CAAC6B,KAAV,CAAgB,CAAhB,CAAnE;AACA5B,QAAAA,iBAAiB,GAAG,KAAKsF,WAAL,CAAiBxF,aAAjB,CAApB;AACAG,QAAAA,aAAa,GAAG,KAAKqF,WAAL,CAAiBvF,SAAjB,CAAhB;AACA;;AAED,WAAKsD,QAAL,CAAc;AACbrE,QAAAA,WAAW,EAAEA,WADA;AAEbC,QAAAA,YAAY,EAAE6F,eAFD;AAGb5F,QAAAA,cAAc,EAAE4F,eAAe,CAAClD,KAAhB,CAAsB,CAAtB,EAAyBA,KAAzB,CAA+B,CAAC,EAAhC,CAHH;AAIbzC,QAAAA,SAAS,EAAE;AACVuF,UAAAA,MAAM,EAAEA,MADE;AAEVtF,UAAAA,WAAW,EAAE8F,WAAW,CAACtD,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,IAAyBsD,WAAW,CAACtD,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,CAAzB,GAAkDsD,WAAW,CAACtD,KAAZ,CAAkB,CAAlB,CAFrD;AAGVvC,UAAAA,SAAS,EAAEwF,QAAQ,CAAC,WAAD,CAHT;AAIVvF,UAAAA,YAAY,EAAEuF,QAAQ,CAAC,cAAD,CAJZ;AAKVtF,UAAAA,MAAM,EAAEsF,QAAQ,CAAC,QAAD,CALN;AAMVrF,UAAAA,SAAS,EAAEqF,QAAQ,CAAC,WAAD,CANT;AAOVpF,UAAAA,YAAY,EAAEoF,QAAQ,CAAC,cAAD,CAPZ;AAQVnF,UAAAA,eAAe,EAAEmF,QAAQ,CAAC,iBAAD,CARf;AASVlF,UAAAA,SAAS,EAAEkF,QAAQ,CAAC,WAAD,CATT;AAUVjF,UAAAA,YAAY,EAAEiF,QAAQ,CAAC,cAAD;AAVZ,SAJE;AAgBbhF,QAAAA,QAAQ,EAAE,CACT;AAAE0F,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,KAAK,EAAEX,QAAQ,CAAC,cAAD;AAAvC,SADS,EAET;AAAEU,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAEX,QAAQ,CAAC,QAAD;AAAjC,SAFS,EAGT;AAAEU,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,KAAK,EAAEX,QAAQ,CAAC,WAAD;AAApC,SAHS,CAhBG;AAqBb/E,QAAAA,aAAa,EAAEqF,sBArBF;AAsBbpF,QAAAA,SAAS,EAAEqF,kBAtBE;AAuBbpF,QAAAA,iBAAiB,EAAEA,iBAvBN;AAwBbC,QAAAA,aAAa,EAAEA,aAxBF;AAyBbC,QAAAA,YAAY,EAAE,CAAC,MAAI2E,QAAQ,CAAC,WAAD,CAAZ,GAA0BA,QAAQ,CAAC,WAAD,CAAnC,EAAkDY,OAAlD,CAA0D,CAA1D,IAA+D,GAzBhE;AA0BbtF,QAAAA,SAAS,EAAE,CAAC,MAAI0E,QAAQ,CAAC,QAAD,CAAZ,GAAuBA,QAAQ,CAAC,WAAD,CAAhC,EAA+CY,OAA/C,CAAuD,CAAvD,IAA4D;AA1B1D,OAAd;AA4BA;;;6BAEQ;AAAA;;AACR,UAAMC,SAAS,GAAG,SAAlB;AACA,UAAMC,WAAW,GAAG,SAApB;AACA,UAAMC,QAAQ,GAAG,SAAjB;AACA,UAAMC,UAAU,GAAG,SAAnB;AAJQ,UAMAC,OANA,GAMY,KAAKpH,KANjB,CAMAoH,OANA;AAAA,wBAOiF,KAAKnH,KAPtF;AAAA,UAOAC,aAPA,eAOAA,aAPA;AAAA,UAOeC,UAPf,eAOeA,UAPf;AAAA,UAO2BI,YAP3B,eAO2BA,YAP3B;AAAA,UAOyCC,cAPzC,eAOyCA,cAPzC;AAAA,UAOyDC,SAPzD,eAOyDA,SAPzD;AAAA,UAOoEU,QAPpE,eAOoEA,QAPpE;AASR,UAAMkG,mBAAmB,GAAG,KAAKpH,KAAL,CAAWI,UAAX,CAAsBH,aAAtB,CAA5B;AACA,UAAMoH,UAAU,GAAKD,mBAAmB,IAAIpD,SAAvB,IAAoCoD,mBAAmB,CAAClD,OAApB,IAA+B,CAApE,GAAyEkD,mBAAmB,CAACnD,MAA7F,GAAsG,CAAC,SAAD,CAA1H;AAEA,aACC;AAAK,QAAA,SAAS,EAAEkD,OAAO,CAAC5H,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACF,UAAAA,UAAU,EAAC;AAAZ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAE8H,OAAO,CAAC5I,KAA5C;AAAmD,QAAA,KAAK,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKyB,KAAL,CAAWE,UAFb,CADD,CADD,CAFD,EAUC;AAAK,QAAA,SAAS,EAAEiH,OAAO,CAAC/I,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,EAWC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEwB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,KAAK,EAAC,MAAlB;AAAyB,QAAA,KAAK,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,oBAEgBY,SAAS,CAACC,WAF1B,CADD,EAKC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACA,QAAA,IAAI,EAAED,SAAS,CAACuF,MADhB;AAEA,QAAA,MAAM,EAAC,QAFP;AAGA,QAAA,GAAG,EAAC,qBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAICvF,SAAS,CAACuF,MAJX,CADD,CALD,CADD,CADD,EAkBC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAEC,MAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAK/F,KAAL,CAAWG,SAA9B;AAAyC,QAAA,KAAK,EAAEF,aAAhD;AACC,QAAA,QAAQ,EAAE,kBAACqH,MAAD;AAAA,iBAAU,MAAI,CAAC5C,QAAL,CAAc;AAACzE,YAAAA,aAAa,EAACqH,MAAM,CAACT;AAAtB,WAAd,CAAV;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAlBD,EAwBC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAEC,MAAC,QAAD;AACC,QAAA,OAAO,EAAEQ,UADV;AAEC,QAAA,KAAK,EAAEnH,UAFR;AAEoB,QAAA,QAAQ,EAAE,kBAACoH,MAAD;AAAA,iBAAU,MAAI,CAAC5C,QAAL,CAAc;AAACxE,YAAAA,UAAU,EAACoH,MAAM,CAACT;AAAnB,WAAd,CAAV;AAAA,SAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAxBD,CADD,EAiCC,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEM,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B0B,SAAS,CAACE,SAAV,CAAoB6G,cAApB,EAA1B,CAFD,EAGC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2B/G,SAAS,CAACM,YAAV,CAAuByG,cAAvB,EAA3B,MAHD,CADD,CADD,EAQC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEJ,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B0B,SAAS,CAACG,YAAV,CAAuB4G,cAAvB,EAA1B,CAFD,EAGC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2B/G,SAAS,CAACO,eAAV,CAA0BwG,cAA1B,EAA3B,MAHD,CADD,CARD,EAeC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEJ,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B0B,SAAS,CAACI,MAAV,CAAiB2G,cAAjB,EAA1B,CAFD,EAGC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2B/G,SAAS,CAACQ,SAAV,CAAoBuG,cAApB,EAA3B,MAHD,CADD,CAfD,EAsBC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEJ,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B0B,SAAS,CAACK,SAAV,CAAoB0G,cAApB,EAA1B,CAFD,EAGC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2B/G,SAAS,CAACS,YAAV,CAAuBsG,cAAvB,EAA3B,MAHD,CADD,CAtBD,EA6BG,KAAKvH,KAAL,CAAWK,WAAX,IACD,4BACA,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE8G,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACkB,KAAKkB,KAAL,CAAWmB,aAD7B,QAC8C,KAAKnB,KAAL,CAAWqB,iBADzD,eADD,EAIC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACc,KAAKrB,KAAL,CAAWoB,SADzB,QACsC,KAAKpB,KAAL,CAAWsB,aADjD,eAJD,CADD,CADA,CA9BF,EA2CC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,KAAKtB,KAAL,CAAWK,WAAX,GAAyB,CAAzB,GAA6B,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE8G,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACiB,KAAKkB,KAAL,CAAWuB,YAD5B,CADD,EAIC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACkB,KAAKvB,KAAL,CAAWwB,SAD7B,CAJD,CADD,CA3CD,CAjCD,EA2FG,KAAKxB,KAAL,CAAWK,WAAX,IACD,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACqE,QAAL,CAAc;AAAEjD,YAAAA,SAAS,EAAE,CAAC,MAAI,CAACzB,KAAL,CAAWyB;AAAzB,WAAd,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,OAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CA5FF,EAqGG,KAAKzB,KAAL,CAAWyB,SAAX,IAA0B;AAC5B,kCACA,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE0F,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,mBAAD;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,QAAD;AACC,QAAA,KAAK,EAAE,GADR;AAEC,QAAA,MAAM,EAAE,GAFT;AAGC,QAAA,IAAI,EAAEyB,cAHP;AAIC,QAAA,MAAM,EAAE;AAACiH,UAAAA,GAAG,EAAE,CAAN;AAASC,UAAAA,KAAK,EAAE,CAAhB;AAAmBC,UAAAA,IAAI,EAAE,CAAzB;AAA4BC,UAAAA,MAAM,EAAE;AAApC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMC,MAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,EAOC,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,EAQC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,EASC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,EAUC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,EAWC,MAAC,GAAD;AAAK,QAAA,OAAO,EAAC,cAAb;AAA4B,QAAA,IAAI,EAAEZ,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,EAYC,MAAC,GAAD;AAAK,QAAA,OAAO,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAEE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZD,CADD,CADD,CADD,CAFD,EAwBC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEE,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,mBAAD;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,MAAC,GAAD;AAAK,QAAA,OAAO,EAAC,OAAb;AAAqB,QAAA,iBAAiB,EAAE,KAAxC;AAA+C,QAAA,IAAI,EAAEoC,QAArD;AAA+D,QAAA,WAAW,EAAE,GAA5E;AAAiF,QAAA,KAAK,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE8F,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CAFD,EAOC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CADD,CADD,CADD,CAxBD,EAyCC,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEC,OAAO,CAACrI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,mBAAD;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD;AACC,QAAA,IAAI,EAAEwB,YADP;AAEC,QAAA,MAAM,EAAE;AAACkH,UAAAA,GAAG,EAAE,CAAN;AAASC,UAAAA,KAAK,EAAE,CAAhB;AAAmBC,UAAAA,IAAI,EAAE,CAAzB;AAA4BC,UAAAA,MAAM,EAAE;AAApC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIC,MAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,EAKC,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,EAMC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,EAOC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,EAQC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,EASC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,WAAW,EAAE,CAAnC;AAAsC,QAAA,OAAO,EAAC,WAA9C;AAA0D,QAAA,MAAM,EAAEZ,SAAlE;AAA6E,QAAA,GAAG,EAAE,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,EAUC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,WAAW,EAAE,CAAnC;AAAsC,QAAA,OAAO,EAAC,cAA9C;AAA6D,QAAA,MAAM,EAAEC,WAArE;AAAkF,QAAA,GAAG,EAAE,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,EAWC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,WAAW,EAAE,CAAnC;AAAsC,QAAA,OAAO,EAAC,QAA9C;AAAuD,QAAA,MAAM,EAAEC,QAA/D;AAAyE,QAAA,GAAG,EAAE,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,EAYC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,WAAW,EAAE,CAAnC;AAAsC,QAAA,OAAO,EAAC,WAA9C;AAA0D,QAAA,MAAM,EAAEC,UAAlE;AAA8E,QAAA,GAAG,EAAE,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZD,CADD,CADD,CADD,CAzCD,CADA,CAtGD,CAXD,EAmLC;AAAQ,QAAA,SAAS,EAAEC,OAAO,CAAChI,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,KAAD;AAAO,QAAA,SAAS,EAAEgI,OAAO,CAACjI,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EADD,EAIC,MAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJD,CADD,CAnLD,CADD;AAgMA;;;;EApnBgB1C,KAAK,CAACoL,S;;AAunBxB,eAAenL,UAAU,CAACyB,MAAD,CAAV,CAAmB4B,GAAnB,CAAf","sourcesContent":["\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n  \nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#FFFEFE\",\n  },\n\tpaperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#777070\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2),\n  },\n\troot: {\n    backgroundColor: \"#000000\",\n  },\n\tformControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectCountry: 'Thailand',\n\t\t\tselectCity: 'Overall',\n\t\t\tcountries: [],\n\t\t\tglobalData: [],\n\t\t\thasTimeline: true,\n\t\t\tdataTimeline: [],\n\t\t\tdataTimeline15: [],\n\t\t\tdata_text: {\n\t\t\t\tupdatedDate: '',\n\t\t\t\tconfirmed: '',\n\t\t\t\thospitalized: '',\n\t\t\t\tdeaths: '',\n\t\t\t\trecovered: '',\n\t\t\t\tnewConfirmed: '',\n\t\t\t\tnewHospitalized: '',\n\t\t\t\tnewDeaths: '',\n\t\t\t\tnewRecovered: '',\n\t\t\t},\n\t\t\tdata_pie: [{}],\n\t\t\tlastConfirmed: 0,\n\t\t\tlastDeath: 0,\n\t\t\tnoConfirmedStreak: 0,\n\t\t\tnoDeathStreak: 0,\n\t\t\trateRecovery: 0,\n\t\t\trateDeath: 0,\n\t\t\tshowGraph: false,\n\t\t};\n  }\n  \n  componentDidMount() {\n\t\tconst refDate = new Date(2020,7,20);\n\t\tthis.callAPIGlobalAll(refDate);\n\t\t\n\t\tif (this.state.selectCountry == 'Thailand')\n\t\t\tthis.callAPIThailand();\n\t\telse this.callAPIGlobal(this.state.selectCity,this.state.selectCountry,refDate);\n\t\t//else this.callAPIGlobalTimeline(this.state.selectCity,this.state.selectCountry);\n  }\n\t\n\t//For ranking and map functionalities\n\t//Only data from one day/file is processed\n\tasync callAPIGlobalAll(markDate) {\n\t\t\n\t\tlet countries = [];\n\t\tlet countriesN = 0;\n\t\t\n\t\tlet data = new Object();\n\t\t\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\n\t\t\n\t\tlet cityIndex = 0;\n\t\tlet countryIndex = 1;\n\t\tlet conIndex = 3;\n\t\tlet deathIndex = 4;\n\t\tlet recIndex = 5;\n\t\tlet quoteLimit = 0;\n\t\t//Workaround for source's formatting inconsistencies\n\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\n\t\t\tcityIndex = 2;\n\t\t\tcountryIndex = 3;\n\t\t\tconIndex = 7;\n\t\t\tdeathIndex = 8;\n\t\t\trecIndex = 9;\n\t\t\tquoteLimit = 2;\n\t\t}\n\t\t\n\t\tlet lines = '';\n\t\tconst markDateStr = markDate.toISOString();\n\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\tconsole.log(sourceDate);\n\n\t\ttry {\n\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tif (lines != '') {\n\t\t\tfor (let i=1; i<lines.length; i++) {\n\t\t\t\tif (lines[i] == '' || ((lines[i].match(/\"/g) || []).length > quoteLimit))\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tconst values = lines[i].split(',');\n\t\t\t\tconst country = values[countryIndex];\n\t\t\t\tconst city = values[cityIndex];\n\t\t\t\tlet confirmed = parseInt(values[conIndex]);\n\t\t\t\tlet hospitalized = parseInt(values[10]);\n\t\t\t\tlet deaths = parseInt(values[deathIndex]);\n\t\t\t\tlet recovered = parseInt(values[recIndex]);\n\t\t\t\tif (data[country] != undefined) {\n\t\t\t\t\tconfirmed += data[country][\"Confirmed\"];\n\t\t\t\t\thospitalized += data[country][\"Hospitalized\"];\n\t\t\t\t\tdeaths += data[country][\"Deaths\"];\n\t\t\t\t\trecovered += data[country][\"Recovered\"];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdata[country] = new Object();\n\t\t\t\t\tdata[country].Cities = [];\n\t\t\t\t\tdata[country].CitiesN = 0;\n\t\t\t\t\tcountries[countriesN] = country;\n\t\t\t\t\tcountriesN++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst citiesN = data[country].CitiesN;\n\t\t\t\tdata[country].Confirmed = confirmed;\n\t\t\t\tdata[country].Hospitalized = hospitalized;\n\t\t\t\tdata[country].Deaths = deaths;\n\t\t\t\tdata[country].Recovered = recovered;\n\t\t\t\tdata[country].RecoveryRate = (recovered/confirmed) * 100;\n\t\t\t\tdata[country].MortalityRate = (deaths/confirmed) * 100;\n\t\t\t\tif (city != '') {\n\t\t\t\t\tdata[country].Cities[citiesN] = city;\n\t\t\t\t\tdata[country].CitiesN = citiesN + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(data);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcountries: countries,\n\t\t\t\tglobalData: data,\n\t\t\t});\n\t\t\t//console.log(this.state.countries);\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t//When foreign country is selected\n\t//Provides retrospective data and graph functionalities\n\t//Taxing, over 200 days/files must be processed\n\t//Somehow sometimes fast, sometimes slow. Cause still unknown.\n\tasync callAPIGlobalTimeline(city, country) {\n\t\t\n\t\tif (city == 'Overall') {\n\t\t\tcity = '';\n\t\t}\n\t\t\n\t\tlet data = [{}];\n\t\tlet dataN = 0;\n\t\t\n\t\tlet prevConfirmed = 0;\n\t\tlet prevHospitalized = 0;\n\t\tlet prevDeaths = 0;\n\t\tlet prevRecovered = 0;\n\t\t\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tlet markDate = new Date(2020,0,23);\n\t\tconst tomorrow = new Date();\n\t\ttomorrow.setDate(tomorrow.getDate()+1);\n\t\tconst now = tomorrow.getTime();\n\t\t\n\t\tlet cityIndex = 0;\n\t\tlet countryIndex = 1;\n\t\tlet conIndex = 3;\n\t\tlet deathIndex = 4;\n\t\tlet recIndex = 5;\n\t\t\n\t\tlet lastIndex = 1;\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\n\t\t\n\t\twhile (markDate.getTime() < now) {\n\t\t\tlet lines = '';\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tconsole.log(sourceDate);\n\t\t\t//console.log(lastIndex);\n\t\t\t\n\t\t\t//Workaround for source's formatting inconsistencies\n\t\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\n\t\t\t\tcityIndex = 2;\n\t\t\t\tcountryIndex = 3;\n\t\t\t\tconIndex = 7;\n\t\t\t\tdeathIndex = 8;\n\t\t\t\trecIndex = 9;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\t\n\t\t\tmarkDate.setDate(markDate.getDate()+1);\n\t\t\t\n\t\t\tif (lines == '')\n\t\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconsole.log(lastIndex);\n\t\t\tconst date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\tlet values = undefined;\n\t\t\tif (lines[lastIndex])\n\t\t\t\tvalues = lines[lastIndex].split(',');\n\t\t\telse lastIndex = 1;\n\t\t\t\n\t\t\tif (values == undefined || (city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex]))\n\t\t\t{\n\t\t\t\tfor (let i=lastIndex+1; i<lines.length; i++) {\n\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlastIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (values == undefined) {\n\t\t\t\t\tfor (let i=1; i<lastIndex; i++) {\n\t\t\t\t\t\tvalues = lines[i].split(',');\n\t\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\n\t\t\t\t\t\t\tvalues = undefined;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (values != undefined) {\n\t\t\t\tconst confirmed = parseInt(values[conIndex]);\n\t\t\t\tconst hospitalized = parseInt(values[10]);\n\t\t\t\tconst deaths = parseInt(values[deathIndex]);\n\t\t\t\tconst recovered = parseInt(values[recIndex]);\n\t\t\t\t\n\t\t\t\tdata[dataN] = {\n\t\t\t\t\tDate: date,\n\t\t\t\t\tConfirmed: confirmed,\n\t\t\t\t\tHospitalized: hospitalized,\n\t\t\t\t\tDeaths: deaths,\n\t\t\t\t\tRecovered: recovered,\n\t\t\t\t\tNewConfirmed: confirmed - prevConfirmed,\n\t\t\t\t\tNewHospitalized: hospitalized - prevHospitalized,\n\t\t\t\t\tNewDeaths: deaths - prevDeaths,\n\t\t\t\t\tNewRecovered: recovered - prevRecovered,\n\t\t\t\t}\n\t\t\t\tprevConfirmed = confirmed;\n\t\t\t\tprevHospitalized = hospitalized;\n\t\t\t\tprevDeaths = deaths;\n\t\t\t\tprevRecovered = recovered;\n\t\t\t\tdataN++;\n\t\t\t}\n\t\t}\n\t\tconsole.log(data);\n\t\t\n\t\tthis.processData(sourceRef, data);\n\t}\n\t\n\t//When foreign country is selected\n\t//No streak data or timeline functionality\n\t//Only data from two days/files is processed\n\tasync callAPIGlobal(city, country, markDate, process = true) {\n\t\t\n\t\tif (city == 'Overall') {\n\t\t\tcity = '';\n\t\t}\n\t\t\n\t\tlet data = [{}];\n\t\tdata[0] = {\n\t\t\tDate: '',\n\t\t\tConfirmed: 0,\n\t\t\tHospitalized: 0,\n\t\t\tDeaths: 0,\n\t\t\tRecovered: 0,\n\t\t\tRecoveryRate: 0,\n\t\t\tMortalityRate: 0,\n\t\t\tNewConfirmed: 0,\n\t\t\tNewHospitalized: 0,\n\t\t\tNewDeaths: 0,\n\t\t\tNewRecovered: 0,\n\t\t};\n\t\tconst thisData = data[0];\n\t\t\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\t\n\t\tlet lines = '';\n\t\twhile (lines == '') {\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tmarkDate.setDate(markDate.getDate()-1);\n\t\t\tconsole.log(sourceDate);\n\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t\tthisData.Date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i=1; i<lines.length; i++) {\n\t\t\tif ((lines[i].match(/\"/g) || []).length > 2)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst values = lines[i].split(',');\n\t\t\tif ((city != '' && city != values[2]) || (country != '' && country != values[3]))\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\n\t\t\tconst deaths = thisData[\"Deaths\"] + parseInt(values[8]);\n\t\t\tconst recovered = thisData[\"Recovered\"] + parseInt(values[9]);\n\t\t\tthisData.Confirmed = confirmed;\n\t\t\tthisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\n\t\t\tthisData.Deaths = deaths;\n\t\t\tthisData.Recovered = recovered;\n\t\t\tthisData.RecoveryRate = (recovered/confirmed) * 100;\n\t\t\tthisData.MortalityRate = (deaths/confirmed) * 100;\n\t\t}\n\t\t\n\t\tif (process) {\n\t\t\tconst prevData = await this.callAPIGlobal(city, country, markDate, false);\n\t\t\tthisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\n\t\t\tthisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\n\t\t\tthisData.NewDeaths = thisData.Deaths - prevData.Deaths;\n\t\t\tthisData.NewRecovered = thisData.Recovered - prevData.Recovered;\n\t\t\t\n\t\t\tconsole.log(data);\n\t\t\tthis.processData(sourceRef, data, false);\n\t\t\t\n\t\t}\n\t\treturn thisData;\n\t}\n\t\n\t//For when Thailand is selected\n\t//Provides retrospective data and graph functionalities\n\t//Local scoped source, data from over 200 days are stored within only one file\n\tasync callAPIThailand() {\n\t\t\n\t\tconst source = 'https://covid19.th-stat.com/api/open/timeline';\n\t\tlet data = [];\n\t\t\n\t\ttry {\n\t\t\tconst response = await axios.get(source);\n\t\t\tconsole.log(response);\n\t\t\tdata = response.data['Data'];\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tthis.processData(source, data);\n\t}\n\t\n\tgetLastDate(type, data) {\n\t\tfor (let i=data.length-1; i>=0; i--) {\n\t\t\tif (data[i][type] != 0)\n\t\t\t\treturn data[i]['Date'];\n\t\t}\n\t}\n\t\n\tgetDateDiff(date) {\n\t\tlet now = (new Date()).getTime();\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\n\t}\n\t\n\tprocessData(source, data, hasTimeline = true) {\n\t\tif (data.length <= 0)\n\t\t\treturn;\n\t\t\n\t\tconst lastData = data.slice(-1)[0];\n\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\treturn (\n\t\t\t\tObject.assign({},d,{\n\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\t\n\t\tconst lastUpdated = lastData['Date'];\n\t\tlet lastConfirmedFormatted = 0;\n\t\tlet lastDeathFormatted = 0;\n\t\tlet noConfirmedStreak = 0;\n\t\tlet noDeathStreak = 0;\n\n\t\tif (hasTimeline) {\n\t\t\tconst lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\t\tconst lastDeath = this.getLastDate('NewDeaths',data);\n\t\t\tlastConfirmedFormatted = lastConfirmed.slice(3,6) + lastConfirmed.slice(0,3) + lastConfirmed.slice(6);\n\t\t\tlastDeathFormatted = lastDeath.slice(3,6) + lastDeath.slice(0,3) + lastDeath.slice(6);\n\t\t\tnoConfirmedStreak = this.getDateDiff(lastConfirmed);\n\t\t\tnoDeathStreak = this.getDateDiff(lastDeath);\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\thasTimeline: hasTimeline,\n\t\t\tdataTimeline: dataReformatted,\n\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\tdata_text: {\n\t\t\t\tsource: source,\n\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t},\n\t\t\tdata_pie: [\n\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t],\n\t\t\tlastConfirmed: lastConfirmedFormatted,\n\t\t\tlastDeath: lastDeathFormatted,\n\t\t\tnoConfirmedStreak: noConfirmedStreak,\n\t\t\tnoDeathStreak: noDeathStreak,\n\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t});\n\t}\n\t\n\trender() {\n\t\tconst graphBlue = '#20A0E0';\n\t\tconst graphYellow = '#FFC060';\n\t\tconst graphRed = '#E04040';\n\t\tconst graphGreen = '#80E080';\n\t\t\n\t\tconst { classes } = this.props;\n\t\tconst { selectCountry, selectCity, dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n\t\t\n\t\tconst selectedCountryData = this.state.globalData[selectCountry];\n\t\tconst cityChoice = ((selectedCountryData != undefined && selectedCountryData.CitiesN != 0) ? selectedCountryData.Cities : [\"Overall\"]);\n\t\t\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar style={{background:'#BB0A1E'}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\n\t\t\t\t\t\t\t{/*<b>Simple COVID-19 Dashboard</b>*/}\n\t\t\t\t\t\t\t{this.state.selectCity}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.appBarSpacer}/>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\n\t\t\t\t\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={data_text.source}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\n\t\t\t\t\t\t\t\t\t\tdata_text.source\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t<Dropdown options={this.state.countries} value={selectCountry}\n\t\t\t\t\t\t\t\tonChange={(select)=>this.setState({selectCountry:select.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\toptions={cityChoice}\n\t\t\t\t\t\t\t\tvalue={selectCity} onChange={(select)=>this.setState({selectCity:select.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Confirmed</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Hospitalized</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Deaths</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Recovered</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{ this.state.hasTimeline && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid item xs={this.state.hasTimeline ? 6 : 12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\n\t\t\t\t\n\t\t\t\t\t{/*Button to toggle graph display*/}\n\t\t\t\t\t{ this.state.hasTimeline && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button onClick={() => this.setState({ showGraph: !this.state.showGraph })}>\n\t\t\t\t\t\t\tShow/Hide Graph\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\n\t\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={graphBlue} />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={graphRed} />\n\t\t\t\t\t\t\t\t\t</BarChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Pie, in total*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphYellow} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphRed} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphGreen} />\n\t\t\t\t\t\t\t\t\t\t</Pie>\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Bar, in total*/}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\n\t\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={graphBlue} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={graphYellow} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={graphRed} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={graphGreen} dot={false} />\n\t\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer className={classes.footer}>\n\t\t\t\t\t<Paper className={classes.paperFoot}>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tSimple Covid-19 Dashboard for Tencent Thailand's Internship Project\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\n            </Typography>\n          </Paper>\n        </footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}