{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; //MUI\n\nimport { withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar, Typography, CssBaseline, Container, Paper, Grid, styles, darkTheme } from '../components/muiComponents.js'; //DROPDOWN\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css'; //RECHARTS\n\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts'; //AXIOS DATA\n\nimport axios from 'axios';\nimport { fetchData, callAPIGlobalAll, callAPIGlobalTimeline, callAPIGlobal, callAPIThailand, clearAxiosCalls, getLastDate, getDateDiff, processData } from '../components/dataFetch.js'; //RANKING\n\nimport { countryCompare, globalRankSelect, globalRankTopTen, globalRanking, globalRankingHeading } from '../components/dataRank.js'; //JVECTORMAP\n\nimport { countryEncodeAssist, countryDecodeAssist, processMapGlobalData } from '../components/dataMap.js';\nimport '../public/jquery-jvectormap.css';\nimport dynamic from 'next/dynamic';\nexport const VectorMap = dynamic(() => import(\"react-jvectormap\").then(m => m.VectorMap), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-jvectormap\")],\n    modules: [\"react-jvectormap\"]\n  }\n}); //----------------------------------------------------------------\n\nconst cBlue = '#20A0E0';\nconst cOrange = '#F7B860';\nconst cRed = '#E04040';\nconst cGreen = '#80D080';\nconst cDRed = '#BB0A1E';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasData: false,\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      fastMode: true,\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false,\n      selectCategory: 'Hospitalized',\n      rankSelect: -1,\n      rankTopTen: [],\n      mapGlobalData: null\n    };\n    this.referenceDate = new Date();\n    this.referenceDate.setDate(this.referenceDate.getDate() - 1);\n    const CancelToken = axios.CancelToken;\n    this.cancelSource = CancelToken.source();\n\n    const {\n      getCode,\n      getName,\n      getData\n    } = require(\"country-list\");\n\n    this.getCountryCode = getCode;\n    this.getCountryName = getName;\n    this.getCountryData = getData; //Binding dataFetch functions\n\n    this.fetchData = fetchData.bind(this);\n    this.callAPIGlobalAll = callAPIGlobalAll.bind(this);\n    this.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\n    this.callAPIGlobal = callAPIGlobal.bind(this);\n    this.callAPIThailand = callAPIThailand.bind(this);\n    this.clearAxiosCalls = clearAxiosCalls.bind(this);\n    this.getLastDate = getLastDate.bind(this);\n    this.getDateDiff = getDateDiff.bind(this);\n    this.processData = processData.bind(this); //Binding dataRank functions\n\n    this.countryCompare = countryCompare.bind(this);\n    this.globalRankSelect = globalRankSelect.bind(this);\n    this.globalRankTopTen = globalRankTopTen.bind(this);\n    this.globalRanking = globalRanking.bind(this);\n    this.globalRankingHeading = globalRankingHeading.bind(this); //Binding dataRank functions\n\n    this.countryEncodeAssist = countryEncodeAssist.bind(this);\n    this.countryDecodeAssist = countryDecodeAssist.bind(this);\n    this.processMapGlobalData = processMapGlobalData.bind(this);\n  }\n\n  componentDidMount() {\n    this.callAPIGlobalAll(this.referenceDate);\n    this.fetchData(this.referenceDate);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectCountry != this.state.selectCountry || prevState.selectCity != this.state.selectCity || prevState.fastMode != this.state.fastMode) {\n      this.clearAxiosCalls();\n      this.fetchData(this.referenceDate);\n    }\n\n    if (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry) this.globalRanking(this.state.selectCategory);\n  }\n\n  renderSourceInfo() {\n    const {\n      data_text\n    } = this.state;\n    return __jsx(MuiThemeProvider, {\n      theme: darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }\n    }, __jsx(Typography, {\n      align: \"left\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n      variant: \"subtitle2\",\n      align: \"left\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, __jsx(\"a\", {\n      href: data_text.source,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, \" \", data_text.source)));\n  }\n\n  renderFetchControls(which) {\n    if (which == 0) {\n      //Button Fast/Full Mode Select\n      const {\n        fastMode\n      } = this.state;\n      return __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 5\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 10\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '128px',\n          float: 'right',\n          color: fastMode ? cDRed : 'blue'\n        },\n        onClick: () => this.setState({\n          fastMode: !fastMode\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 5\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }\n      }, fastMode ? \"FAST MODE\" : \"FULL MODE\")));\n    } else if (which == 1) {\n      //Dropdown Country Select\n      const {\n        countries,\n        selectCountry\n      } = this.state;\n      return __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 5\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 10\n        }\n      }), __jsx(Dropdown, {\n        options: countries,\n        value: selectCountry,\n        onChange: select => this.setState({\n          selectCountry: select.value,\n          selectCity: 'Overall'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 5\n        }\n      }));\n    } else {\n      //Dropdown City Select\n      const {\n        selectCountry,\n        selectCity\n      } = this.state;\n      const selectedCountryData = this.state.globalData[selectCountry];\n      let cityChoice = [\"Overall\"];\n\n      if (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\n        cityChoice = selectedCountryData.Cities.slice(0);\n        cityChoice.splice(0, 0, \"Overall\");\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 10\n        }\n      }), __jsx(Dropdown, {\n        options: cityChoice,\n        value: selectCity,\n        onChange: select => this.setState({\n          selectCity: select.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 5\n        }\n      }));\n    }\n  }\n\n  renderNumbers(which) {\n    const {\n      data_text\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n\n    if (which == 0) {\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 5\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 49\n        }\n      }, \"Confirmed\")), __jsx(Typography, {\n        style: {\n          color: cBlue\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 6\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 6\n        }\n      }, \"+ \", data_text.newConfirmed.toLocaleString()));\n    } else if (which == 1) {\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 49\n        }\n      }, \"Hospitalized\")), __jsx(Typography, {\n        style: {\n          color: cOrange\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 6\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 6\n        }\n      }, data_text.newHospitalized >= 0 ? '+' : '-', \" \", Math.abs(data_text.newHospitalized).toLocaleString()));\n    } else if (which == 2) {\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 5\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 49\n        }\n      }, \"Deaths\")), __jsx(Typography, {\n        style: {\n          color: cRed\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 6\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }\n      }, \"+ \", data_text.newDeaths.toLocaleString()));\n    } else {\n      return __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 5\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 6\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 45\n        }\n      }, \"Recovered\")), __jsx(Typography, {\n        style: {\n          color: cGreen\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 6\n        }\n      }, \"+ \", data_text.newRecovered.toLocaleString()));\n    }\n  }\n\n  renderStreaks() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 4\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }\n    }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }\n    }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"));\n  }\n\n  renderRates() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 4\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }\n    }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n      variant: \"h6\",\n      style: {\n        color: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }\n    }, \"Mortality Rate: \", this.state.rateDeath));\n  }\n\n  renderGraphButton() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"button\", {\n      style: {\n        height: '32px',\n        width: '144px',\n        float: 'right',\n        color: this.state.showGraph ? 'grey' : 'steelblue'\n      },\n      onClick: () => this.setState({\n        showGraph: !this.state.showGraph\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 4\n      }\n    }, \"Show/Hide Graphs\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 4\n      }\n    }));\n  }\n\n  renderGraphs() {\n    const {\n      classes\n    } = this.props;\n    const {\n      dataTimeline,\n      dataTimeline15,\n      data_pie\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 4\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 6\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }\n    }, __jsx(BarChart, {\n      width: 500,\n      height: 300,\n      data: dataTimeline15,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 8\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewConfirmed\",\n      fill: cBlue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewDeaths\",\n      fill: cRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 6\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }\n    }, __jsx(PieChart, {\n      width: 400,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 8\n      }\n    }, __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }), __jsx(Pie, {\n      dataKey: \"value\",\n      isAnimationActive: false,\n      data: data_pie,\n      outerRadius: 100,\n      label: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, __jsx(Cell, {\n      fill: cOrange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 10\n      }\n    }), __jsx(Cell, {\n      fill: cRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 10\n      }\n    }), __jsx(Cell, {\n      fill: cGreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 10\n      }\n    })), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 6\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }\n    }, __jsx(LineChart, {\n      data: dataTimeline,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 8\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Confirmed\",\n      stroke: cBlue,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Hospitalized\",\n      stroke: cOrange,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Deaths\",\n      stroke: cRed,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Recovered\",\n      stroke: cGreen,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    })))))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 4\n      }\n    }), __jsx(\"button\", {\n      style: {\n        height: '32px',\n        width: '144px',\n        float: 'right',\n        color: 'grey'\n      },\n      onClick: () => this.setState({\n        showGraph: !this.state.showGraph\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 4\n      }\n    }, \"Hide Graphs\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 4\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderRankingHeader() {\n    return __jsx(React.Fragment, null, __jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        color: cRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 4\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 5\n      }\n    }, \"Global Ranking based on:\")), __jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        color: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 4\n      }\n    }, this.globalRankingHeading(this.state.selectCategory)));\n  }\n\n  renderCategoryDropdown() {\n    const categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\n    return __jsx(React.Fragment, null, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 4\n      }\n    }), __jsx(Dropdown, {\n      options: categoryChoice,\n      value: 'Hospitalized',\n      onChange: select => this.setState({\n        selectCategory: select.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 4\n      }\n    }));\n  }\n\n  renderRanking() {\n    if (this.state.rankSelect < 0) return null;\n    const {\n      classes\n    } = this.props;\n    const {\n      selectCountry,\n      selectCategory\n    } = this.state;\n    let rankSuffix = \" cases\";\n    if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') rankSuffix = \"%\";\n    return __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 4\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 6\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 8\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }\n    }, \"Rank \", this.state.rankSelect, \". \", selectCountry, \" - \", this.state.globalData[selectCountry][selectCategory], rankSuffix), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }\n    }), \"out of \", this.state.countries.length, \" countries\"))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 6\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 8\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }, \"Top 10 Countries\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 32\n      }\n    })), __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 8\n      }\n    }, this.state.rankTopTen.map((c, i) => __jsx(React.Fragment, null, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }\n    }, i + 1, \".\"), \" \", c.Country, \" - \", c[selectCategory], rankSuffix, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 70\n      }\n    }))))))));\n  }\n\n  renderMap(category) {\n    if (this.state.mapGlobalData == null) return null;\n\n    const handleClick = (e, code) => {\n      const country = this.countryDecodeAssist(code);\n      if (this.state.countries.includes(country)) this.setState({\n        selectCountry: country,\n        selectCity: 'Overall'\n      });\n    };\n\n    const data = this.state.mapGlobalData;\n    const mapData = data[category]; //console.log(mapData);\n\n    let minColor = \"#FFFFFF\";\n    let maxColor = cRed;\n    if (category == \"Recovered\" || category == \"RecoveryRate\") maxColor = cBlue;\n    let normFunction = \"polynomial\";\n    if (category == \"RecoveryRate\" || category == \"MortalityRate\") normFunction = \"linear\";\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 4\n      }\n    }, __jsx(VectorMap, {\n      map: \"world_mill\",\n      backgroundColor: \"#000000\" //\"transparent\" //change it to ocean blue: #0077be\n      ,\n      zoomOnScroll: false,\n      containerStyle: {\n        width: \"100%\",\n        height: \"520px\"\n      },\n      onRegionClick: handleClick,\n      containerClassName: \"map\",\n      regionStyle: {\n        initial: {\n          fill: \"#A0A0A0\",\n          \"fill-opacity\": 1,\n          stroke: \"white\",\n          \"stroke-width\": 0.2,\n          \"stroke-opacity\": 1\n        },\n        hover: {\n          \"fill-opacity\": 0.75,\n          cursor: \"pointer\"\n        },\n        selected: {},\n        selectedHover: {}\n      },\n      regionsSelectable: false,\n      series: {\n        regions: [{\n          values: mapData,\n          //this is your data\n          scale: [minColor, maxColor],\n          //your color game's here\n          normalizeFunction: normFunction\n        }]\n      },\n      onRegionTipShow: (event, label, code) => {\n        label.html('<b><i>' + label.html() + '</i></b></br>' + 'Confirmed: ' + data['Confirmed'][code] + '</br>' + 'Hospitalized: ' + data['Hospitalized'][code] + '</br>' + 'Deaths: ' + data['Deaths'][code] + '</br>' + 'Recovered: ' + data['Recovered'][code] + '</br>' + 'Recovery rate: ' + data['RecoveryRate'][code] + '%' + '</br>' + 'Mortality rate: ' + data['MortalityRate'][code] + '%');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  render() {\n    if (!this.state.hasData) return \"ERROR: Cannot fetch data\";\n    const {\n      classes\n    } = this.props;\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 4\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 5\n      }\n    }), __jsx(AppBar, {\n      style: {\n        background: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 5\n      }\n    }, __jsx(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 8\n      }\n    }, \"COVID-19 Dashboard\")))), __jsx(\"div\", {\n      className: classes.appBarSpacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 5\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 7\n      }\n    }, this.renderSourceInfo()), __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 7\n      }\n    }, this.renderFetchControls(0)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 7\n      }\n    }, this.renderFetchControls(1)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 7\n      }\n    }, this.renderFetchControls(2)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 7\n      }\n    }, this.renderNumbers(0)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 7\n      }\n    }, this.renderNumbers(1)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 7\n      }\n    }, this.renderNumbers(2)), \" \", __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 7\n      }\n    }, this.renderNumbers(3)), \" \", this.state.hasTimeline && __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 38\n      }\n    }, this.renderStreaks()), \" \", __jsx(Grid, {\n      item: true,\n      xs: this.state.hasTimeline ? 6 : 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 7\n      }\n    }, this.renderRates()), \" \"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 6\n      }\n    }), this.state.hasTimeline && this.renderGraphButton(), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 6\n      }\n    }), this.state.showGraph && this.renderGraphs(), \" \", __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 7\n      }\n    }, this.renderRankingHeader()), \" \", __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 7\n      }\n    }, this.renderCategoryDropdown()), \" \"), __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 6\n      }\n    }, this.renderRanking(), \" \", __jsx(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 7\n      }\n    }, this.renderMap(selectCategory)), \" \")), __jsx(\"footer\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      style: {\n        background: \"#8F8080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 8\n      }\n    }, \"COVID-19 Dashboard for Tencent Thailand's Internship Project\")), __jsx(Typography, {\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 7\n      }\n    }, \"By Thanjira S. and Woottipat H.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","styles","darkTheme","Dropdown","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","axios","fetchData","callAPIGlobalAll","callAPIGlobalTimeline","callAPIGlobal","callAPIThailand","clearAxiosCalls","getLastDate","getDateDiff","processData","countryCompare","globalRankSelect","globalRankTopTen","globalRanking","globalRankingHeading","countryEncodeAssist","countryDecodeAssist","processMapGlobalData","dynamic","VectorMap","then","m","ssr","cBlue","cOrange","cRed","cGreen","cDRed","App","Component","constructor","props","state","hasData","selectCountry","selectCity","countries","globalData","fastMode","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","selectCategory","rankSelect","rankTopTen","mapGlobalData","referenceDate","Date","setDate","getDate","CancelToken","cancelSource","source","getCode","getName","getData","require","getCountryCode","getCountryName","getCountryData","bind","componentDidMount","componentDidUpdate","prevProps","prevState","renderSourceInfo","renderFetchControls","which","height","width","float","color","setState","select","value","selectedCountryData","cityChoice","undefined","CitiesN","Cities","slice","splice","renderNumbers","classes","paper","toLocaleString","Math","abs","renderStreaks","renderRates","renderGraphButton","renderGraphs","top","right","left","bottom","renderRankingHeader","renderCategoryDropdown","categoryChoice","renderRanking","rankSuffix","length","map","c","i","Country","renderMap","category","handleClick","e","code","country","includes","data","mapData","minColor","maxColor","normFunction","initial","fill","stroke","hover","cursor","selected","selectedHover","regions","values","scale","normalizeFunction","event","label","html","render","root","background","title","appBarSpacer","footer"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\n\r\n//MUI\r\nimport {withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar,\r\n\tTypography, CssBaseline, Container, Paper, Grid,\r\n\tstyles, darkTheme} from '../components/muiComponents.js';\r\n\r\n//DROPDOWN\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n//RECHARTS\r\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \r\n  Pie, Cell, } from 'recharts';\r\n\t\r\n//AXIOS DATA\r\nimport axios from 'axios';\r\nimport {fetchData, callAPIGlobalAll, callAPIGlobalTimeline,\r\n\tcallAPIGlobal, callAPIThailand, clearAxiosCalls,\r\n\tgetLastDate, getDateDiff, processData} from '../components/dataFetch.js';\r\n\t\r\n//RANKING\r\nimport {countryCompare, globalRankSelect, globalRankTopTen,\r\n\tglobalRanking, globalRankingHeading} from '../components/dataRank.js';\r\n\t\r\n//JVECTORMAP\r\nimport {countryEncodeAssist, countryDecodeAssist, processMapGlobalData} from '../components/dataMap.js';\r\nimport '../public/jquery-jvectormap.css'\r\nimport dynamic from 'next/dynamic'\r\nexport const VectorMap = dynamic(\r\n  () => import(\"react-jvectormap\").then((m) => m.VectorMap),\r\n  { ssr: false, }\r\n);\r\n\t\r\n//----------------------------------------------------------------\r\n\r\nconst cBlue = '#20A0E0';\r\nconst cOrange = '#F7B860';\r\nconst cRed = '#E04040';\r\nconst cGreen = '#80D080';\r\nconst cDRed = '#BB0A1E';\r\n\r\nclass App extends React.Component {\r\n\t\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasData: false,\r\n\t\t\tselectCountry: 'Thailand',\r\n\t\t\tselectCity: 'Overall',\r\n\t\t\tcountries: [],\r\n\t\t\tglobalData: [],\r\n\t\t\tfastMode: true,\r\n\t\t\thasTimeline: true,\r\n\t\t\tdataTimeline: [],\r\n\t\t\tdataTimeline15: [],\r\n\t\t\tdata_text: {\r\n\t\t\t\tupdatedDate: '',\r\n\t\t\t\tconfirmed: '',\r\n\t\t\t\thospitalized: '',\r\n\t\t\t\tdeaths: '',\r\n\t\t\t\trecovered: '',\r\n\t\t\t\tnewConfirmed: '',\r\n\t\t\t\tnewHospitalized: '',\r\n\t\t\t\tnewDeaths: '',\r\n\t\t\t\tnewRecovered: '',\r\n\t\t\t},\r\n\t\t\tdata_pie: [{}],\r\n\t\t\tlastConfirmed: 0,\r\n\t\t\tlastDeath: 0,\r\n\t\t\tnoConfirmedStreak: 0,\r\n\t\t\tnoDeathStreak: 0,\r\n\t\t\trateRecovery: 0,\r\n\t\t\trateDeath: 0,\r\n\t\t\tshowGraph: false,\r\n\t\t\tselectCategory: 'Hospitalized',\r\n\t\t\trankSelect: -1,\r\n\t\t\trankTopTen: [],\r\n\t\t\tmapGlobalData: null,\r\n\t\t};\r\n\t\t\r\n\t\tthis.referenceDate = new Date();\r\n\t\tthis.referenceDate.setDate(this.referenceDate.getDate()-1);\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n\t\t\r\n\t\tconst { getCode, getName, getData } = require(\"country-list\");\r\n\t\tthis.getCountryCode = getCode;\r\n\t\tthis.getCountryName = getName;\r\n\t\tthis.getCountryData = getData;\r\n\t\t\r\n\t\t//Binding dataFetch functions\r\n\t\tthis.fetchData = fetchData.bind(this);\r\n\t\tthis.callAPIGlobalAll = callAPIGlobalAll.bind(this);\r\n\t\tthis.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\r\n\t\tthis.callAPIGlobal = callAPIGlobal.bind(this);\r\n\t\tthis.callAPIThailand = callAPIThailand.bind(this);\r\n\t\tthis.clearAxiosCalls = clearAxiosCalls.bind(this);\r\n\t\tthis.getLastDate = getLastDate.bind(this);\r\n\t\tthis.getDateDiff = getDateDiff.bind(this);\r\n\t\tthis.processData = processData.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryCompare = countryCompare.bind(this);\r\n\t\tthis.globalRankSelect = globalRankSelect.bind(this);\r\n\t\tthis.globalRankTopTen = globalRankTopTen.bind(this);\r\n\t\tthis.globalRanking = globalRanking.bind(this);\r\n\t\tthis.globalRankingHeading = globalRankingHeading.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryEncodeAssist = countryEncodeAssist.bind(this);\r\n\t\tthis.countryDecodeAssist = countryDecodeAssist.bind(this);\r\n\t\tthis.processMapGlobalData = processMapGlobalData.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t\tthis.callAPIGlobalAll(this.referenceDate);\r\n\t\tthis.fetchData(this.referenceDate);\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.selectCountry != this.state.selectCountry) ||\r\n     \t\t(prevState.selectCity != this.state.selectCity) ||\r\n\t\t\t\t(prevState.fastMode != this.state.fastMode))\r\n\t\t{\r\n\t\t\tthis.clearAxiosCalls();\r\n\t\t\tthis.fetchData(this.referenceDate);\r\n\t\t}\r\n\t\t\r\n\t\tif (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry)\r\n\t\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\t\r\n\trenderSourceInfo() {\r\n\t\tconst {data_text} = this.state;\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={darkTheme}>\r\n\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\tLast updated: {data_text.updatedDate}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\thref={data_text.source}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"> {\r\n\t\t\t\t\t\tdata_text.source\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Typography>\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderFetchControls(which) {\r\n\t\tif (which == 0) {\t//Button Fast/Full Mode Select\r\n\t\t\tconst {fastMode} = this.state;\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\twidth : '128px',\r\n\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\tcolor: (fastMode ? cDRed : 'blue')\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => this.setState({ fastMode: !fastMode })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<b>{fastMode ? \"FAST MODE\" : \"FULL MODE\"}</b>\r\n\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 1) {\t//Dropdown Country Select\r\n\t\t\tconst {countries, selectCountry} = this.state;\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<Dropdown options={countries} value={selectCountry}\r\n\t\t\t\t\tonChange={(select) => this.setState({ selectCountry: select.value, selectCity: 'Overall' })}\r\n\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\t//Dropdown City Select\r\n\t\t\tconst {selectCountry, selectCity} = this.state;\r\n\t\t\tconst selectedCountryData = this.state.globalData[selectCountry];\r\n\t\t\tlet cityChoice = [\"Overall\"];\r\n\t\t\tif (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\r\n\t\t\t\tcityChoice = selectedCountryData.Cities.slice(0);\r\n\t\t\t\tcityChoice.splice(0,0,\"Overall\");\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<Dropdown options={cityChoice} value={selectCity}\r\n\t\t\t\t\tonChange={(select) => this.setState({ selectCity:select.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\trenderNumbers(which) {\r\n\t\tconst {data_text} = this.state;\r\n\t\tconst {classes} = this.props;\r\n\t\tif (which == 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'steelblue' }}><b>Confirmed</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cBlue }} variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'steelblue' }} variant=\"h5\">+ {data_text.newConfirmed.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'goldenrod' }}><b>Hospitalized</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cOrange }} variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'goldenrod' }} variant=\"h5\">\r\n\t\t\t\t\t\t{(data_text.newHospitalized >= 0) ? '+' : '-'} {Math.abs(data_text.newHospitalized).toLocaleString()}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (which == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'fireBrick' }}><b>Deaths</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cRed }} variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'fireBrick' }} variant=\"h5\">+ {data_text.newDeaths.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Typography style={{ color: 'green' }}><b>Recovered</b></Typography>\r\n\t\t\t\t\t<Typography style={{ color: cGreen }} variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t<Typography style={{ color: 'green' }} variant=\"h5\">+ {data_text.newRecovered.toLocaleString()}</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\trenderStreaks() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\r\n\t\t\t\t</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRates() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Typography variant='h6' style={{ color: 'green' }}>\r\n\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h6' style={{ color: cDRed }}>\r\n\t\t\t\t\tMortality Rate: {this.state.rateDeath}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderGraphButton() {\r\n\t\tconst {classes} = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '32px',\r\n\t\t\t\t\twidth : '144px',\r\n\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\tcolor: (this.state.showGraph ? 'grey' : 'steelblue')\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t>\r\n\t\t\t\tShow/Hide Graphs\r\n\t\t\t</button>\r\n\t\t\t<br/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderGraphs() {\r\n\t\tconst {classes} = this.props;\r\n\t\tconst {dataTimeline, dataTimeline15, data_pie} = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\r\n\t\t\t\t{/*Bar, last 14 days*/}\r\n\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\tdata={dataTimeline15}\r\n\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\r\n\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={cBlue}/>\r\n\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={cRed}/>\r\n\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t{/*Pie, in total*/}\r\n\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cOrange} />\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cRed} />\r\n\t\t\t\t\t\t\t\t\t<Cell fill={cGreen} />\r\n\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t{/*Bar, in total*/}\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tdata={dataTimeline}\r\n\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\r\n\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={cBlue} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={cOrange} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={cRed} dot={false} />\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={cGreen} dot={false} />\r\n\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t{/*Hide Graph Button*/}\r\n\t\t\t<br/>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{ height: '32px', width : '144px', float: 'right', color: 'grey' }}\r\n\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t>\r\n\t\t\t\tHide Graphs\r\n\t\t\t</button>\r\n\t\t\t<br/><br/>\r\n\t\t\t\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRankingHeader() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<Typography variant='h5' style={{ color: cRed }}>\r\n\t\t\t\t<b>Global Ranking based on:</b>\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='h5' style={{ color: cDRed }}>\r\n\t\t\t\t{this.globalRankingHeading(this.state.selectCategory)}\r\n\t\t\t</Typography>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderCategoryDropdown() {\r\n\t\tconst categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<Dropdown options={categoryChoice} value={'Hospitalized'}\r\n\t\t\t\tonChange={(select) => this.setState({ selectCategory: select.value})}\r\n\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderRanking() {\r\n\t\tif (this.state.rankSelect < 0)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst {classes} = this.props;\r\n\t\tconst {selectCountry, selectCategory} = this.state;\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate'))\r\n\t\t\trankSuffix = \"%\";\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Grid container spacing={2} direction='column'>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<Typography align='center'>\r\n\t\t\t\t\t\t\t\t<b>Rank {this.state.rankSelect}. {selectCountry} - {this.state.globalData[selectCountry][selectCategory]}{rankSuffix}</b>\r\n\t\t\t\t\t\t\t\t<br/>out of {this.state.countries.length} countries\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t<b>Top 10 Countries</b><br/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{this.state.rankTopTen.map((c, i) => (\r\n\t\t\t\t\t\t\t\t<><b>{i+1}.</b> {c.Country} - {c[selectCategory]}{rankSuffix}<br/></>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderMap(category) {\r\n\t\tif (this.state.mapGlobalData == null)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst handleClick = (e, code) => {\r\n\t\t\tconst country = this.countryDecodeAssist(code);\r\n\t\t\tif (this.state.countries.includes(country))\r\n\t\t\t\tthis.setState({ selectCountry: country, selectCity: 'Overall'});\r\n\t\t};\r\n\r\n\t\tconst data = this.state.mapGlobalData;\r\n\t\tconst mapData = data[category];\r\n\t\t//console.log(mapData);\r\n\r\n\t\tlet minColor = \"#FFFFFF\";\r\n\t\tlet maxColor = cRed;\r\n\t\tif (category == \"Recovered\" || category == \"RecoveryRate\")\r\n\t\t\tmaxColor = cBlue;\r\n\r\n\t\tlet normFunction = \"polynomial\";\r\n\t\tif (category == \"RecoveryRate\" || category == \"MortalityRate\")\r\n\t\t\tnormFunction = \"linear\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<VectorMap\r\n\t\t\t\t\tmap={\"world_mill\"}\r\n\t\t\t\t\tbackgroundColor=\"#000000\"//\"transparent\" //change it to ocean blue: #0077be\r\n\t\t\t\t\tzoomOnScroll={false}\r\n\t\t\t\t\tcontainerStyle={{\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\theight: \"520px\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionClick={handleClick}\r\n\t\t\t\t\tcontainerClassName=\"map\"\r\n\t\t\t\t\tregionStyle={{\r\n\t\t\t\t\t\tinitial: {\r\n\t\t\t\t\t\t\tfill: \"#A0A0A0\",\r\n\t\t\t\t\t\t\t\"fill-opacity\": 1,\r\n\t\t\t\t\t\t\tstroke: \"white\",\r\n\t\t\t\t\t\t\t\"stroke-width\": 0.2,\r\n\t\t\t\t\t\t\t\"stroke-opacity\": 1\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\"fill-opacity\": 0.75,\r\n\t\t\t\t\t\t\tcursor: \"pointer\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tselected: {},\r\n\t\t\t\t\t\tselectedHover: {}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tregionsSelectable={false}\r\n\t\t\t\t\tseries={{\r\n\t\t\t\t\t\tregions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalues: mapData, //this is your data\r\n\t\t\t\t\t\t\t\tscale: [minColor, maxColor], //your color game's here\r\n\t\t\t\t\t\t\t\tnormalizeFunction: normFunction\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionTipShow={(event, label, code) => {\r\n\t\t\t\t\t\tlabel.html(\r\n\t\t\t\t\t\t\t'<b><i>'+label.html()+'</i></b></br>'+\r\n\t\t\t\t\t\t\t'Confirmed: '+data['Confirmed'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Hospitalized: '+data['Hospitalized'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Deaths: '+data['Deaths'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovered: '+data['Recovered'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovery rate: '+data['RecoveryRate'][code]+'%'+'</br>'+\r\n\t\t\t\t\t\t\t'Mortality rate: '+data['MortalityRate'][code]+'%'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (!this.state.hasData)\r\n\t\t\treturn \"ERROR: Cannot fetch data\";\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t\r\n\t\t\t\t{/* ******************************** Title Bar ******************************** */}\r\n\t\t\t\t<AppBar style={{background: cDRed}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<div className={classes.appBarSpacer}/>\r\n\t\t\t\t\r\n\t\t\t\t<Container>\r\n\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Top Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{/* -- Source Info -- */}\r\n\t\t\t\t\t\t<Grid item xs={4}>{this.renderSourceInfo()}</Grid>\r\n\t\t\t\t\t\t{/* -- Data Fetch Controls -- */}\r\n\t\t\t\t\t\t<Grid item xs={2}>{this.renderFetchControls(0)}</Grid> {/* Fast/Full Button */}\r\n\t\t\t\t\t\t<Grid item xs={3}>{this.renderFetchControls(1)}</Grid> {/* Country Dropdown */}\r\n\t\t\t\t\t\t<Grid item xs={3}>{this.renderFetchControls(2)}</Grid> {/* City Dropdown */}\r\n\t\t\t\t\t\t{/* -- Basic Numbers -- */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(0)}</Grid> {/* Confirmed */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(1)}</Grid> {/* Hospitalized */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(2)}</Grid> {/* Deaths */}\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>{this.renderNumbers(3)}</Grid> {/* Recovered */}\r\n\t\t\t\t\t\t{/* -- Additional Numbers -- */}\r\n\t\t\t\t\t\t{ (this.state.hasTimeline) && (<Grid item xs={6}>{this.renderStreaks()}</Grid>) } {/* Streaks */}\r\n\t\t\t\t\t\t<Grid item xs={ this.state.hasTimeline ? 6 : 12}>{this.renderRates()}</Grid> {/* Rates */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\r\n\r\n\t\t\t\t\t{/* ******************************** Graphs Section ******************************** */}\r\n\t\t\t\t\t<br/>{ (this.state.hasTimeline) && (this.renderGraphButton())} {/* Show/Hide Graph Button */}\r\n\t\t\t\t\t<br/>{ (this.state.showGraph) && (this.renderGraphs())} {/* Graphs */}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Upper Bottom Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={6}>{this.renderRankingHeader()}</Grid> {/* Ranking Header */}\r\n\t\t\t\t\t\t<Grid item xs={2}>{this.renderCategoryDropdown()}</Grid> {/* Category Dropdown */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t{/* ******************************** Bottom Section ******************************** */}\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{this.renderRanking()} {/* Rankings */}\r\n\t\t\t\t\t\t<Grid item xs={9}>{this.renderMap(selectCategory)}</Grid> {/* Map */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t{/* ******************************** Footer ******************************** */}\r\n\t\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t\t<Paper className={classes.paper} style={{background: \"#8F8080\"}}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard for Tencent Thailand's Internship Project</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\r\n            </Typography>\r\n          </Paper>\r\n        </footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}