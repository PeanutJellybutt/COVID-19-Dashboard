{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nvar styles = function styles(theme) {\n  return {\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperRank: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'justify',\n      justifyContent: 'space-around',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperFoot: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#777070\"\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(2)\n    },\n    root: {\n      backgroundColor: \"#000000\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  };\n};\n\nvar darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      fastMode: true,\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false,\n      selectCategory: 'Hospitalized',\n      rankThailand: -1,\n      rankTopTen: []\n    };\n    _this.referenceDate = new Date(2020, 7, 20);\n    var CancelToken = axios.CancelToken;\n    _this.cancelSource = CancelToken.source();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPIGlobalAll(this.referenceDate);\n      this.fetchData(this.referenceDate);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(refDate) {\n      if (this.state.selectCountry == 'Thailand') this.callAPIThailand();else if (this.state.fastMode) this.callAPIGlobal(this.state.selectCity, this.state.selectCountry, new Date(refDate.getTime()));else this.callAPIGlobalTimeline(this.state.selectCity, this.state.selectCountry);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.selectCountry != this.state.selectCountry || prevState.selectCity != this.state.selectCity || prevState.fastMode != this.state.fastMode) {\n        this.clearAxiosCalls();\n        this.fetchData(this.referenceDate);\n      }\n\n      if (prevState.selectCategory != this.state.selectCategory) this.globalRanking(this.state.selectCategory);\n    }\n  }, {\n    key: \"clearAxiosCalls\",\n    value: function clearAxiosCalls() {\n      this.cancelSource.cancel('Axios operations cleared');\n      var CancelToken = axios.CancelToken;\n      this.cancelSource = CancelToken.source();\n    } //For ranking and map functionalities\n    //Only data from one day/file is processed\n\n  }, {\n    key: \"callAPIGlobalAll\",\n    value: function callAPIGlobalAll(markDate) {\n      var countries, countriesN, data, sourceRef, sourcePrefix, formatChange, cityIndex, countryIndex, conIndex, deathIndex, recIndex, quoteLimit, lines, markDateStr, sourceDate, cancelToken, response, i, values, country, city, confirmed, hospitalized, deaths, recovered, citiesN;\n      return _regeneratorRuntime.async(function callAPIGlobalAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              markDate = new Date(markDate.getTime());\n              countries = [];\n              countriesN = 0;\n              data = new Object();\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              formatChange = new Date(2020, 2, 22).getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              quoteLimit = 0; //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n                quoteLimit = 2;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear(); //console.log(sourceDate);\n\n              _context.prev = 17;\n              cancelToken = this.cancelSource.token;\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                },\n                cancelToken: cancelToken\n              }));\n\n            case 21:\n              response = _context.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context.next = 29;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](17);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", undefined);\n\n            case 29:\n              if (!(lines != '')) {\n                _context.next = 54;\n                break;\n              }\n\n              i = 1;\n\n            case 31:\n              if (!(i < lines.length)) {\n                _context.next = 53;\n                break;\n              }\n\n              if (!(lines[i] == '' || (lines[i].match(/\"/g) || []).length > quoteLimit)) {\n                _context.next = 34;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 50);\n\n            case 34:\n              values = lines[i].split(',');\n              country = values[countryIndex];\n              city = values[cityIndex];\n              confirmed = parseInt(values[conIndex]);\n              hospitalized = parseInt(values[10]);\n              deaths = parseInt(values[deathIndex]);\n              recovered = parseInt(values[recIndex]);\n\n              if (data[country] != undefined) {\n                confirmed += data[country][\"Confirmed\"];\n                hospitalized += data[country][\"Hospitalized\"];\n                deaths += data[country][\"Deaths\"];\n                recovered += data[country][\"Recovered\"];\n              } else {\n                data[country] = new Object();\n                data[country].Country = country;\n                data[country].Cities = [];\n                data[country].CitiesN = 0;\n                countries[countriesN] = country;\n                countriesN++;\n              }\n\n              citiesN = data[country].CitiesN;\n              data[country].Confirmed = confirmed;\n              data[country].Hospitalized = hospitalized;\n              data[country].Deaths = deaths;\n              data[country].Recovered = recovered;\n              data[country].RecoveryRate = (recovered / confirmed * 100).toFixed(2);\n              data[country].MortalityRate = (deaths / confirmed * 100).toFixed(2);\n\n              if (city != '') {\n                data[country].Cities[citiesN] = city;\n                data[country].CitiesN = citiesN + 1;\n              }\n\n            case 50:\n              i++;\n              _context.next = 31;\n              break;\n\n            case 53:\n              //console.log(data);\n              this.setState({\n                countries: countries,\n                globalData: data\n              }); //console.log(this.state.countries);\n\n            case 54:\n              this.globalRanking(this.state.selectCategory);\n\n            case 55:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[17, 25]], Promise);\n    } //When foreign country is selected\n    //Provides retrospective data and graph functionalities\n    //Taxing, over 200 days/files must be processed\n    //Somehow sometimes fast, sometimes slow. Cause still unknown.\n\n  }, {\n    key: \"callAPIGlobalTimeline\",\n    value: function callAPIGlobalTimeline(city, country) {\n      var data, dataN, prevConfirmed, prevHospitalized, prevDeaths, prevRecovered, sourceRef, sourcePrefix, markDate, tomorrow, now, cityIndex, countryIndex, conIndex, deathIndex, recIndex, lastIndex, formatChange, lines, markDateStr, sourceDate, cancelToken, response, date, values, i, _i, confirmed, hospitalized, deaths, recovered;\n\n      return _regeneratorRuntime.async(function callAPIGlobalTimeline$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (city == 'Overall') {\n                city = '';\n              }\n\n              data = [{}];\n              dataN = 0;\n              prevConfirmed = 0;\n              prevHospitalized = 0;\n              prevDeaths = 0;\n              prevRecovered = 0;\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              markDate = new Date(2020, 0, 23);\n              tomorrow = new Date();\n              tomorrow.setDate(tomorrow.getDate() + 1);\n              now = tomorrow.getTime();\n              cityIndex = 0;\n              countryIndex = 1;\n              conIndex = 3;\n              deathIndex = 4;\n              recIndex = 5;\n              lastIndex = 1;\n              formatChange = new Date(2020, 2, 22).getTime();\n\n            case 20:\n              if (!(markDate.getTime() < now)) {\n                _context2.next = 72;\n                break;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate); //console.log(lastIndex);\n              //Workaround for source's formatting inconsistencies\n\n              if (cityIndex == 0 && markDate.getTime() >= formatChange) {\n                cityIndex = 2;\n                countryIndex = 3;\n                conIndex = 7;\n                deathIndex = 8;\n                recIndex = 9;\n              }\n\n              _context2.prev = 26;\n              cancelToken = this.cancelSource.token;\n              _context2.next = 30;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                },\n                cancelToken: cancelToken\n              }));\n\n            case 30:\n              response = _context2.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context2.next = 38;\n              break;\n\n            case 34:\n              _context2.prev = 34;\n              _context2.t0 = _context2[\"catch\"](26);\n              console.log(_context2.t0);\n              return _context2.abrupt(\"return\", undefined);\n\n            case 38:\n              markDate.setDate(markDate.getDate() + 1);\n\n              if (!(lines == '')) {\n                _context2.next = 41;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 20);\n\n            case 41:\n              console.log(lastIndex);\n              date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              values = undefined;\n              if (lines[lastIndex]) values = lines[lastIndex].split(',');else lastIndex = 1;\n\n              if (!(values == undefined || city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 69;\n                break;\n              }\n\n              i = lastIndex + 1;\n\n            case 47:\n              if (!(i < lines.length)) {\n                _context2.next = 57;\n                break;\n              }\n\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 52;\n                break;\n              }\n\n              values = undefined;\n              return _context2.abrupt(\"continue\", 54);\n\n            case 52:\n              lastIndex = i;\n              return _context2.abrupt(\"break\", 57);\n\n            case 54:\n              i++;\n              _context2.next = 47;\n              break;\n\n            case 57:\n              if (!(values == undefined)) {\n                _context2.next = 69;\n                break;\n              }\n\n              _i = 1;\n\n            case 59:\n              if (!(_i < lastIndex)) {\n                _context2.next = 69;\n                break;\n              }\n\n              values = lines[_i].split(',');\n\n              if (!(city != '' && city != values[cityIndex] || country != '' && country != values[countryIndex])) {\n                _context2.next = 64;\n                break;\n              }\n\n              values = undefined;\n              return _context2.abrupt(\"continue\", 66);\n\n            case 64:\n              lastIndex = _i;\n              return _context2.abrupt(\"break\", 69);\n\n            case 66:\n              _i++;\n              _context2.next = 59;\n              break;\n\n            case 69:\n              if (values != undefined) {\n                confirmed = parseInt(values[conIndex]);\n                hospitalized = parseInt(values[10]);\n                deaths = parseInt(values[deathIndex]);\n                recovered = parseInt(values[recIndex]);\n                data[dataN] = {\n                  Date: date,\n                  Confirmed: confirmed,\n                  Hospitalized: hospitalized,\n                  Deaths: deaths,\n                  Recovered: recovered,\n                  NewConfirmed: confirmed - prevConfirmed,\n                  NewHospitalized: hospitalized - prevHospitalized,\n                  NewDeaths: deaths - prevDeaths,\n                  NewRecovered: recovered - prevRecovered\n                };\n                prevConfirmed = confirmed;\n                prevHospitalized = hospitalized;\n                prevDeaths = deaths;\n                prevRecovered = recovered;\n                dataN++;\n              }\n\n              _context2.next = 20;\n              break;\n\n            case 72:\n              console.log(data);\n              this.processData(sourceRef, data);\n\n            case 74:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[26, 34]], Promise);\n    } //When foreign country is selected\n    //No streak data or timeline functionality\n    //Only data from two days/files is processed\n\n  }, {\n    key: \"callAPIGlobal\",\n    value: function callAPIGlobal(city, country, markDate) {\n      var process,\n          data,\n          thisData,\n          sourceRef,\n          sourcePrefix,\n          lines,\n          markDateStr,\n          sourceDate,\n          cancelToken,\n          response,\n          i,\n          values,\n          confirmed,\n          deaths,\n          recovered,\n          prevData,\n          _args3 = arguments;\n      return _regeneratorRuntime.async(function callAPIGlobal$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              process = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : true;\n\n              if (city == 'Overall') {\n                city = '';\n              }\n\n              data = [{}];\n              data[0] = {\n                Date: '',\n                Confirmed: 0,\n                Hospitalized: 0,\n                Deaths: 0,\n                Recovered: 0,\n                RecoveryRate: 0,\n                MortalityRate: 0,\n                NewConfirmed: 0,\n                NewHospitalized: 0,\n                NewDeaths: 0,\n                NewRecovered: 0\n              };\n              thisData = data[0];\n              sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              lines = '';\n\n            case 8:\n              if (!(lines == '')) {\n                _context3.next = 28;\n                break;\n              }\n\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              markDate.setDate(markDate.getDate() - 1);\n              console.log(sourceDate);\n              _context3.prev = 13;\n              cancelToken = this.cancelSource.token;\n              _context3.next = 17;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                },\n                cancelToken: cancelToken\n              }));\n\n            case 17:\n              response = _context3.sent;\n              lines = response.data.split(/\\r?\\n/);\n              thisData.Date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              _context3.next = 26;\n              break;\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](13);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", undefined);\n\n            case 26:\n              _context3.next = 8;\n              break;\n\n            case 28:\n              i = 1;\n\n            case 29:\n              if (!(i < lines.length)) {\n                _context3.next = 47;\n                break;\n              }\n\n              if (!((lines[i].match(/\"/g) || []).length > 2)) {\n                _context3.next = 32;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 44);\n\n            case 32:\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[2] || country != '' && country != values[3])) {\n                _context3.next = 35;\n                break;\n              }\n\n              return _context3.abrupt(\"continue\", 44);\n\n            case 35:\n              confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\n              deaths = thisData[\"Deaths\"] + parseInt(values[8]);\n              recovered = thisData[\"Recovered\"] + parseInt(values[9]);\n              thisData.Confirmed = confirmed;\n              thisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\n              thisData.Deaths = deaths;\n              thisData.Recovered = recovered;\n              thisData.RecoveryRate = recovered / confirmed * 100;\n              thisData.MortalityRate = deaths / confirmed * 100;\n\n            case 44:\n              i++;\n              _context3.next = 29;\n              break;\n\n            case 47:\n              if (!process) {\n                _context3.next = 57;\n                break;\n              }\n\n              _context3.next = 50;\n              return _regeneratorRuntime.awrap(this.callAPIGlobal(city, country, markDate, false));\n\n            case 50:\n              prevData = _context3.sent;\n              thisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\n              thisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\n              thisData.NewDeaths = thisData.Deaths - prevData.Deaths;\n              thisData.NewRecovered = thisData.Recovered - prevData.Recovered;\n              console.log(data);\n              this.processData(sourceRef, data, false);\n\n            case 57:\n              return _context3.abrupt(\"return\", thisData);\n\n            case 58:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[13, 22]], Promise);\n    } //For when Thailand is selected\n    //Provides retrospective data and graph functionalities\n    //Local scoped source, data from over 200 days are stored within only one file\n\n  }, {\n    key: \"callAPIThailand\",\n    value: function callAPIThailand() {\n      var source, data, cancelToken, response;\n      return _regeneratorRuntime.async(function callAPIThailand$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              source = 'https://covid19.th-stat.com/api/open/timeline';\n              data = [];\n              _context4.prev = 2;\n              cancelToken = this.cancelSource.token;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(axios.get(source, {\n                cancelToken: cancelToken\n              }));\n\n            case 6:\n              response = _context4.sent;\n              console.log(response);\n              data = response.data['Data'];\n              _context4.next = 15;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log(_context4.t0);\n              return _context4.abrupt(\"return\", undefined);\n\n            case 15:\n              if (data.length > 0) this.processData(source, data);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[2, 11]], Promise);\n    }\n  }, {\n    key: \"getLastDate\",\n    value: function getLastDate(type, data) {\n      for (var i = data.length - 1; i >= 0; i--) {\n        if (data[i][type] != 0) return data[i]['Date'];\n      }\n    }\n  }, {\n    key: \"getDateDiff\",\n    value: function getDateDiff(date) {\n      var now = new Date().getTime();\n      return Math.floor((now - new Date(date).getTime()) / 86400000);\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(source, data) {\n      var hasTimeline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (data.length <= 0) return;\n      var lastData = data.slice(-1)[0];\n      var dataReformatted = data.slice().map(function (d) {\n        return Object.assign({}, d, {\n          Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n        });\n      });\n      var lastUpdated = lastData['Date'];\n      var lastConfirmedFormatted = 0;\n      var lastDeathFormatted = 0;\n      var noConfirmedStreak = 0;\n      var noDeathStreak = 0;\n\n      if (hasTimeline) {\n        var lastConfirmed = this.getLastDate('NewConfirmed', data);\n        var lastDeath = this.getLastDate('NewDeaths', data);\n        lastConfirmedFormatted = lastConfirmed.slice(3, 6) + lastConfirmed.slice(0, 3) + lastConfirmed.slice(6);\n        lastDeathFormatted = lastDeath.slice(3, 6) + lastDeath.slice(0, 3) + lastDeath.slice(6);\n        noConfirmedStreak = this.getDateDiff(lastConfirmed);\n        noDeathStreak = this.getDateDiff(lastDeath);\n      }\n\n      this.setState({\n        hasTimeline: hasTimeline,\n        dataTimeline: dataReformatted,\n        dataTimeline15: dataReformatted.slice(1).slice(-15),\n        data_text: {\n          source: source,\n          updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n          confirmed: lastData['Confirmed'],\n          hospitalized: lastData['Hospitalized'],\n          deaths: lastData['Deaths'],\n          recovered: lastData['Recovered'],\n          newConfirmed: lastData['NewConfirmed'],\n          newHospitalized: lastData['NewHospitalized'],\n          newDeaths: lastData['NewDeaths'],\n          newRecovered: lastData['NewRecovered']\n        },\n        data_pie: [{\n          name: 'Hospitalized',\n          value: lastData['Hospitalized']\n        }, {\n          name: 'Deaths',\n          value: lastData['Deaths']\n        }, {\n          name: 'Recovered',\n          value: lastData['Recovered']\n        }],\n        lastConfirmed: lastConfirmedFormatted,\n        lastDeath: lastDeathFormatted,\n        noConfirmedStreak: noConfirmedStreak,\n        noDeathStreak: noDeathStreak,\n        rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n        rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n      });\n    }\n  }, {\n    key: \"countryCompare\",\n    value: function countryCompare(category) {\n      return function innerSort(a, b) {\n        var valA = a[category];\n        var valB = b[category];\n        if (valA > valB) return -1;else if (valA < valB) return 1;else return 0;\n      };\n    }\n  }, {\n    key: \"globalRankThailand\",\n    value: function globalRankThailand(ranking) {\n      return ranking.findIndex(function (x) {\n        return x.Country == \"Thailand\";\n      });\n    }\n  }, {\n    key: \"globalRankTopTen\",\n    value: function globalRankTopTen(ranking) {\n      return ranking.slice(0, 10);\n    }\n  }, {\n    key: \"globalRanking\",\n    value: function globalRanking(category) {\n      var countries = Object.values(this.state.globalData);\n      countries.sort(this.countryCompare(category));\n      console.log(countries);\n      this.setState({\n        rankThailand: this.globalRankThailand(countries),\n        rankTopTen: this.globalRankTopTen(countries)\n      });\n    }\n  }, {\n    key: \"globalRankingHeading\",\n    value: function globalRankingHeading(category) {\n      if (category == 'Confirmed') return \"Confirmed Cases Count\";else if (category == 'Hospitalized') return \"Active Cases Count\";else if (category == 'Deaths') return \"Deceased Cases Count\";else if (category == 'Recovered') return \"Recovered Cases Count\";else if (category == 'RecoveryRate') return \"Recovery Rate\";else if (category == 'MortalityRate') return \"Mortality Rate\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cBlue = '#20A0E0';\n      var cOrange = '#F7B860';\n      var cRed = '#E04040';\n      var cGreen = '#80D080';\n      var cDRed = '#BB0A1E';\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          selectCountry = _this$state.selectCountry,\n          selectCity = _this$state.selectCity,\n          fastMode = _this$state.fastMode,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie,\n          selectCategory = _this$state.selectCategory;\n      var selectedCountryData = this.state.globalData[selectCountry];\n      var cityChoice = [\"Overall\"];\n\n      if (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\n        cityChoice = selectedCountryData.Cities.slice(0);\n        cityChoice.splice(0, 0, \"Overall\");\n      }\n\n      var categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\n      var rankSuffix = \" cases\";\n\n      if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') {\n        rankSuffix = \"%\";\n      }\n\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 8\n        }\n      }, \"Simple COVID-19 Dashboard\")))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '128px',\n          \"float\": 'right',\n          color: fastMode ? cDRed : 'blue'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            fastMode: !fastMode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 8\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 9\n        }\n      }, fastMode ? \"FAST MODE\" : \"FULL MODE\"))), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: this.state.countries,\n        value: selectCountry,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCountry: select.value,\n            selectCity: 'Overall'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 8\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: cityChoice,\n        value: selectCity,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCity: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 8\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 52\n        }\n      }, \"Confirmed\")), __jsx(Typography, {\n        style: {\n          color: cBlue\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newConfirmed.toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 52\n        }\n      }, \"Hospitalized\")), __jsx(Typography, {\n        style: {\n          color: cOrange\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 9\n        }\n      }, data_text.newHospitalized >= 0 ? '+' : '-', \" \", Math.abs(data_text.newHospitalized).toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 52\n        }\n      }, \"Deaths\")), __jsx(Typography, {\n        style: {\n          color: cRed\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newDeaths.toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 48\n        }\n      }, \"Recovered\")), __jsx(Typography, {\n        style: {\n          color: cGreen\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newRecovered.toLocaleString()))), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 8\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 10\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 10\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\")))), __jsx(Grid, {\n        item: true,\n        xs: this.state.hasTimeline ? 6 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 6\n        }\n      }), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: this.state.showGraph ? 'grey' : 'steelblue'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 7\n        }\n      }, \"Show/Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 7\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 6\n        }\n      }), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: cBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: cOrange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: cGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: cBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: cOrange,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: cRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: cGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }\n      })))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 6\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: 'grey'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 6\n        }\n      }, \"Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 6\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }\n      })), __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 7\n        }\n      }, __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 8\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 9\n        }\n      }, \"Global Ranking based on:\")), __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 8\n        }\n      }, this.globalRankingHeading(selectCategory))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 8\n        }\n      }), __jsx(Dropdown, {\n        options: categoryChoice,\n        value: 'Hospitalized',\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCategory: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 8\n        }\n      }))), this.state.rankThailand >= 0 && __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 7\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 8\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 10\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }\n      }, \"Rank \", this.state.rankThailand, \". Thailand - \", this.state.globalData['Thailand'][selectCategory], rankSuffix)))), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 8\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 10\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }\n      }, \"Top 10 Countries\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 34\n        }\n      })), __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 10\n        }\n      }, this.state.rankTopTen.map(function (c, i) {\n        return __jsx(React.Fragment, null, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 13\n          }\n        }, i + 1, \".\"), \" \", c.Country, \" - \", c[selectCategory], rankSuffix, __jsx(\"br\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 72\n          }\n        }));\n      })))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paperFoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 8\n        }\n      }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\")), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","Dropdown","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperRank","paperFoot","footer","palette","background","marginTop","root","formControl","margin","minWidth","selectEmpty","darkTheme","type","App","props","state","selectCountry","selectCity","countries","globalData","fastMode","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","selectCategory","rankThailand","rankTopTen","referenceDate","Date","CancelToken","cancelSource","source","callAPIGlobalAll","fetchData","refDate","callAPIThailand","callAPIGlobal","getTime","callAPIGlobalTimeline","prevProps","prevState","clearAxiosCalls","globalRanking","cancel","markDate","countriesN","data","Object","sourceRef","sourcePrefix","formatChange","cityIndex","countryIndex","conIndex","deathIndex","recIndex","quoteLimit","lines","markDateStr","toISOString","sourceDate","slice","getFullYear","cancelToken","token","get","headers","response","split","console","log","undefined","i","length","match","values","country","city","parseInt","Country","Cities","CitiesN","citiesN","Confirmed","Hospitalized","Deaths","Recovered","RecoveryRate","toFixed","MortalityRate","setState","dataN","prevConfirmed","prevHospitalized","prevDeaths","prevRecovered","tomorrow","setDate","getDate","now","lastIndex","date","replace","NewConfirmed","NewHospitalized","NewDeaths","NewRecovered","processData","process","thisData","prevData","Math","floor","lastData","dataReformatted","map","d","assign","lastUpdated","lastConfirmedFormatted","lastDeathFormatted","getLastDate","getDateDiff","name","value","category","innerSort","a","b","valA","valB","ranking","findIndex","x","sort","countryCompare","globalRankThailand","globalRankTopTen","cBlue","cOrange","cRed","cGreen","cDRed","classes","selectedCountryData","cityChoice","splice","categoryChoice","rankSuffix","height","width","color","select","toLocaleString","abs","top","right","left","bottom","globalRankingHeading","c","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport axios from 'axios';\r\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \r\n  Pie, Cell, } from 'recharts';\r\n  \r\nconst styles = theme => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\t\tbackgroundColor: \"#FFFEFE\",\r\n  },\r\n\tpaperRank: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'justify',\r\n    justifyContent: 'space-around',\r\n\t\tbackgroundColor: \"#FFFEFE\",\r\n  },\r\n\tpaperFoot: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\t\tbackgroundColor: \"#777070\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing(2),\r\n  },\r\n\troot: {\r\n    backgroundColor: \"#000000\",\r\n  },\r\n\tformControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n\t\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectCountry: 'Thailand',\r\n\t\t\tselectCity: 'Overall',\r\n\t\t\tcountries: [],\r\n\t\t\tglobalData: [],\r\n\t\t\tfastMode: true,\r\n\t\t\thasTimeline: true,\r\n\t\t\tdataTimeline: [],\r\n\t\t\tdataTimeline15: [],\r\n\t\t\tdata_text: {\r\n\t\t\t\tupdatedDate: '',\r\n\t\t\t\tconfirmed: '',\r\n\t\t\t\thospitalized: '',\r\n\t\t\t\tdeaths: '',\r\n\t\t\t\trecovered: '',\r\n\t\t\t\tnewConfirmed: '',\r\n\t\t\t\tnewHospitalized: '',\r\n\t\t\t\tnewDeaths: '',\r\n\t\t\t\tnewRecovered: '',\r\n\t\t\t},\r\n\t\t\tdata_pie: [{}],\r\n\t\t\tlastConfirmed: 0,\r\n\t\t\tlastDeath: 0,\r\n\t\t\tnoConfirmedStreak: 0,\r\n\t\t\tnoDeathStreak: 0,\r\n\t\t\trateRecovery: 0,\r\n\t\t\trateDeath: 0,\r\n\t\t\tshowGraph: false,\r\n\t\t\tselectCategory: 'Hospitalized',\r\n\t\t\trankThailand: -1,\r\n\t\t\trankTopTen: [],\r\n\t\t};\r\n\t\t\r\n\t\tthis.referenceDate = new Date(2020,7,20);\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t\tthis.callAPIGlobalAll(this.referenceDate);\r\n\t\tthis.fetchData(this.referenceDate);\r\n  }\r\n\t\r\n\tfetchData(refDate) {\r\n\t\tif (this.state.selectCountry == 'Thailand')\r\n\t\t\tthis.callAPIThailand();\r\n\t\telse if (this.state.fastMode)\r\n\t\t\tthis.callAPIGlobal(this.state.selectCity,this.state.selectCountry,new Date(refDate.getTime()));\r\n\t\telse this.callAPIGlobalTimeline(this.state.selectCity,this.state.selectCountry);\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.selectCountry != this.state.selectCountry) ||\r\n     \t\t(prevState.selectCity != this.state.selectCity) ||\r\n\t\t\t\t(prevState.fastMode != this.state.fastMode))\r\n\t\t{\r\n\t\t\tthis.clearAxiosCalls();\r\n\t\t\tthis.fetchData(this.referenceDate);\r\n\t\t}\r\n\t\t\r\n\t\tif (prevState.selectCategory != this.state.selectCategory)\r\n\t\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\t\r\n\tclearAxiosCalls() {\r\n\t\tthis.cancelSource.cancel('Axios operations cleared');\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n\t}\r\n\t\r\n\t//For ranking and map functionalities\r\n\t//Only data from one day/file is processed\r\n\tasync callAPIGlobalAll(markDate) {\r\n\t\t\r\n\t\tmarkDate = new Date(markDate.getTime());\r\n\t\t\r\n\t\tlet countries = [];\r\n\t\tlet countriesN = 0;\r\n\t\t\r\n\t\tlet data = new Object();\r\n\t\t\r\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\r\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\r\n\t\t\r\n\t\tlet cityIndex = 0;\r\n\t\tlet countryIndex = 1;\r\n\t\tlet conIndex = 3;\r\n\t\tlet deathIndex = 4;\r\n\t\tlet recIndex = 5;\r\n\t\tlet quoteLimit = 0;\r\n\t\t//Workaround for source's formatting inconsistencies\r\n\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\r\n\t\t\tcityIndex = 2;\r\n\t\t\tcountryIndex = 3;\r\n\t\t\tconIndex = 7;\r\n\t\t\tdeathIndex = 8;\r\n\t\t\trecIndex = 9;\r\n\t\t\tquoteLimit = 2;\r\n\t\t}\r\n\t\t\r\n\t\tlet lines = '';\r\n\t\tconst markDateStr = markDate.toISOString();\r\n\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\r\n\t\t//console.log(sourceDate);\r\n\r\n\t\ttry {\r\n\t\t\tconst cancelToken = this.cancelSource.token;\r\n\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', {\r\n\t\t\t\theaders: { 'Content-Type': 'text/csv' },\r\n\t\t\t\tcancelToken: cancelToken,\r\n\t\t\t});\r\n\t\t\tlines = response.data.split(/\\r?\\n/);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t\r\n\t\tif (lines != '') {\r\n\t\t\tfor (let i=1; i<lines.length; i++) {\r\n\t\t\t\tif (lines[i] == '' || ((lines[i].match(/\"/g) || []).length > quoteLimit))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t\tconst values = lines[i].split(',');\r\n\t\t\t\tconst country = values[countryIndex];\r\n\t\t\t\tconst city = values[cityIndex];\r\n\t\t\t\tlet confirmed = parseInt(values[conIndex]);\r\n\t\t\t\tlet hospitalized = parseInt(values[10]);\r\n\t\t\t\tlet deaths = parseInt(values[deathIndex]);\r\n\t\t\t\tlet recovered = parseInt(values[recIndex]);\r\n\t\t\t\tif (data[country] != undefined) {\r\n\t\t\t\t\tconfirmed += data[country][\"Confirmed\"];\r\n\t\t\t\t\thospitalized += data[country][\"Hospitalized\"];\r\n\t\t\t\t\tdeaths += data[country][\"Deaths\"];\r\n\t\t\t\t\trecovered += data[country][\"Recovered\"];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tdata[country] = new Object();\r\n\t\t\t\t\tdata[country].Country = country;\r\n\t\t\t\t\tdata[country].Cities = [];\r\n\t\t\t\t\tdata[country].CitiesN = 0;\r\n\t\t\t\t\tcountries[countriesN] = country;\r\n\t\t\t\t\tcountriesN++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst citiesN = data[country].CitiesN;\r\n\t\t\t\tdata[country].Confirmed = confirmed;\r\n\t\t\t\tdata[country].Hospitalized = hospitalized;\r\n\t\t\t\tdata[country].Deaths = deaths;\r\n\t\t\t\tdata[country].Recovered = recovered;\r\n\t\t\t\tdata[country].RecoveryRate = ((recovered/confirmed) * 100).toFixed(2);\r\n\t\t\t\tdata[country].MortalityRate = ((deaths/confirmed) * 100).toFixed(2);\r\n\t\t\t\tif (city != '') {\r\n\t\t\t\t\tdata[country].Cities[citiesN] = city;\r\n\t\t\t\t\tdata[country].CitiesN = citiesN + 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//console.log(data);\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountries: countries,\r\n\t\t\t\tglobalData: data,\r\n\t\t\t});\r\n\t\t\t//console.log(this.state.countries);\r\n\t\t}\r\n\t\t\r\n\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\t\r\n\t//When foreign country is selected\r\n\t//Provides retrospective data and graph functionalities\r\n\t//Taxing, over 200 days/files must be processed\r\n\t//Somehow sometimes fast, sometimes slow. Cause still unknown.\r\n\tasync callAPIGlobalTimeline(city, country) {\r\n\t\t\r\n\t\tif (city == 'Overall') {\r\n\t\t\tcity = '';\r\n\t\t}\r\n\t\t\r\n\t\tlet data = [{}];\r\n\t\tlet dataN = 0;\r\n\t\t\r\n\t\tlet prevConfirmed = 0;\r\n\t\tlet prevHospitalized = 0;\r\n\t\tlet prevDeaths = 0;\r\n\t\tlet prevRecovered = 0;\r\n\t\t\r\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\r\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\n\t\tlet markDate = new Date(2020,0,23);\r\n\t\tconst tomorrow = new Date();\r\n\t\ttomorrow.setDate(tomorrow.getDate()+1);\r\n\t\tconst now = tomorrow.getTime();\r\n\t\t\r\n\t\tlet cityIndex = 0;\r\n\t\tlet countryIndex = 1;\r\n\t\tlet conIndex = 3;\r\n\t\tlet deathIndex = 4;\r\n\t\tlet recIndex = 5;\r\n\t\t\r\n\t\tlet lastIndex = 1;\r\n\t\tconst formatChange = (new Date(2020,2,22)).getTime();\r\n\t\t\r\n\t\twhile (markDate.getTime() < now) {\r\n\t\t\tlet lines = '';\r\n\t\t\tconst markDateStr = markDate.toISOString();\r\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\r\n\t\t\tconsole.log(sourceDate);\r\n\t\t\t//console.log(lastIndex);\r\n\t\t\t\r\n\t\t\t//Workaround for source's formatting inconsistencies\r\n\t\t\tif (cityIndex == 0 && markDate.getTime() >= formatChange) {\r\n\t\t\t\tcityIndex = 2;\r\n\t\t\t\tcountryIndex = 3;\r\n\t\t\t\tconIndex = 7;\r\n\t\t\t\tdeathIndex = 8;\r\n\t\t\t\trecIndex = 9;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tconst cancelToken = this.cancelSource.token;\r\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', {\r\n\t\t\t\t\theaders: { 'Content-Type': 'text/csv' },\r\n\t\t\t\t\tcancelToken: cancelToken,\r\n\t\t\t\t});\r\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmarkDate.setDate(markDate.getDate()+1);\r\n\t\t\t\r\n\t\t\tif (lines == '')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tconsole.log(lastIndex);\r\n\t\t\tconst date = sourceDate.replace('-','\\/').replace('-','\\/');\r\n\t\t\tlet values = undefined;\r\n\t\t\tif (lines[lastIndex])\r\n\t\t\t\tvalues = lines[lastIndex].split(',');\r\n\t\t\telse lastIndex = 1;\r\n\t\t\t\r\n\t\t\tif (values == undefined || (city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex]))\r\n\t\t\t{\r\n\t\t\t\tfor (let i=lastIndex+1; i<lines.length; i++) {\r\n\t\t\t\t\tvalues = lines[i].split(',');\r\n\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\r\n\t\t\t\t\t\tvalues = undefined;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (values == undefined) {\r\n\t\t\t\t\tfor (let i=1; i<lastIndex; i++) {\r\n\t\t\t\t\t\tvalues = lines[i].split(',');\r\n\t\t\t\t\t\tif ((city != '' && city != values[cityIndex]) || (country != '' && country != values[countryIndex])) {\r\n\t\t\t\t\t\t\tvalues = undefined;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (values != undefined) {\r\n\t\t\t\tconst confirmed = parseInt(values[conIndex]);\r\n\t\t\t\tconst hospitalized = parseInt(values[10]);\r\n\t\t\t\tconst deaths = parseInt(values[deathIndex]);\r\n\t\t\t\tconst recovered = parseInt(values[recIndex]);\r\n\t\t\t\t\r\n\t\t\t\tdata[dataN] = {\r\n\t\t\t\t\tDate: date,\r\n\t\t\t\t\tConfirmed: confirmed,\r\n\t\t\t\t\tHospitalized: hospitalized,\r\n\t\t\t\t\tDeaths: deaths,\r\n\t\t\t\t\tRecovered: recovered,\r\n\t\t\t\t\tNewConfirmed: confirmed - prevConfirmed,\r\n\t\t\t\t\tNewHospitalized: hospitalized - prevHospitalized,\r\n\t\t\t\t\tNewDeaths: deaths - prevDeaths,\r\n\t\t\t\t\tNewRecovered: recovered - prevRecovered,\r\n\t\t\t\t}\r\n\t\t\t\tprevConfirmed = confirmed;\r\n\t\t\t\tprevHospitalized = hospitalized;\r\n\t\t\t\tprevDeaths = deaths;\r\n\t\t\t\tprevRecovered = recovered;\r\n\t\t\t\tdataN++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(data);\r\n\t\t\r\n\t\tthis.processData(sourceRef, data);\r\n\t}\r\n\t\r\n\t//When foreign country is selected\r\n\t//No streak data or timeline functionality\r\n\t//Only data from two days/files is processed\r\n\tasync callAPIGlobal(city, country, markDate, process = true) {\r\n\t\t\r\n\t\tif (city == 'Overall') {\r\n\t\t\tcity = '';\r\n\t\t}\r\n\t\t\r\n\t\tlet data = [{}];\r\n\t\tdata[0] = {\r\n\t\t\tDate: '',\r\n\t\t\tConfirmed: 0,\r\n\t\t\tHospitalized: 0,\r\n\t\t\tDeaths: 0,\r\n\t\t\tRecovered: 0,\r\n\t\t\tRecoveryRate: 0,\r\n\t\t\tMortalityRate: 0,\r\n\t\t\tNewConfirmed: 0,\r\n\t\t\tNewHospitalized: 0,\r\n\t\t\tNewDeaths: 0,\r\n\t\t\tNewRecovered: 0,\r\n\t\t};\r\n\t\tconst thisData = data[0];\r\n\t\t\r\n\t\tconst sourceRef = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports';\r\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\n\t\t\r\n\t\tlet lines = '';\r\n\t\twhile (lines == '') {\r\n\t\t\tconst markDateStr = markDate.toISOString();\r\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\r\n\t\t\tmarkDate.setDate(markDate.getDate()-1);\r\n\t\t\tconsole.log(sourceDate);\r\n\t\t\r\n\t\t\ttry {\r\n\t\t\t\tconst cancelToken = this.cancelSource.token;\r\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', {\r\n\t\t\t\t\theaders: { 'Content-Type': 'text/csv' },\r\n\t\t\t\t\tcancelToken: cancelToken,\r\n\t\t\t\t});\r\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\r\n\t\t\t\tthisData.Date = sourceDate.replace('-','\\/').replace('-','\\/');\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i=1; i<lines.length; i++) {\r\n\t\t\tif ((lines[i].match(/\"/g) || []).length > 2)\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tconst values = lines[i].split(',');\r\n\t\t\tif ((city != '' && city != values[2]) || (country != '' && country != values[3]))\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tconst confirmed = thisData[\"Confirmed\"] + parseInt(values[7]);\r\n\t\t\tconst deaths = thisData[\"Deaths\"] + parseInt(values[8]);\r\n\t\t\tconst recovered = thisData[\"Recovered\"] + parseInt(values[9]);\r\n\t\t\tthisData.Confirmed = confirmed;\r\n\t\t\tthisData.Hospitalized = thisData[\"Hospitalized\"] + parseInt(values[10]);\r\n\t\t\tthisData.Deaths = deaths;\r\n\t\t\tthisData.Recovered = recovered;\r\n\t\t\tthisData.RecoveryRate = (recovered/confirmed) * 100;\r\n\t\t\tthisData.MortalityRate = (deaths/confirmed) * 100;\r\n\t\t}\r\n\t\t\r\n\t\tif (process) {\r\n\t\t\tconst prevData = await this.callAPIGlobal(city, country, markDate, false);\r\n\t\t\tthisData.NewConfirmed = thisData.Confirmed - prevData.Confirmed;\r\n\t\t\tthisData.NewHospitalized = thisData.Hospitalized - prevData.Hospitalized;\r\n\t\t\tthisData.NewDeaths = thisData.Deaths - prevData.Deaths;\r\n\t\t\tthisData.NewRecovered = thisData.Recovered - prevData.Recovered;\r\n\t\t\t\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.processData(sourceRef, data, false);\r\n\t\t\t\r\n\t\t}\r\n\t\treturn thisData;\r\n\t}\r\n\t\r\n\t//For when Thailand is selected\r\n\t//Provides retrospective data and graph functionalities\r\n\t//Local scoped source, data from over 200 days are stored within only one file\r\n\tasync callAPIThailand() {\r\n\t\t\r\n\t\tconst source = 'https://covid19.th-stat.com/api/open/timeline';\r\n\t\tlet data = [];\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst cancelToken = this.cancelSource.token;\r\n\t\t\tconst response = await axios.get(source, {\r\n\t\t\t\tcancelToken: cancelToken,\r\n\t\t\t});\r\n\t\t\tconsole.log(response);\r\n\t\t\tdata = response.data['Data'];\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t\r\n\t\tif (data.length > 0)\r\n\t\t\tthis.processData(source, data);\r\n\t}\r\n\t\r\n\tgetLastDate(type, data) {\r\n\t\tfor (let i=data.length-1; i>=0; i--) {\r\n\t\t\tif (data[i][type] != 0)\r\n\t\t\t\treturn data[i]['Date'];\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetDateDiff(date) {\r\n\t\tlet now = (new Date()).getTime();\r\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\r\n\t}\r\n\t\r\n\tprocessData(source, data, hasTimeline = true) {\r\n\t\tif (data.length <= 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tconst lastData = data.slice(-1)[0];\r\n\t\tconst dataReformatted = data.slice().map(d => {\r\n\t\t\treturn (\r\n\t\t\t\tObject.assign({},d,{\r\n\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\t\t\r\n\t\tconst lastUpdated = lastData['Date'];\r\n\t\tlet lastConfirmedFormatted = 0;\r\n\t\tlet lastDeathFormatted = 0;\r\n\t\tlet noConfirmedStreak = 0;\r\n\t\tlet noDeathStreak = 0;\r\n\r\n\t\tif (hasTimeline) {\r\n\t\t\tconst lastConfirmed = this.getLastDate('NewConfirmed',data);\r\n\t\t\tconst lastDeath = this.getLastDate('NewDeaths',data);\r\n\t\t\tlastConfirmedFormatted = lastConfirmed.slice(3,6) + lastConfirmed.slice(0,3) + lastConfirmed.slice(6);\r\n\t\t\tlastDeathFormatted = lastDeath.slice(3,6) + lastDeath.slice(0,3) + lastDeath.slice(6);\r\n\t\t\tnoConfirmedStreak = this.getDateDiff(lastConfirmed);\r\n\t\t\tnoDeathStreak = this.getDateDiff(lastDeath);\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\thasTimeline: hasTimeline,\r\n\t\t\tdataTimeline: dataReformatted,\r\n\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\r\n\t\t\tdata_text: {\r\n\t\t\t\tsource: source,\r\n\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\r\n\t\t\t\tconfirmed: lastData['Confirmed'],\r\n\t\t\t\thospitalized: lastData['Hospitalized'],\r\n\t\t\t\tdeaths: lastData['Deaths'],\r\n\t\t\t\trecovered: lastData['Recovered'],\r\n\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\r\n\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\r\n\t\t\t\tnewDeaths: lastData['NewDeaths'],\r\n\t\t\t\tnewRecovered: lastData['NewRecovered'],\r\n\t\t\t},\r\n\t\t\tdata_pie: [\r\n\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\r\n\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\r\n\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\r\n\t\t\t],\r\n\t\t\tlastConfirmed: lastConfirmedFormatted,\r\n\t\t\tlastDeath: lastDeathFormatted,\r\n\t\t\tnoConfirmedStreak: noConfirmedStreak,\r\n\t\t\tnoDeathStreak: noDeathStreak,\r\n\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\r\n\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\r\n\t\t});\r\n\t}\r\n\t\r\n\tcountryCompare(category) {\r\n\t\treturn function innerSort(a,b) {\r\n\t\t\tconst valA = a[category];\r\n\t\t\tconst valB = b[category];\r\n\t\t\tif (valA > valB)\r\n\t\t\t\treturn -1;\r\n\t\t\telse if (valA < valB)\r\n\t\t\t\treturn 1;\r\n\t\t\telse return 0;\r\n\t\t};\r\n\t}\r\n\t\r\n\tglobalRankThailand(ranking) {\r\n\t\treturn ranking.findIndex(x => x.Country == \"Thailand\");\r\n\t}\r\n\t\r\n\tglobalRankTopTen(ranking) {\r\n\t\treturn ranking.slice(0,10);\r\n\t}\r\n\t\r\n\tglobalRanking(category) {\r\n\t\tconst countries = Object.values(this.state.globalData);\r\n\t\tcountries.sort(this.countryCompare(category));\r\n\t\tconsole.log(countries);\r\n\t\tthis.setState({\r\n\t\t\trankThailand: this.globalRankThailand(countries),\r\n\t\t\trankTopTen: this.globalRankTopTen(countries),\r\n\t\t});\r\n\t}\r\n\t\r\n\tglobalRankingHeading(category) {\r\n\t\tif (category == 'Confirmed')\r\n\t\t\treturn \"Confirmed Cases Count\";\r\n\t\telse if (category == 'Hospitalized')\r\n\t\t\treturn \"Active Cases Count\";\r\n\t\telse if (category == 'Deaths')\r\n\t\t\treturn \"Deceased Cases Count\";\r\n\t\telse if (category == 'Recovered')\r\n\t\t\treturn \"Recovered Cases Count\";\r\n\t\telse if (category == 'RecoveryRate')\r\n\t\t\treturn \"Recovery Rate\";\r\n\t\telse if (category == 'MortalityRate')\r\n\t\t\treturn \"Mortality Rate\";\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst cBlue = '#20A0E0';\r\n\t\tconst cOrange = '#F7B860';\r\n\t\tconst cRed = '#E04040';\r\n\t\tconst cGreen = '#80D080';\r\n\t\tconst cDRed = '#BB0A1E';\r\n\t\t\r\n\t\tconst { classes } = this.props;\r\n\t\tconst {\r\n\t\t\tselectCountry, selectCity, fastMode, \r\n\t\t\tdataTimeline, dataTimeline15, data_text, data_pie,\r\n\t\t\tselectCategory\r\n\t\t} = this.state;\r\n\t\t\r\n\t\tconst selectedCountryData = this.state.globalData[selectCountry];\r\n\t\tlet cityChoice = [\"Overall\"];\r\n\t\tif (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\r\n\t\t\tcityChoice = selectedCountryData.Cities.slice(0);\r\n\t\t\tcityChoice.splice(0,0,\"Overall\");\r\n\t\t}\r\n\t\t\r\n\t\tconst categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate')) {\r\n\t\t\trankSuffix = \"%\";\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<AppBar style={{background: cDRed}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t\t<b>Simple COVID-19 Dashboard</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<div className={classes.appBarSpacer}/>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\r\n\t\t\t\t\t\t{/*-------------------------------- Source Info --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\r\n\t\t\t\t\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={data_text.source}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\r\n\t\t\t\t\t\t\t\t\t\tdata_text.source\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</MuiThemeProvider>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Fetch Control --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\t\twidth : '128px',\r\n\t\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\t\tcolor: (fastMode ? cDRed : 'blue')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => this.setState({ fastMode: !fastMode })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<b>{fastMode ? \"FAST MODE\" : \"FULL MODE\"}</b>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={this.state.countries} value={selectCountry}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCountry: select.value, selectCity: 'Overall' })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={cityChoice} value={selectCity}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCity:select.value })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Numbers --------------------------------*/}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }}><b>Confirmed</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cBlue }} variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }} variant=\"h5\">+ {data_text.newConfirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }}><b>Hospitalized</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cOrange }} variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }} variant=\"h5\">\r\n\t\t\t\t\t\t\t\t\t{(data_text.newHospitalized >= 0) ? '+' : '-'} {Math.abs(data_text.newHospitalized).toLocaleString()}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }}><b>Deaths</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cRed }} variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }} variant=\"h5\">+ {data_text.newDeaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }}><b>Recovered</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cGreen }} variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }} variant=\"h5\">+ {data_text.newRecovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Streaks --------------------------------*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Rates --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={ this.state.hasTimeline ? 6 : 12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: 'green' }}>\r\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t{/*Button to toggle graph display*/}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\twidth : '144px',\r\n\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\tcolor: (this.state.showGraph ? 'grey' : 'steelblue')\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tShow/Hide Graphs\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={cBlue}/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={cRed}/>\r\n\t\t\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Pie, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cOrange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cRed} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cGreen} />\r\n\t\t\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Bar, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\r\n\t\t\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={cBlue} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={cOrange} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={cRed} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={cGreen} dot={false} />\r\n\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ height: '32px', width : '144px', float: 'right', color: 'grey' }}\r\n\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHide Graphs\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t\t\t{/*-------------------------------- Rankings --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cRed }}>\r\n\t\t\t\t\t\t\t\t<b>Global Ranking based on:</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t{this.globalRankingHeading(selectCategory)}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Dropdown options={categoryChoice} value={'Hospitalized'}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCategory: select.value})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t\t{ (this.state.rankThailand >= 0) && (\r\n\t\t\t\t\t\t<Grid container spacing={2} direction='column'>\r\n\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t<b>Rank {this.state.rankThailand}. Thailand - {this.state.globalData['Thailand'][selectCategory]}{rankSuffix}</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\t<b>Top 10 Countries</b><br/>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t{this.state.rankTopTen.map((c, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<><b>{i+1}.</b> {c.Country} - {c[selectCategory]}{rankSuffix}<br/></>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t{/*-------------------------------- Footer --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t\t<Paper className={classes.paperFoot}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t<b>Simple Covid-19 Dashboard for Tencent Thailand's Internship Project</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\r\n            </Typography>\r\n          </Paper>\r\n        </footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n"]},"metadata":{},"sourceType":"module"}