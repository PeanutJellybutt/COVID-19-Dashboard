{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; //MUI\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css'; //AXIOS\n\nimport axios from 'axios'; //RECHARTS\n\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts'; //JVECTORMAP\n\nimport '../public/jquery-jvectormap.css';\nimport dynamic from 'next/dynamic';\nconst VectorMap = dynamic(() => import(\"react-jvectormap\").then(m => m.VectorMap), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-jvectormap\")],\n    modules: [\"react-jvectormap\"]\n  }\n}); //FETCH DATA\n\nimport { fetchData, callAPIGlobalAll, callAPIGlobalTimeline, callAPIGlobal, callAPIThailand, clearAxiosCalls, getLastDate, getDateDiff, processData } from '../components/dataFetch.js'; //RANKING\n\nimport { countryCompare, globalRankSelect, globalRankTopTen, globalRanking, globalRankingHeading } from '../components/dataRank.js';\n\nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#FFFEFE\"\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2)\n  },\n  root: {\n    backgroundColor: \"#000000\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\nconst cBlue = '#20A0E0';\nconst cOrange = '#F7B860';\nconst cRed = '#E04040';\nconst cGreen = '#80D080';\nconst cDRed = '#BB0A1E';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasData: false,\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      fastMode: true,\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false,\n      selectCategory: 'Hospitalized',\n      rankSelect: -1,\n      rankTopTen: [],\n      mapGlobalData: null\n    };\n    this.referenceDate = new Date();\n    this.referenceDate.setDate(this.referenceDate.getDate() - 1);\n    const CancelToken = axios.CancelToken;\n    this.cancelSource = CancelToken.source();\n\n    const {\n      getCode,\n      getName,\n      getData\n    } = require(\"country-list\");\n\n    this.getCountryCode = getCode;\n    this.getCountryName = getName;\n    this.getCountryData = getData; //Binding dataFetch functions\n\n    this.fetchData = fetchData.bind(this);\n    this.callAPIGlobalAll = callAPIGlobalAll.bind(this);\n    this.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\n    this.callAPIGlobal = callAPIGlobal.bind(this);\n    this.callAPIThailand = callAPIThailand.bind(this);\n    this.clearAxiosCalls = clearAxiosCalls.bind(this);\n    this.getLastDate = getLastDate.bind(this);\n    this.getDateDiff = getDateDiff.bind(this);\n    this.processData = processData.bind(this); //Binding dataRank functions\n\n    this.countryCompare = countryCompare.bind(this);\n    this.globalRankSelect = globalRankSelect.bind(this);\n    this.globalRankTopTen = globalRankTopTen.bind(this);\n    this.globalRanking = globalRanking.bind(this);\n    this.globalRankingHeading = globalRankingHeading.bind(this);\n  }\n\n  componentDidMount() {\n    this.callAPIGlobalAll(this.referenceDate);\n    this.fetchData(this.referenceDate);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectCountry != this.state.selectCountry || prevState.selectCity != this.state.selectCity || prevState.fastMode != this.state.fastMode) {\n      this.clearAxiosCalls();\n      this.fetchData(this.referenceDate);\n    }\n\n    if (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry) this.globalRanking(this.state.selectCategory);\n  }\n\n  countryEncodeAssist(country, countriesName) {\n    if (!countriesName.includes(country)) {\n      if (country == \"Bolivia\") country = \"Bolivia, Plurinational State of\";else if (country == \"Brunei\") country = \"Brunei Darussalam\";else if (country == \"Burma\") country = \"Myanmar\";else if (country == \"Congo (Brazzaville)\") country = \"Congo\";else if (country == \"Congo (Kinshasa)\") country = \"Congo, Democratic Republic of the\";else if (country == \"Cote d'Ivoire\") country = \"Côte d'Ivoire\";else if (country == \"Iran\") country = \"Iran, Islamic Republic of\";else if (country == \"Kosovo\") country = \"Serbia\";else if (country == \"Laos\") country = \"Lao People's Democratic Republic\";else if (country == \"Moldova\") country = \"Moldova, Republic of\";else if (country == \"Russia\") country = \"Russian Federation\";else if (country == \"Syria\") country = \"Syrian Arab Republic\";else if (country == \"Taiwan*\") country = \"Taiwan, Province of China\";else if (country == \"Tanzania\") country = \"Tanzania, United Republic of\";else if (country == \"US\") country = \"United States of America\";else if (country == \"United Kingdom\") country = \"United Kingdom of Great Britain and Northern Ireland\";else if (country == \"Venezuela\") country = \"Venezuela, Bolivarian Republic of\";else if (country == \"Vietnam\") country = \"Viet Nam\";else if (country == \"West Bank and Gaza\") country = \"Palestine, State of\";else return undefined;\n    }\n\n    const {\n      getCode\n    } = require('country-list');\n\n    return getCode(country);\n  }\n\n  countryDecodeAssist(code) {\n    const {\n      getName,\n      getNames\n    } = require('country-list');\n\n    const countriesName = getNames();\n    let country = getName(code);\n    if (country == \"Bolivia, Plurinational State of\") country = \"Bolivia\";else if (country == \"Brunei Darussalam\") country = \"Brunei\";else if (country == \"Myanmar\") country = \"Burma\";else if (country == \"Congo\") country = \"Congo (Brazzaville)\";else if (country == \"Congo, Democratic Republic of the\") country = \"Congo (Kinshasa)\";else if (country == \"Côte d'Ivoire\") country = \"Cote d'Ivoire\";else if (country == \"Iran, Islamic Republic of\") country = \"Iran\";else if (country == \"Serbia\") country = \"Kosovo\";else if (country == \"Lao People's Democratic Republic\") country = \"Laos\";else if (country == \"Moldova, Republic of\") country = \"Moldova\";else if (country == \"Russian Federation\") country = \"Russia\";else if (country == \"Syrian Arab Republic\") country = \"Syria\";else if (country == \"Taiwan\") country = \"Taiwan*\";else if (country == \"Tanzania, United Republic of\") country = \"Tanzania\";else if (country == \"United States of America\") country = \"US\";else if (country == \"United Kingdom of Great Britain and Northern Ireland\") country = \"United Kingdom\";else if (country == \"Venezuela, Bolivarian Republic of\") country = \"Venezuela\";else if (country == \"Viet Nam\") country = \"Vietnam\";else if (country == \"Palestine, State of\") country = \"West Bank and Gaza\";\n    return country;\n  }\n\n  processMapGlobalData(countries, globalData) {\n    const {\n      getCode,\n      getNames\n    } = require('country-list');\n\n    const countriesName = getNames();\n    const mapGlobalData = {\n      Confirmed: {},\n      Hospitalized: {},\n      Deaths: {},\n      Recovered: {},\n      RecoveryRate: {},\n      MortalityRate: {}\n    };\n\n    for (let i = 0; i < countries.length; i++) {\n      const country = countries[i];\n      const data = globalData[country];\n      const code = this.countryEncodeAssist(country, countriesName);\n      if (code == undefined) continue;\n      mapGlobalData['Confirmed'][code] = data['Confirmed'];\n      mapGlobalData['Hospitalized'][code] = data['Hospitalized'];\n      mapGlobalData['Deaths'][code] = data['Deaths'];\n      mapGlobalData['Recovered'][code] = data['Recovered'];\n      mapGlobalData['RecoveryRate'][code] = parseFloat(data['RecoveryRate']);\n      mapGlobalData['MortalityRate'][code] = parseFloat(data['MortalityRate']);\n    } //console.log(mapGlobalData);\n\n\n    return mapGlobalData;\n  }\n\n  renderMap(category) {\n    const handleClick = (e, code) => {\n      const country = this.countryDecodeAssist(code);\n      if (this.state.countries.includes(country)) this.setState({\n        selectCountry: country,\n        selectCity: 'Overall'\n      });\n    };\n\n    const data = this.state.mapGlobalData;\n    const mapData = data[category]; //console.log(mapData);\n\n    let minColor = \"#FFFFFF\";\n    let maxColor = cRed;\n    if (category == \"Recovered\" || category == \"RecoveryRate\") maxColor = cBlue;\n    let normFunction = \"polynomial\";\n    if (category == \"RecoveryRate\" || category == \"MortalityRate\") normFunction = \"linear\";\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 4\n      }\n    }, __jsx(VectorMap, {\n      map: \"world_mill\",\n      backgroundColor: \"#000000\" //\"transparent\" //change it to ocean blue: #0077be\n      ,\n      zoomOnScroll: false,\n      containerStyle: {\n        width: \"100%\",\n        height: \"520px\"\n      },\n      onRegionClick: handleClick,\n      containerClassName: \"map\",\n      regionStyle: {\n        initial: {\n          fill: \"#A0A0A0\",\n          \"fill-opacity\": 1,\n          stroke: \"white\",\n          \"stroke-width\": 0.2,\n          \"stroke-opacity\": 1\n        },\n        hover: {\n          \"fill-opacity\": 0.75,\n          cursor: \"pointer\"\n        },\n        selected: {},\n        selectedHover: {}\n      },\n      regionsSelectable: false,\n      series: {\n        regions: [{\n          values: mapData,\n          //this is your data\n          scale: [minColor, maxColor],\n          //your color game's here\n          normalizeFunction: normFunction\n        }]\n      },\n      onRegionTipShow: (event, label, code) => {\n        label.html('<b><i>' + label.html() + '</i></b></br>' + 'Confirmed: ' + data['Confirmed'][code] + '</br>' + 'Hospitalized: ' + data['Hospitalized'][code] + '</br>' + 'Deaths: ' + data['Deaths'][code] + '</br>' + 'Recovered: ' + data['Recovered'][code] + '</br>' + 'Recovery rate: ' + data['RecoveryRate'][code] + '%' + '</br>' + 'Mortality rate: ' + data['MortalityRate'][code] + '%');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      hasData,\n      selectCountry,\n      selectCity,\n      fastMode,\n      dataTimeline,\n      dataTimeline15,\n      data_text,\n      data_pie,\n      selectCategory\n    } = this.state;\n    if (!hasData) return \"ERROR: Cannot fetch data\";\n    const selectedCountryData = this.state.globalData[selectCountry];\n    let cityChoice = [\"Overall\"];\n\n    if (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\n      cityChoice = selectedCountryData.Cities.slice(0);\n      cityChoice.splice(0, 0, \"Overall\");\n    }\n\n    const categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\n    let rankSuffix = \" cases\";\n\n    if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') {\n      rankSuffix = \"%\";\n    }\n\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 4\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 5\n      }\n    }), __jsx(AppBar, {\n      style: {\n        background: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 5\n      }\n    }, __jsx(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 8\n      }\n    }, \"COVID-19 Dashboard\")))), __jsx(\"div\", {\n      className: classes.appBarSpacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 5\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 7\n      }\n    }, __jsx(MuiThemeProvider, {\n      theme: darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      align: \"left\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 10\n      }\n    }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n      variant: \"subtitle2\",\n      align: \"left\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      href: data_text.source,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 10\n      }\n    }, \" \", data_text.source)))), __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 8\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      style: {\n        height: '32px',\n        width: '128px',\n        float: 'right',\n        color: fastMode ? cDRed : 'blue'\n      },\n      onClick: () => this.setState({\n        fastMode: !fastMode\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 8\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }\n    }, fastMode ? \"FAST MODE\" : \"FULL MODE\"))), __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 7\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 8\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }), __jsx(Dropdown, {\n      options: this.state.countries,\n      value: selectCountry,\n      onChange: select => this.setState({\n        selectCountry: select.value,\n        selectCity: 'Overall'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 8\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 7\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 8\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }), __jsx(Dropdown, {\n      options: cityChoice,\n      value: selectCity,\n      onChange: select => this.setState({\n        selectCity: select.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 8\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      style: {\n        color: 'steelblue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 52\n      }\n    }, \"Confirmed\")), __jsx(Typography, {\n      style: {\n        color: cBlue\n      },\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }\n    }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n      style: {\n        color: 'steelblue'\n      },\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }\n    }, \"+ \", data_text.newConfirmed.toLocaleString()))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      style: {\n        color: 'goldenrod'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 52\n      }\n    }, \"Hospitalized\")), __jsx(Typography, {\n      style: {\n        color: cOrange\n      },\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }\n    }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n      style: {\n        color: 'goldenrod'\n      },\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }\n    }, data_text.newHospitalized >= 0 ? '+' : '-', \" \", Math.abs(data_text.newHospitalized).toLocaleString()))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      style: {\n        color: 'fireBrick'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 52\n      }\n    }, \"Deaths\")), __jsx(Typography, {\n      style: {\n        color: cRed\n      },\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }\n    }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n      style: {\n        color: 'fireBrick'\n      },\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }\n    }, \"+ \", data_text.newDeaths.toLocaleString()))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 48\n      }\n    }, \"Recovered\")), __jsx(Typography, {\n      style: {\n        color: cGreen\n      },\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }\n    }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n      style: {\n        color: 'green'\n      },\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }\n    }, \"+ \", data_text.newRecovered.toLocaleString()))), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 8\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 10\n      }\n    }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 10\n      }\n    }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\")))), __jsx(Grid, {\n      item: true,\n      xs: this.state.hasTimeline ? 6 : 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }\n    }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n      variant: \"h6\",\n      style: {\n        color: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }\n    }, \"Mortality Rate: \", this.state.rateDeath)))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 6\n      }\n    }), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(\"button\", {\n      style: {\n        height: '32px',\n        width: '144px',\n        float: 'right',\n        color: this.state.showGraph ? 'grey' : 'steelblue'\n      },\n      onClick: () => this.setState({\n        showGraph: !this.state.showGraph\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 7\n      }\n    }, \"Show/Hide Graphs\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 7\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 6\n      }\n    }), this.state.showGraph && //Whether or not to display graphs\n    __jsx(React.Fragment, null, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }\n    }, __jsx(BarChart, {\n      width: 500,\n      height: 300,\n      data: dataTimeline15,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 10\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewConfirmed\",\n      fill: cBlue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }\n    }), __jsx(Bar, {\n      dataKey: \"NewDeaths\",\n      fill: cRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }\n    }, __jsx(PieChart, {\n      width: 400,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 10\n      }\n    }, __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }\n    }), __jsx(Pie, {\n      dataKey: \"value\",\n      isAnimationActive: false,\n      data: data_pie,\n      outerRadius: 100,\n      label: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }\n    }, __jsx(Cell, {\n      fill: cOrange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 12\n      }\n    }), __jsx(Cell, {\n      fill: cRed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 12\n      }\n    }), __jsx(Cell, {\n      fill: cGreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 12\n      }\n    })), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 7\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 8\n      }\n    }, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }\n    }, __jsx(LineChart, {\n      data: dataTimeline,\n      margin: {\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 10\n      }\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }\n    }), __jsx(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Confirmed\",\n      stroke: cBlue,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Hospitalized\",\n      stroke: cOrange,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Deaths\",\n      stroke: cRed,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }\n    }), __jsx(Line, {\n      type: \"monotone\",\n      strokeWidth: 2,\n      dataKey: \"Recovered\",\n      stroke: cGreen,\n      dot: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }\n    })))))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 6\n      }\n    }), __jsx(\"button\", {\n      style: {\n        height: '32px',\n        width: '144px',\n        float: 'right',\n        color: 'grey'\n      },\n      onClick: () => this.setState({\n        showGraph: !this.state.showGraph\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 6\n      }\n    }, \"Hide Graphs\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 6\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 8\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        color: cRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 10\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }\n    }, \"Global Ranking based on:\")), __jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        color: cDRed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 10\n      }\n    }, this.globalRankingHeading(selectCategory))), __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 10\n      }\n    }), __jsx(Dropdown, {\n      options: categoryChoice,\n      value: 'Hospitalized',\n      onChange: select => this.setState({\n        selectCategory: select.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 10\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 6\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 7\n      }\n    }, this.state.rankSelect >= 0 && __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 10\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 12\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 13\n      }\n    }, \"Rank \", this.state.rankSelect, \". \", selectCountry, \" - \", this.state.globalData[selectCountry][selectCategory], rankSuffix), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 13\n      }\n    }), \"out of \", this.state.countries.length, \" countries\"))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 10\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 12\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }\n    }, \"Top 10 Countries\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 36\n      }\n    })), __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 12\n      }\n    }, this.state.rankTopTen.map((c, i) => __jsx(React.Fragment, null, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 15\n      }\n    }, i + 1, \".\"), \" \", c.Country, \" - \", c[selectCategory], rankSuffix, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 74\n      }\n    })))))))), __jsx(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 7\n      }\n    }, this.state.mapGlobalData != null && __jsx(React.Fragment, null, this.renderMap(selectCategory))))), __jsx(\"footer\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 5\n      }\n    }, __jsx(Paper, {\n      className: classes.paper,\n      style: {\n        background: \"#8F8080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 6\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 8\n      }\n    }, \"COVID-19 Dashboard for Tencent Thailand's Internship Project\")), __jsx(Typography, {\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 7\n      }\n    }, \"By Thanjira S. and Woottipat H.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","Dropdown","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","dynamic","VectorMap","then","m","ssr","fetchData","callAPIGlobalAll","callAPIGlobalTimeline","callAPIGlobal","callAPIThailand","clearAxiosCalls","getLastDate","getDateDiff","processData","countryCompare","globalRankSelect","globalRankTopTen","globalRanking","globalRankingHeading","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","footer","palette","background","marginTop","root","formControl","margin","minWidth","selectEmpty","darkTheme","type","cBlue","cOrange","cRed","cGreen","cDRed","App","Component","constructor","props","state","hasData","selectCountry","selectCity","countries","globalData","fastMode","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","selectCategory","rankSelect","rankTopTen","mapGlobalData","referenceDate","Date","setDate","getDate","CancelToken","cancelSource","source","getCode","getName","getData","require","getCountryCode","getCountryName","getCountryData","bind","componentDidMount","componentDidUpdate","prevProps","prevState","countryEncodeAssist","country","countriesName","includes","undefined","countryDecodeAssist","code","getNames","processMapGlobalData","Confirmed","Hospitalized","Deaths","Recovered","RecoveryRate","MortalityRate","i","length","data","parseFloat","renderMap","category","handleClick","e","setState","mapData","minColor","maxColor","normFunction","width","height","initial","fill","stroke","hover","cursor","selected","selectedHover","regions","values","scale","normalizeFunction","event","label","html","render","classes","selectedCountryData","cityChoice","CitiesN","Cities","slice","splice","categoryChoice","rankSuffix","float","color","select","value","toLocaleString","Math","abs","top","right","left","bottom","map","c","Country"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\n\r\n//MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n//AXIOS\r\nimport axios from 'axios';\r\n\r\n//RECHARTS\r\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \r\n  Pie, Cell, } from 'recharts';\r\n\t\r\n//JVECTORMAP\r\nimport '../public/jquery-jvectormap.css'\r\nimport dynamic from 'next/dynamic'\r\nconst VectorMap = dynamic(\r\n  () => import(\"react-jvectormap\").then((m) => m.VectorMap),\r\n  { ssr: false, }\r\n);\r\n\r\n//FETCH DATA\r\nimport {fetchData, callAPIGlobalAll, callAPIGlobalTimeline,\r\n\tcallAPIGlobal, callAPIThailand, clearAxiosCalls,\r\n\tgetLastDate, getDateDiff, processData} from '../components/dataFetch.js';\r\n\t\r\n//RANKING\r\nimport {countryCompare, globalRankSelect, globalRankTopTen,\r\n\tglobalRanking, globalRankingHeading} from '../components/dataRank.js';\r\n  \r\nconst styles = theme => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\t\tbackgroundColor: \"#FFFEFE\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing(2),\r\n  },\r\n\troot: {\r\n    backgroundColor: \"#000000\",\r\n  },\r\n\tformControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nconst cBlue = '#20A0E0';\r\nconst cOrange = '#F7B860';\r\nconst cRed = '#E04040';\r\nconst cGreen = '#80D080';\r\nconst cDRed = '#BB0A1E';\r\n\r\nclass App extends React.Component {\r\n\t\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasData: false,\r\n\t\t\tselectCountry: 'Thailand',\r\n\t\t\tselectCity: 'Overall',\r\n\t\t\tcountries: [],\r\n\t\t\tglobalData: [],\r\n\t\t\tfastMode: true,\r\n\t\t\thasTimeline: true,\r\n\t\t\tdataTimeline: [],\r\n\t\t\tdataTimeline15: [],\r\n\t\t\tdata_text: {\r\n\t\t\t\tupdatedDate: '',\r\n\t\t\t\tconfirmed: '',\r\n\t\t\t\thospitalized: '',\r\n\t\t\t\tdeaths: '',\r\n\t\t\t\trecovered: '',\r\n\t\t\t\tnewConfirmed: '',\r\n\t\t\t\tnewHospitalized: '',\r\n\t\t\t\tnewDeaths: '',\r\n\t\t\t\tnewRecovered: '',\r\n\t\t\t},\r\n\t\t\tdata_pie: [{}],\r\n\t\t\tlastConfirmed: 0,\r\n\t\t\tlastDeath: 0,\r\n\t\t\tnoConfirmedStreak: 0,\r\n\t\t\tnoDeathStreak: 0,\r\n\t\t\trateRecovery: 0,\r\n\t\t\trateDeath: 0,\r\n\t\t\tshowGraph: false,\r\n\t\t\tselectCategory: 'Hospitalized',\r\n\t\t\trankSelect: -1,\r\n\t\t\trankTopTen: [],\r\n\t\t\tmapGlobalData: null,\r\n\t\t};\r\n\t\t\r\n\t\tthis.referenceDate = new Date();\r\n\t\tthis.referenceDate.setDate(this.referenceDate.getDate()-1);\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n\t\t\r\n\t\tconst { getCode, getName, getData } = require(\"country-list\");\r\n\t\tthis.getCountryCode = getCode;\r\n\t\tthis.getCountryName = getName;\r\n\t\tthis.getCountryData = getData;\r\n\t\t\r\n\t\t//Binding dataFetch functions\r\n\t\tthis.fetchData = fetchData.bind(this);\r\n\t\tthis.callAPIGlobalAll = callAPIGlobalAll.bind(this);\r\n\t\tthis.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\r\n\t\tthis.callAPIGlobal = callAPIGlobal.bind(this);\r\n\t\tthis.callAPIThailand = callAPIThailand.bind(this);\r\n\t\tthis.clearAxiosCalls = clearAxiosCalls.bind(this);\r\n\t\tthis.getLastDate = getLastDate.bind(this);\r\n\t\tthis.getDateDiff = getDateDiff.bind(this);\r\n\t\tthis.processData = processData.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryCompare = countryCompare.bind(this);\r\n\t\tthis.globalRankSelect = globalRankSelect.bind(this);\r\n\t\tthis.globalRankTopTen = globalRankTopTen.bind(this);\r\n\t\tthis.globalRanking = globalRanking.bind(this);\r\n\t\tthis.globalRankingHeading = globalRankingHeading.bind(this);\r\n\t\t\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t\tthis.callAPIGlobalAll(this.referenceDate);\r\n\t\tthis.fetchData(this.referenceDate);\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.selectCountry != this.state.selectCountry) ||\r\n     \t\t(prevState.selectCity != this.state.selectCity) ||\r\n\t\t\t\t(prevState.fastMode != this.state.fastMode))\r\n\t\t{\r\n\t\t\tthis.clearAxiosCalls();\r\n\t\t\tthis.fetchData(this.referenceDate);\r\n\t\t}\r\n\t\t\r\n\t\tif (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry)\r\n\t\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\r\n\tcountryEncodeAssist(country, countriesName) {\r\n\t\tif (!countriesName.includes(country)) {\r\n\t\t\tif (country == \"Bolivia\")\r\n\t\t\t\tcountry = \"Bolivia, Plurinational State of\";\r\n\t\t\telse if (country == \"Brunei\")\r\n\t\t\t\tcountry = \"Brunei Darussalam\";\r\n\t\t\telse if (country == \"Burma\")\r\n\t\t\t\tcountry = \"Myanmar\";\r\n\t\t\telse if (country == \"Congo (Brazzaville)\")\r\n\t\t\t\tcountry = \"Congo\";\r\n\t\t\telse if (country == \"Congo (Kinshasa)\")\r\n\t\t\t\tcountry = \"Congo, Democratic Republic of the\";\r\n\t\t\telse if (country == \"Cote d'Ivoire\")\r\n\t\t\t\tcountry = \"Côte d'Ivoire\";\r\n\t\t\telse if (country == \"Iran\")\r\n\t\t\t\tcountry = \"Iran, Islamic Republic of\";\r\n\t\t\telse if (country == \"Kosovo\")\r\n\t\t\t\tcountry = \"Serbia\";\r\n\t\t\telse if (country == \"Laos\")\r\n\t\t\t\tcountry = \"Lao People's Democratic Republic\";\r\n\t\t\telse if (country == \"Moldova\")\r\n\t\t\t\tcountry = \"Moldova, Republic of\";\r\n\t\t\telse if (country == \"Russia\")\r\n\t\t\t\tcountry = \"Russian Federation\";\r\n\t\t\telse if (country == \"Syria\")\r\n\t\t\t\tcountry = \"Syrian Arab Republic\";\r\n\t\t\telse if (country == \"Taiwan*\")\r\n\t\t\t\tcountry = \"Taiwan, Province of China\";\r\n\t\t\telse if (country == \"Tanzania\")\r\n\t\t\t\tcountry = \"Tanzania, United Republic of\";\r\n\t\t\telse if (country == \"US\")\r\n\t\t\t\tcountry = \"United States of America\";\r\n\t\t\telse if (country == \"United Kingdom\")\r\n\t\t\t\tcountry = \"United Kingdom of Great Britain and Northern Ireland\";\r\n\t\t\telse if (country == \"Venezuela\")\r\n\t\t\t\tcountry = \"Venezuela, Bolivarian Republic of\";\r\n\t\t\telse if (country == \"Vietnam\")\r\n\t\t\t\tcountry = \"Viet Nam\";\r\n\t\t\telse if (country == \"West Bank and Gaza\")\r\n\t\t\t\tcountry = \"Palestine, State of\";\r\n\t\t\telse return undefined;\r\n\t\t}\r\n\t\t\r\n\t\tconst { getCode } = require('country-list');\r\n\t\treturn getCode(country);\r\n\t}\r\n\t\r\n\tcountryDecodeAssist(code) {\r\n\t\tconst { getName, getNames } = require('country-list');\r\n\t\tconst countriesName = getNames();\r\n\t\tlet country = getName(code);\r\n\t\t\r\n\t\tif (country == \"Bolivia, Plurinational State of\")\r\n\t\t\tcountry = \"Bolivia\";\r\n\t\telse if (country == \"Brunei Darussalam\")\r\n\t\t\tcountry = \"Brunei\";\r\n\t\telse if (country == \"Myanmar\")\r\n\t\t\tcountry = \"Burma\";\r\n\t\telse if (country == \"Congo\")\r\n\t\t\tcountry = \"Congo (Brazzaville)\";\r\n\t\telse if (country == \"Congo, Democratic Republic of the\")\r\n\t\t\tcountry = \"Congo (Kinshasa)\";\r\n\t\telse if (country == \"Côte d'Ivoire\")\r\n\t\t\tcountry = \"Cote d'Ivoire\";\r\n\t\telse if (country == \"Iran, Islamic Republic of\")\r\n\t\t\tcountry = \"Iran\";\r\n\t\telse if (country == \"Serbia\")\r\n\t\t\tcountry = \"Kosovo\";\r\n\t\telse if (country == \"Lao People's Democratic Republic\")\r\n\t\t\tcountry = \"Laos\";\r\n\t\telse if (country == \"Moldova, Republic of\")\r\n\t\t\tcountry = \"Moldova\";\r\n\t\telse if (country == \"Russian Federation\")\r\n\t\t\tcountry = \"Russia\";\r\n\t\telse if (country == \"Syrian Arab Republic\")\r\n\t\t\tcountry = \"Syria\";\r\n\t\telse if (country == \"Taiwan\")\r\n\t\t\tcountry = \"Taiwan*\";\r\n\t\telse if (country == \"Tanzania, United Republic of\")\r\n\t\t\tcountry = \"Tanzania\";\r\n\t\telse if (country == \"United States of America\")\r\n\t\t\tcountry = \"US\";\r\n\t\telse if (country == \"United Kingdom of Great Britain and Northern Ireland\")\r\n\t\t\tcountry = \"United Kingdom\";\r\n\t\telse if (country == \"Venezuela, Bolivarian Republic of\")\r\n\t\t\tcountry = \"Venezuela\";\r\n\t\telse if (country == \"Viet Nam\")\r\n\t\t\tcountry = \"Vietnam\";\r\n\t\telse if (country == \"Palestine, State of\")\r\n\t\t\tcountry = \"West Bank and Gaza\";\r\n\r\n\t\treturn country;\r\n\t}\r\n\t\r\n\tprocessMapGlobalData(countries, globalData) {\r\n\t\tconst { getCode, getNames } = require('country-list');\r\n\t\tconst countriesName = getNames();\r\n\t\tconst mapGlobalData = {\r\n\t\t\tConfirmed: {},\r\n\t\t\tHospitalized: {},\r\n\t\t\tDeaths: {},\r\n\t\t\tRecovered: {},\r\n\t\t\tRecoveryRate: {},\r\n\t\t\tMortalityRate: {},\r\n\t\t};\r\n\r\n\t\tfor (let i=0; i<countries.length; i++) {\r\n\t\t\tconst country = countries[i];\r\n\t\t\tconst data = globalData[country];\r\n\t\t\t\r\n\t\t\tconst code = this.countryEncodeAssist(country,countriesName);\r\n\t\t\tif (code == undefined)\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tmapGlobalData['Confirmed'][code] = data['Confirmed'];\r\n\t\t\tmapGlobalData['Hospitalized'][code] = data['Hospitalized'];\r\n\t\t\tmapGlobalData['Deaths'][code] = data['Deaths'];\r\n\t\t\tmapGlobalData['Recovered'][code] = data['Recovered'];\r\n\t\t\tmapGlobalData['RecoveryRate'][code] = parseFloat(data['RecoveryRate']);\r\n\t\t\tmapGlobalData['MortalityRate'][code] = parseFloat(data['MortalityRate']);\r\n\t\t}\r\n\t\t//console.log(mapGlobalData);\r\n\t\treturn mapGlobalData;\r\n\t}\r\n\t\r\n\trenderMap(category) {\r\n\t\tconst handleClick = (e, code) => {\r\n\t\t\tconst country = this.countryDecodeAssist(code);\r\n\t\t\tif (this.state.countries.includes(country))\r\n\t\t\t\tthis.setState({ selectCountry: country, selectCity: 'Overall'});\r\n\t\t};\r\n\t\t\r\n\t\tconst data = this.state.mapGlobalData;\r\n\t\tconst mapData = data[category];\r\n\t\t//console.log(mapData);\r\n\t\t\r\n\t\tlet minColor = \"#FFFFFF\";\r\n\t\tlet maxColor = cRed;\r\n\t\tif (category == \"Recovered\" || category == \"RecoveryRate\")\r\n\t\t\tmaxColor = cBlue;\r\n\t\t\r\n\t\tlet normFunction = \"polynomial\";\r\n\t\tif (category == \"RecoveryRate\" || category == \"MortalityRate\")\r\n\t\t\tnormFunction = \"linear\";\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<VectorMap\r\n\t\t\t\t\tmap={\"world_mill\"}\r\n\t\t\t\t\tbackgroundColor=\"#000000\"//\"transparent\" //change it to ocean blue: #0077be\r\n\t\t\t\t\tzoomOnScroll={false}\r\n\t\t\t\t\tcontainerStyle={{\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\theight: \"520px\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionClick={handleClick}\r\n\t\t\t\t\tcontainerClassName=\"map\"\r\n\t\t\t\t\tregionStyle={{\r\n\t\t\t\t\t\tinitial: {\r\n\t\t\t\t\t\t\tfill: \"#A0A0A0\",\r\n\t\t\t\t\t\t\t\"fill-opacity\": 1,\r\n\t\t\t\t\t\t\tstroke: \"white\",\r\n\t\t\t\t\t\t\t\"stroke-width\": 0.2,\r\n\t\t\t\t\t\t\t\"stroke-opacity\": 1\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\"fill-opacity\": 0.75,\r\n\t\t\t\t\t\t\tcursor: \"pointer\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tselected: {},\r\n\t\t\t\t\t\tselectedHover: {}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tregionsSelectable={false}\r\n\t\t\t\t\tseries={{\r\n\t\t\t\t\t\tregions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalues: mapData, //this is your data\r\n\t\t\t\t\t\t\t\tscale: [minColor, maxColor], //your color game's here\r\n\t\t\t\t\t\t\t\tnormalizeFunction: normFunction\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRegionTipShow={(event, label, code) => {\r\n\t\t\t\t\t\tlabel.html(\r\n\t\t\t\t\t\t\t'<b><i>'+label.html()+'</i></b></br>'+\r\n\t\t\t\t\t\t\t'Confirmed: '+data['Confirmed'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Hospitalized: '+data['Hospitalized'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Deaths: '+data['Deaths'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovered: '+data['Recovered'][code]+'</br>'+\r\n\t\t\t\t\t\t\t'Recovery rate: '+data['RecoveryRate'][code]+'%'+'</br>'+\r\n\t\t\t\t\t\t\t'Mortality rate: '+data['MortalityRate'][code]+'%'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst {\r\n\t\t\thasData, selectCountry, selectCity, fastMode, \r\n\t\t\tdataTimeline, dataTimeline15, data_text, data_pie,\r\n\t\t\tselectCategory\r\n\t\t} = this.state;\r\n\t\t\r\n\t\tif (!hasData)\r\n\t\t\treturn \"ERROR: Cannot fetch data\";\r\n\t\t\r\n\t\tconst selectedCountryData = this.state.globalData[selectCountry];\r\n\t\tlet cityChoice = [\"Overall\"];\r\n\t\tif (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\r\n\t\t\tcityChoice = selectedCountryData.Cities.slice(0);\r\n\t\t\tcityChoice.splice(0,0,\"Overall\");\r\n\t\t}\r\n\t\t\r\n\t\tconst categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate')) {\r\n\t\t\trankSuffix = \"%\";\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<AppBar style={{background: cDRed}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<div className={classes.appBarSpacer}/>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\r\n\t\t\t\t\t\t{/*-------------------------------- Source Info --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\r\n\t\t\t\t\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={data_text.source}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\r\n\t\t\t\t\t\t\t\t\t\tdata_text.source\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</MuiThemeProvider>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Fetch Control --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\t\twidth : '128px',\r\n\t\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\t\tcolor: (fastMode ? cDRed : 'blue')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => this.setState({ fastMode: !fastMode })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<b>{fastMode ? \"FAST MODE\" : \"FULL MODE\"}</b>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={this.state.countries} value={selectCountry}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCountry: select.value, selectCity: 'Overall' })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={cityChoice} value={selectCity}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCity:select.value })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Numbers --------------------------------*/}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }}><b>Confirmed</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cBlue }} variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }} variant=\"h5\">+ {data_text.newConfirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }}><b>Hospitalized</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cOrange }} variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }} variant=\"h5\">\r\n\t\t\t\t\t\t\t\t\t{(data_text.newHospitalized >= 0) ? '+' : '-'} {Math.abs(data_text.newHospitalized).toLocaleString()}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }}><b>Deaths</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cRed }} variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }} variant=\"h5\">+ {data_text.newDeaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }}><b>Recovered</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cGreen }} variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }} variant=\"h5\">+ {data_text.newRecovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Streaks --------------------------------*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Rates --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={ this.state.hasTimeline ? 6 : 12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: 'green' }}>\r\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t{/*Button to toggle graph display*/}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\twidth : '144px',\r\n\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\tcolor: (this.state.showGraph ? 'grey' : 'steelblue')\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tShow/Hide Graphs\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={cBlue}/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={cRed}/>\r\n\t\t\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Pie, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cOrange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cRed} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cGreen} />\r\n\t\t\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Bar, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\r\n\t\t\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={cBlue} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={cOrange} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={cRed} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={cGreen} dot={false} />\r\n\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ height: '32px', width : '144px', float: 'right', color: 'grey' }}\r\n\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHide Graphs\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Rankings --------------------------------*/}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cRed }}>\r\n\t\t\t\t\t\t\t\t\t\t<b>Global Ranking based on:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t\t\t{this.globalRankingHeading(selectCategory)}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<Dropdown options={categoryChoice} value={'Hospitalized'}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCategory: select.value})}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t{ (this.state.rankSelect >= 0) && (\r\n\t\t\t\t\t\t\t\t<Grid container spacing={2} direction='column'>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Rank {this.state.rankSelect}. {selectCountry} - {this.state.globalData[selectCountry][selectCategory]}{rankSuffix}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>out of {this.state.countries.length} countries\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Top 10 Countries</b><br/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.rankTopTen.map((c, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<><b>{i+1}.</b> {c.Country} - {c[selectCategory]}{rankSuffix}<br/></>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Map --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t{ (this.state.mapGlobalData != null) && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{this.renderMap(selectCategory)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t{/*-------------------------------- Footer --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t\t<Paper className={classes.paper} style={{background: \"#8F8080\"}}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard for Tencent Thailand's Internship Project</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\r\n            </Typography>\r\n          </Paper>\r\n        </footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}