{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react'; //MUI\n\nimport { withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar, Typography, CssBaseline, Container, Paper, Grid, styles, darkTheme } from '../components/muiComponents.js'; //DROPDOWN\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css'; //RECHARTS\n\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts'; //AXIOS DATA\n\nimport axios from 'axios';\nimport { fetchData, callAPIGlobalAll, callAPIGlobalTimeline, callAPIGlobal, callAPIThailand, clearAxiosCalls, getLastDate, getDateDiff, processData } from '../components/dataFetch.js'; //RANKING\n\nimport { countryCompare, globalRankSelect, globalRankTopTen, globalRanking, globalRankingHeading } from '../components/dataRank.js'; //JVECTORMAP\n\nimport '../public/jquery-jvectormap.css';\nimport { countryEncodeAssist, countryDecodeAssist, processMapGlobalData, renderMap, VectorMap } from '../components/dataMap.js'; //----------------------------------------------------------------\n\nvar cBlue = '#20A0E0';\nvar cOrange = '#F7B860';\nvar cRed = '#E04040';\nvar cGreen = '#80D080';\nvar cDRed = '#BB0A1E';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasData: false,\n      selectCountry: 'Thailand',\n      selectCity: 'Overall',\n      countries: [],\n      globalData: [],\n      fastMode: true,\n      hasTimeline: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false,\n      selectCategory: 'Hospitalized',\n      rankSelect: -1,\n      rankTopTen: [],\n      mapGlobalData: null\n    };\n    _this.referenceDate = new Date();\n\n    _this.referenceDate.setDate(_this.referenceDate.getDate() - 1);\n\n    var CancelToken = axios.CancelToken;\n    _this.cancelSource = CancelToken.source();\n\n    var _require = require(\"country-list\"),\n        getCode = _require.getCode,\n        getName = _require.getName,\n        getData = _require.getData;\n\n    _this.getCountryCode = getCode;\n    _this.getCountryName = getName;\n    _this.getCountryData = getData;\n    _this.cRed = cRed;\n    _this.cBlue = cBlue; //Binding dataFetch functions\n\n    _this.fetchData = fetchData.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobalAll = callAPIGlobalAll.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(_assertThisInitialized(_this));\n    _this.callAPIGlobal = callAPIGlobal.bind(_assertThisInitialized(_this));\n    _this.callAPIThailand = callAPIThailand.bind(_assertThisInitialized(_this));\n    _this.clearAxiosCalls = clearAxiosCalls.bind(_assertThisInitialized(_this));\n    _this.getLastDate = getLastDate.bind(_assertThisInitialized(_this));\n    _this.getDateDiff = getDateDiff.bind(_assertThisInitialized(_this));\n    _this.processData = processData.bind(_assertThisInitialized(_this)); //Binding dataRank functions\n\n    _this.countryCompare = countryCompare.bind(_assertThisInitialized(_this));\n    _this.globalRankSelect = globalRankSelect.bind(_assertThisInitialized(_this));\n    _this.globalRankTopTen = globalRankTopTen.bind(_assertThisInitialized(_this));\n    _this.globalRanking = globalRanking.bind(_assertThisInitialized(_this));\n    _this.globalRankingHeading = globalRankingHeading.bind(_assertThisInitialized(_this)); //Binding dataRank functions\n\n    _this.countryEncodeAssist = countryEncodeAssist.bind(_assertThisInitialized(_this));\n    _this.countryDecodeAssist = countryDecodeAssist.bind(_assertThisInitialized(_this));\n    _this.processMapGlobalData = processMapGlobalData.bind(_assertThisInitialized(_this));\n    _this.renderMap = renderMap.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPIGlobalAll(this.referenceDate);\n      this.fetchData(this.referenceDate);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.selectCountry != this.state.selectCountry || prevState.selectCity != this.state.selectCity || prevState.fastMode != this.state.fastMode) {\n        this.clearAxiosCalls();\n        this.fetchData(this.referenceDate);\n      }\n\n      if (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry) this.globalRanking(this.state.selectCategory);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          hasData = _this$state.hasData,\n          selectCountry = _this$state.selectCountry,\n          selectCity = _this$state.selectCity,\n          fastMode = _this$state.fastMode,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie,\n          selectCategory = _this$state.selectCategory;\n      if (!hasData) return \"ERROR: Cannot fetch data\";\n      var selectedCountryData = this.state.globalData[selectCountry];\n      var cityChoice = [\"Overall\"];\n\n      if (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\n        cityChoice = selectedCountryData.Cities.slice(0);\n        cityChoice.splice(0, 0, \"Overall\");\n      }\n\n      var categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\n      var rankSuffix = \" cases\";\n\n      if (selectCategory == 'RecoveryRate' || selectCategory == 'MortalityRate') {\n        rankSuffix = \"%\";\n      }\n\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 8\n        }\n      }, \"COVID-19 Dashboard\")))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"left\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '128px',\n          \"float\": 'right',\n          color: fastMode ? cDRed : 'blue'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            fastMode: !fastMode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 8\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, fastMode ? \"FAST MODE\" : \"FULL MODE\"))), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: this.state.countries,\n        value: selectCountry,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCountry: select.value,\n            selectCity: 'Overall'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 8\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 8\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }), __jsx(Dropdown, {\n        options: cityChoice,\n        value: selectCity,\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCity: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 8\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 52\n        }\n      }, \"Confirmed\")), __jsx(Typography, {\n        style: {\n          color: cBlue\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'steelblue'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newConfirmed.toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 52\n        }\n      }, \"Hospitalized\")), __jsx(Typography, {\n        style: {\n          color: cOrange\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'goldenrod'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, data_text.newHospitalized >= 0 ? '+' : '-', \" \", Math.abs(data_text.newHospitalized).toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 52\n        }\n      }, \"Deaths\")), __jsx(Typography, {\n        style: {\n          color: cRed\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'fireBrick'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newDeaths.toLocaleString()))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 48\n        }\n      }, \"Recovered\")), __jsx(Typography, {\n        style: {\n          color: cGreen\n        },\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        style: {\n          color: 'green'\n        },\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, \"+ \", data_text.newRecovered.toLocaleString()))), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 8\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 10\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 10\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\")))), __jsx(Grid, {\n        item: true,\n        xs: this.state.hasTimeline ? 6 : 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 6\n        }\n      }), this.state.hasTimeline && __jsx(React.Fragment, null, __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: this.state.showGraph ? 'grey' : 'steelblue'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 7\n        }\n      }, \"Show/Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 6\n        }\n      }), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: cBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: cOrange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: cRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: cGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: cBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: cOrange,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: cRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: cGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      })))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 6\n        }\n      }), __jsx(\"button\", {\n        style: {\n          height: '32px',\n          width: '144px',\n          \"float\": 'right',\n          color: 'grey'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 6\n        }\n      }, \"Hide Graphs\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 6\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      })), __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 8\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 10\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }\n      }, \"Global Ranking based on:\")), __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          color: cDRed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 10\n        }\n      }, this.globalRankingHeading(selectCategory))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 10\n        }\n      }), __jsx(Dropdown, {\n        options: categoryChoice,\n        value: 'Hospitalized',\n        onChange: function onChange(select) {\n          return _this2.setState({\n            selectCategory: select.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 10\n        }\n      }))), __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 7\n        }\n      }, this.state.rankSelect >= 0 && __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 10\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }\n      }, __jsx(Typography, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 12\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }\n      }, \"Rank \", this.state.rankSelect, \". \", selectCountry, \" - \", this.state.globalData[selectCountry][selectCategory], rankSuffix), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }\n      }), \"out of \", this.state.countries.length, \" countries\"))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 10\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 12\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }\n      }, \"Top 10 Countries\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 36\n        }\n      })), __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 12\n        }\n      }, this.state.rankTopTen.map(function (c, i) {\n        return __jsx(React.Fragment, null, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }\n        }, i + 1, \".\"), \" \", c.Country, \" - \", c[selectCategory], rankSuffix, __jsx(\"br\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 74\n          }\n        }));\n      })))))), __jsx(Grid, {\n        item: true,\n        xs: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 7\n        }\n      }, this.state.mapGlobalData != null && __jsx(React.Fragment, null, this.renderMap(selectCategory))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        style: {\n          background: \"#8F8080\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 8\n        }\n      }, \"COVID-19 Dashboard for Tencent Thailand's Internship Project\")), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/_app.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","styles","darkTheme","Dropdown","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","axios","fetchData","callAPIGlobalAll","callAPIGlobalTimeline","callAPIGlobal","callAPIThailand","clearAxiosCalls","getLastDate","getDateDiff","processData","countryCompare","globalRankSelect","globalRankTopTen","globalRanking","globalRankingHeading","countryEncodeAssist","countryDecodeAssist","processMapGlobalData","renderMap","VectorMap","cBlue","cOrange","cRed","cGreen","cDRed","App","props","state","hasData","selectCountry","selectCity","countries","globalData","fastMode","hasTimeline","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","selectCategory","rankSelect","rankTopTen","mapGlobalData","referenceDate","Date","setDate","getDate","CancelToken","cancelSource","source","require","getCode","getName","getData","getCountryCode","getCountryName","getCountryData","bind","prevProps","prevState","classes","selectedCountryData","cityChoice","undefined","CitiesN","Cities","slice","splice","categoryChoice","rankSuffix","root","background","title","appBarSpacer","height","width","color","setState","select","value","paper","toLocaleString","Math","abs","top","right","left","bottom","length","map","c","i","Country","footer","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\n\r\n//MUI\r\nimport {withStyles, createMuiTheme, MuiThemeProvider, AppBar, Toolbar,\r\n\tTypography, CssBaseline, Container, Paper, Grid,\r\n\tstyles, darkTheme} from '../components/muiComponents.js';\r\n\r\n//DROPDOWN\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n//RECHARTS\r\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \r\n  Pie, Cell, } from 'recharts';\r\n\t\r\n//AXIOS DATA\r\nimport axios from 'axios';\r\nimport {fetchData, callAPIGlobalAll, callAPIGlobalTimeline,\r\n\tcallAPIGlobal, callAPIThailand, clearAxiosCalls,\r\n\tgetLastDate, getDateDiff, processData} from '../components/dataFetch.js';\r\n\t\r\n//RANKING\r\nimport {countryCompare, globalRankSelect, globalRankTopTen,\r\n\tglobalRanking, globalRankingHeading} from '../components/dataRank.js';\r\n\t\r\n//JVECTORMAP\r\nimport '../public/jquery-jvectormap.css'\r\nimport {countryEncodeAssist, countryDecodeAssist, processMapGlobalData,\r\n\trenderMap, VectorMap} from '../components/dataMap.js';\r\n\t\r\n//----------------------------------------------------------------\r\n\r\nconst cBlue = '#20A0E0';\r\nconst cOrange = '#F7B860';\r\nconst cRed = '#E04040';\r\nconst cGreen = '#80D080';\r\nconst cDRed = '#BB0A1E';\r\n\r\nclass App extends React.Component {\r\n\t\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasData: false,\r\n\t\t\tselectCountry: 'Thailand',\r\n\t\t\tselectCity: 'Overall',\r\n\t\t\tcountries: [],\r\n\t\t\tglobalData: [],\r\n\t\t\tfastMode: true,\r\n\t\t\thasTimeline: true,\r\n\t\t\tdataTimeline: [],\r\n\t\t\tdataTimeline15: [],\r\n\t\t\tdata_text: {\r\n\t\t\t\tupdatedDate: '',\r\n\t\t\t\tconfirmed: '',\r\n\t\t\t\thospitalized: '',\r\n\t\t\t\tdeaths: '',\r\n\t\t\t\trecovered: '',\r\n\t\t\t\tnewConfirmed: '',\r\n\t\t\t\tnewHospitalized: '',\r\n\t\t\t\tnewDeaths: '',\r\n\t\t\t\tnewRecovered: '',\r\n\t\t\t},\r\n\t\t\tdata_pie: [{}],\r\n\t\t\tlastConfirmed: 0,\r\n\t\t\tlastDeath: 0,\r\n\t\t\tnoConfirmedStreak: 0,\r\n\t\t\tnoDeathStreak: 0,\r\n\t\t\trateRecovery: 0,\r\n\t\t\trateDeath: 0,\r\n\t\t\tshowGraph: false,\r\n\t\t\tselectCategory: 'Hospitalized',\r\n\t\t\trankSelect: -1,\r\n\t\t\trankTopTen: [],\r\n\t\t\tmapGlobalData: null,\r\n\t\t};\r\n\t\t\r\n\t\tthis.referenceDate = new Date();\r\n\t\tthis.referenceDate.setDate(this.referenceDate.getDate()-1);\r\n\t\t\r\n\t\tconst CancelToken = axios.CancelToken;\r\n\t\tthis.cancelSource = CancelToken.source();\r\n\t\t\r\n\t\tconst { getCode, getName, getData } = require(\"country-list\");\r\n\t\tthis.getCountryCode = getCode;\r\n\t\tthis.getCountryName = getName;\r\n\t\tthis.getCountryData = getData;\r\n\t\t\r\n\t\tthis.cRed = cRed;\r\n\t\tthis.cBlue = cBlue;\r\n\t\t\r\n\t\t//Binding dataFetch functions\r\n\t\tthis.fetchData = fetchData.bind(this);\r\n\t\tthis.callAPIGlobalAll = callAPIGlobalAll.bind(this);\r\n\t\tthis.callAPIGlobalTimeline = callAPIGlobalTimeline.bind(this);\r\n\t\tthis.callAPIGlobal = callAPIGlobal.bind(this);\r\n\t\tthis.callAPIThailand = callAPIThailand.bind(this);\r\n\t\tthis.clearAxiosCalls = clearAxiosCalls.bind(this);\r\n\t\tthis.getLastDate = getLastDate.bind(this);\r\n\t\tthis.getDateDiff = getDateDiff.bind(this);\r\n\t\tthis.processData = processData.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryCompare = countryCompare.bind(this);\r\n\t\tthis.globalRankSelect = globalRankSelect.bind(this);\r\n\t\tthis.globalRankTopTen = globalRankTopTen.bind(this);\r\n\t\tthis.globalRanking = globalRanking.bind(this);\r\n\t\tthis.globalRankingHeading = globalRankingHeading.bind(this);\r\n\t\t//Binding dataRank functions\r\n\t\tthis.countryEncodeAssist = countryEncodeAssist.bind(this);\r\n\t\tthis.countryDecodeAssist = countryDecodeAssist.bind(this);\r\n\t\tthis.processMapGlobalData = processMapGlobalData.bind(this);\r\n\t\tthis.renderMap = renderMap.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t\tthis.callAPIGlobalAll(this.referenceDate);\r\n\t\tthis.fetchData(this.referenceDate);\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.selectCountry != this.state.selectCountry) ||\r\n     \t\t(prevState.selectCity != this.state.selectCity) ||\r\n\t\t\t\t(prevState.fastMode != this.state.fastMode))\r\n\t\t{\r\n\t\t\tthis.clearAxiosCalls();\r\n\t\t\tthis.fetchData(this.referenceDate);\r\n\t\t}\r\n\t\t\r\n\t\tif (prevState.selectCategory != this.state.selectCategory || prevState.selectCountry != this.state.selectCountry)\r\n\t\t\tthis.globalRanking(this.state.selectCategory);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst {\r\n\t\t\thasData, selectCountry, selectCity, fastMode, \r\n\t\t\tdataTimeline, dataTimeline15, data_text, data_pie,\r\n\t\t\tselectCategory\r\n\t\t} = this.state;\r\n\t\t\r\n\t\tif (!hasData)\r\n\t\t\treturn \"ERROR: Cannot fetch data\";\r\n\t\t\r\n\t\tconst selectedCountryData = this.state.globalData[selectCountry];\r\n\t\tlet cityChoice = [\"Overall\"];\r\n\t\tif (selectedCountryData != undefined && selectedCountryData.CitiesN != 0) {\r\n\t\t\tcityChoice = selectedCountryData.Cities.slice(0);\r\n\t\t\tcityChoice.splice(0,0,\"Overall\");\r\n\t\t}\r\n\t\t\r\n\t\tconst categoryChoice = ['Confirmed', 'Hospitalized', 'Deaths', 'Recovered', 'RecoveryRate', 'MortalityRate'];\r\n\t\tlet rankSuffix = \" cases\";\r\n\t\tif ((selectCategory == 'RecoveryRate') || (selectCategory == 'MortalityRate')) {\r\n\t\t\trankSuffix = \"%\";\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline/>\r\n\t\t\t\t<AppBar style={{background: cDRed}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<div className={classes.appBarSpacer}/>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\r\n\t\t\t\t\t\t{/*-------------------------------- Source Info --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\r\n\t\t\t\t\t\t\t\t<Typography align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\" color=\"textPrimary\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={data_text.source}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\r\n\t\t\t\t\t\t\t\t\t\tdata_text.source\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</MuiThemeProvider>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Fetch Control --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\t\twidth : '128px',\r\n\t\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\t\tcolor: (fastMode ? cDRed : 'blue')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => this.setState({ fastMode: !fastMode })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<b>{fastMode ? \"FAST MODE\" : \"FULL MODE\"}</b>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={this.state.countries} value={selectCountry}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCountry: select.value, selectCity: 'Overall' })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<Dropdown options={cityChoice} value={selectCity}\r\n\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCity:select.value })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Numbers --------------------------------*/}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }}><b>Confirmed</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cBlue }} variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'steelblue' }} variant=\"h5\">+ {data_text.newConfirmed.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }}><b>Hospitalized</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cOrange }} variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'goldenrod' }} variant=\"h5\">\r\n\t\t\t\t\t\t\t\t\t{(data_text.newHospitalized >= 0) ? '+' : '-'} {Math.abs(data_text.newHospitalized).toLocaleString()}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }}><b>Deaths</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cRed }} variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'fireBrick' }} variant=\"h5\">+ {data_text.newDeaths.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }}><b>Recovered</b></Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: cGreen }} variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t\t<Typography style={{ color: 'green' }} variant=\"h5\">+ {data_text.newRecovered.toLocaleString()}</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Streaks --------------------------------*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Rates --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={ this.state.hasTimeline ? 6 : 12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: 'green' }}>\r\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t\t{/*Button to toggle graph display*/}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{ this.state.hasTimeline && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '32px',\r\n\t\t\t\t\t\t\t\twidth : '144px',\r\n\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\tcolor: (this.state.showGraph ? 'grey' : 'steelblue')\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tShow/Hide Graphs\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={cBlue}/>\r\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={cRed}/>\r\n\t\t\t\t\t\t\t\t\t</BarChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Pie, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cOrange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cRed} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={cGreen} />\r\n\t\t\t\t\t\t\t\t\t\t</Pie>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*Bar, in total*/}\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\r\n\t\t\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\r\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\r\n\t\t\t\t\t\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t\t\t\t\t<Legend/>\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={cBlue} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={cOrange} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={cRed} dot={false} />\r\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={cGreen} dot={false} />\r\n\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ height: '32px', width : '144px', float: 'right', color: 'grey' }}\r\n\t\t\t\t\t\tonClick={() => this.setState({ showGraph: !this.state.showGraph })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHide Graphs\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Rankings --------------------------------*/}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cRed }}>\r\n\t\t\t\t\t\t\t\t\t\t<b>Global Ranking based on:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={{ color: cDRed }}>\r\n\t\t\t\t\t\t\t\t\t\t{this.globalRankingHeading(selectCategory)}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<Dropdown options={categoryChoice} value={'Hospitalized'}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(select) => this.setState({ selectCategory: select.value})}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t{ (this.state.rankSelect >= 0) && (\r\n\t\t\t\t\t\t\t\t<Grid container spacing={2} direction='column'>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Rank {this.state.rankSelect}. {selectCountry} - {this.state.globalData[selectCountry][selectCategory]}{rankSuffix}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>out of {this.state.countries.length} countries\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Top 10 Countries</b><br/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.rankTopTen.map((c, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<><b>{i+1}.</b> {c.Country} - {c[selectCategory]}{rankSuffix}<br/></>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*-------------------------------- Map --------------------------------*/}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t{ (this.state.mapGlobalData != null) && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{this.renderMap(selectCategory)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t{/*-------------------------------- Footer --------------------------------*/}\r\n\t\t\t\t\r\n\t\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t\t<Paper className={classes.paper} style={{background: \"#8F8080\"}}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t<b>COVID-19 Dashboard for Tencent Thailand's Internship Project</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\r\n            </Typography>\r\n          </Paper>\r\n        </footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}