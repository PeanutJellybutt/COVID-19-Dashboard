{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nvar styles = function styles(theme) {\n  return {\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperFoot: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#777070\"\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing(2)\n    },\n    root: {\n      backgroundColor: \"#000000\"\n    }\n  };\n};\n\nvar darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      useGlobal: true,\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.useGlobal) this.callAPIThailand();else this.callAPIGlobal('', 'Thailand');\n    }\n  }, {\n    key: \"callAPIGlobal\",\n    value: function callAPIGlobal(city, country) {\n      var data, dataN, prevConfirmed, prevHospitalized, prevDeaths, prevRecovered, sourcePrefix, markDate, todayStr, tomorrow, now, lastIndex, lines, markDateStr, sourceDate, response, date, i, values, confirmed, hospitalized, deaths, recovered;\n      return _regeneratorRuntime.async(function callAPIGlobal$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = [];\n              dataN = 0;\n              prevConfirmed = 0;\n              prevHospitalized = 0;\n              prevDeaths = 0;\n              prevRecovered = 0;\n              sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n              markDate = new Date(2020, 6, 22);\n              todayStr = new Date().toDateString();\n              tomorrow = new Date();\n              tomorrow.setDate(tomorrow.getDate() + 1);\n              now = tomorrow.getTime();\n              lastIndex = 1;\n\n            case 13:\n              if (!(markDate.getTime() < now)) {\n                _context.next = 54;\n                break;\n              }\n\n              lines = '';\n              markDateStr = markDate.toISOString();\n              sourceDate = markDateStr.slice(5, 8) + markDateStr.slice(8, 10) + '-' + markDate.getFullYear();\n              console.log(sourceDate);\n              _context.prev = 18;\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(axios.get(sourcePrefix + sourceDate + '.csv', {\n                headers: {\n                  'Content-Type': 'text/csv'\n                }\n              }));\n\n            case 21:\n              response = _context.sent;\n              lines = response.data.split(/\\r?\\n/);\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](18);\n              console.log(_context.t0);\n\n            case 28:\n              markDate.setDate(markDate.getDate() + 1);\n\n              if (!(lines == '')) {\n                _context.next = 31;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 13);\n\n            case 31:\n              date = sourceDate.replace('-', '\\/').replace('-', '\\/');\n              i = lastIndex;\n\n            case 33:\n              if (!(i < lines.length)) {\n                _context.next = 52;\n                break;\n              }\n\n              values = lines[i].split(',');\n\n              if (!(city != '' && city != values[2] || country != '' && country != values[3])) {\n                _context.next = 37;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 49);\n\n            case 37:\n              confirmed = values[7];\n              hospitalized = values[10];\n              deaths = values[8];\n              recovered = values[9];\n              data[dataN] = {\n                Date: date,\n                Confirmed: confirmed,\n                Hospitalized: hospitalized,\n                Deaths: deaths,\n                Recovered: recovered,\n                NewConfirmed: confirmed - prevConfirmed,\n                NewHospitalized: hospitalized - prevHospitalized,\n                NewDeaths: deaths - prevDeaths,\n                NewRecovered: recovered - prevRecovered\n              };\n              prevConfirmed = confirmed;\n              prevHospitalized = hospitalized;\n              prevDeaths = deaths;\n              prevRecovered = recovered;\n              dataN++;\n              lastIndex = i;\n              return _context.abrupt(\"break\", 52);\n\n            case 49:\n              i++;\n              _context.next = 33;\n              break;\n\n            case 52:\n              _context.next = 13;\n              break;\n\n            case 54:\n              console.log(data);\n              this.processData(sourcePrefix, data);\n\n            case 56:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[18, 25]], Promise);\n    }\n  }, {\n    key: \"callAPIThailand\",\n    value: function callAPIThailand() {\n      var source, data, response;\n      return _regeneratorRuntime.async(function callAPIThailand$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              source = 'https://covid19.th-stat.com/api/open/timeline';\n              data = [];\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(source));\n\n            case 5:\n              response = _context2.sent;\n              console.log(response);\n              data = response.data['Data'];\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n\n            case 13:\n              this.processData(source, data);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[2, 10]], Promise);\n    }\n  }, {\n    key: \"getLastDate\",\n    value: function getLastDate(type, data) {\n      for (var i = data.length - 1; i >= 0; i--) {\n        if (data[i][type] != 0) return data[i]['Date'];\n      }\n    }\n  }, {\n    key: \"getDateDiff\",\n    value: function getDateDiff(date) {\n      var now = new Date().getTime();\n      return Math.floor((now - new Date(date).getTime()) / 86400000);\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(source, data) {\n      if (data.length <= 0) return;\n      var lastData = data.slice(-1)[0];\n      var dataReformatted = data.slice().map(function (d) {\n        return Object.assign({}, d, {\n          Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n        });\n      });\n      var lastConfirmed = this.getLastDate('NewConfirmed', data);\n      var lastDeath = this.getLastDate('NewDeaths', data);\n      var lastConfirmedFormatted = lastConfirmed.slice(3, 6) + lastConfirmed.slice(0, 3) + lastConfirmed.slice(6);\n      var lastDeathFormatted = lastDeath.slice(3, 6) + lastDeath.slice(0, 3) + lastDeath.slice(6);\n      var lastUpdated = lastData['Date'];\n      this.setState({\n        dataTimeline: dataReformatted,\n        dataTimeline15: dataReformatted.slice(1).slice(-15),\n        data_text: {\n          source: source,\n          updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n          confirmed: lastData['Confirmed'],\n          hospitalized: lastData['Hospitalized'],\n          deaths: lastData['Deaths'],\n          recovered: lastData['Recovered'],\n          newConfirmed: lastData['NewConfirmed'],\n          newHospitalized: lastData['NewHospitalized'],\n          newDeaths: lastData['NewDeaths'],\n          newRecovered: lastData['NewRecovered']\n        },\n        data_pie: [{\n          name: 'Hospitalized',\n          value: lastData['Hospitalized']\n        }, {\n          name: 'Deaths',\n          value: lastData['Deaths']\n        }, {\n          name: 'Recovered',\n          value: lastData['Recovered']\n        }],\n        lastConfirmed: lastConfirmedFormatted,\n        lastDeath: lastDeathFormatted,\n        noConfirmedStreak: this.getDateDiff(lastConfirmed),\n        noDeathStreak: this.getDateDiff(lastDeath),\n        rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n        rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var graphBlue = '#20A0E0';\n      var graphYellow = '#FFC060';\n      var graphRed = '#E04040';\n      var graphGreen = '#80E080';\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie;\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: '#BB0A1E'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 8\n        }\n      }, \"Simple COVID-19 Dashboard\")))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"right\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }, \"Confirmed\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newConfirmed.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }, \"Hospitalized\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newHospitalized.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, \"Deaths\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newDeaths.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, \"Recovered\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newRecovered.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), !this.state.useGlobal && __jsx(React.Fragment, null, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 7\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showGraph: !_this2.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, \"Show/Hide Graph\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 7\n        }\n      }), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      })), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: graphBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: graphYellow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: graphBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: graphYellow,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: graphRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: graphGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      })))))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paperFoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 7\n        }\n      }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\"), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/App.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperFoot","footer","palette","background","marginTop","root","darkTheme","type","App","props","state","useGlobal","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","callAPIThailand","callAPIGlobal","city","country","data","dataN","prevConfirmed","prevHospitalized","prevDeaths","prevRecovered","sourcePrefix","markDate","Date","todayStr","toDateString","tomorrow","setDate","getDate","now","getTime","lastIndex","lines","markDateStr","toISOString","sourceDate","slice","getFullYear","console","log","get","headers","response","split","date","replace","i","length","values","Confirmed","Hospitalized","Deaths","Recovered","NewConfirmed","NewHospitalized","NewDeaths","NewRecovered","processData","source","Math","floor","lastData","dataReformatted","map","d","Object","assign","getLastDate","lastConfirmedFormatted","lastDeathFormatted","lastUpdated","setState","name","value","getDateDiff","toFixed","graphBlue","graphYellow","graphRed","graphGreen","classes","toLocaleString","top","right","left","bottom","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n  \nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#FFFEFE\",\n  },\n\tpaperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#777070\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(2),\n  },\n\troot: {\n    backgroundColor: \"#000000\",\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tuseGlobal: true,\n\t\t\tdataTimeline: [],\n\t\t\tdataTimeline15: [],\n\t\t\tdata_text: {\n\t\t\t\tupdatedDate: '',\n\t\t\t\tconfirmed: '',\n\t\t\t\thospitalized: '',\n\t\t\t\tdeaths: '',\n\t\t\t\trecovered: '',\n\t\t\t\tnewConfirmed: '',\n\t\t\t\tnewHospitalized: '',\n\t\t\t\tnewDeaths: '',\n\t\t\t\tnewRecovered: '',\n\t\t\t},\n\t\t\tdata_pie: [{}],\n\t\t\tlastConfirmed: 0,\n\t\t\tlastDeath: 0,\n\t\t\tnoConfirmedStreak: 0,\n\t\t\tnoDeathStreak: 0,\n\t\t\trateRecovery: 0,\n\t\t\trateDeath: 0,\n\t\t\tshowGraph: false,\n\t\t};\n  }\n  \n  componentDidMount() {\n\t\tif (!this.state.useGlobal)\n\t\t\tthis.callAPIThailand();\n\t\telse this.callAPIGlobal('','Thailand');\n  }\n\t\n\tasync callAPIGlobal(city, country) {\n\t\t\n\t\tlet data = [];\n\t\tlet dataN = 0;\n\t\t\n\t\tlet prevConfirmed = 0;\n\t\tlet prevHospitalized = 0;\n\t\tlet prevDeaths = 0;\n\t\tlet prevRecovered = 0;\n\t\t\n\t\tconst sourcePrefix = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n\t\tlet markDate = new Date(2020,6,22);\n\t\tconst todayStr = (new Date()).toDateString();\n\t\tconst tomorrow = new Date();\n\t\ttomorrow.setDate(tomorrow.getDate()+1);\n\t\tconst now = tomorrow.getTime();\n\t\t\n\t\tlet lastIndex = 1;\n\t\t\n\t\twhile (markDate.getTime() < now) {\n\t\t\tlet lines = '';\n\t\t\tconst markDateStr = markDate.toISOString();\n\t\t\tconst sourceDate = markDateStr.slice(5,8) + markDateStr.slice(8,10) + '-' + markDate.getFullYear();\n\t\t\tconsole.log(sourceDate);\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(sourcePrefix + sourceDate + '.csv', { headers: { 'Content-Type': 'text/csv' } });\n\t\t\t\tlines = response.data.split(/\\r?\\n/);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\t\n\t\t\tmarkDate.setDate(markDate.getDate()+1);\n\t\t\t\n\t\t\tif (lines == '')\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tconst date = sourceDate.replace('-','\\/').replace('-','\\/');\n\t\t\tfor (let i=lastIndex; i<lines.length; i++) {\n\t\t\t\tconst values = lines[i].split(',');\n\t\t\t\tif ((city != '' && city != values[2]) || (country != '' && country != values[3]))\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tconst confirmed = values[7];\n\t\t\t\tconst hospitalized = values[10];\n\t\t\t\tconst deaths = values[8];\n\t\t\t\tconst recovered = values[9];\n\t\t\t\t\n\t\t\t\tdata[dataN] = {\n\t\t\t\t\tDate: date,\n\t\t\t\t\tConfirmed: confirmed,\n\t\t\t\t\tHospitalized: hospitalized,\n\t\t\t\t\tDeaths: deaths,\n\t\t\t\t\tRecovered: recovered,\n\t\t\t\t\tNewConfirmed: confirmed - prevConfirmed,\n\t\t\t\t\tNewHospitalized: hospitalized - prevHospitalized,\n\t\t\t\t\tNewDeaths: deaths - prevDeaths,\n\t\t\t\t\tNewRecovered: recovered - prevRecovered,\n\t\t\t\t}\n\t\t\t\tprevConfirmed = confirmed;\n\t\t\t\tprevHospitalized = hospitalized;\n\t\t\t\tprevDeaths = deaths;\n\t\t\t\tprevRecovered = recovered;\n\t\t\t\tdataN++;\n\t\t\t\tlastIndex = i;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconsole.log(data);\n\t\t\n\t\tthis.processData(sourcePrefix, data);\n\t}\n\t\n\tasync callAPIThailand() {\n\t\t\n\t\tconst source = 'https://covid19.th-stat.com/api/open/timeline';\n\t\tlet data = [];\n\t\t\n\t\ttry {\n\t\t\tconst response = await axios.get(source);\n\t\t\tconsole.log(response);\n\t\t\tdata = response.data['Data'];\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t\n\t\tthis.processData(source, data);\n\t}\n\t\n\tgetLastDate(type, data) {\n\t\tfor (let i=data.length-1; i>=0; i--) {\n\t\t\tif (data[i][type] != 0)\n\t\t\t\treturn data[i]['Date'];\n\t\t}\n\t}\n\t\n\tgetDateDiff(date) {\n\t\tlet now = (new Date()).getTime();\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\n\t}\n\t\n\tprocessData(source, data) {\n\t\tif (data.length <= 0)\n\t\t\treturn;\n\t\t\n\t\tconst lastData = data.slice(-1)[0];\n\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\treturn (\n\t\t\t\tObject.assign({},d,{\n\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\t\n\t\tconst lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\tconst lastDeath = this.getLastDate('NewDeaths',data);\n\t\tconst lastConfirmedFormatted = lastConfirmed.slice(3,6) + lastConfirmed.slice(0,3) + lastConfirmed.slice(6);\n\t\tconst lastDeathFormatted = lastDeath.slice(3,6) + lastDeath.slice(0,3) + lastDeath.slice(6);\n\t\tconst lastUpdated = lastData['Date'];\n\t\t\n\t\tthis.setState({\n\t\t\tdataTimeline: dataReformatted,\n\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\tdata_text: {\n\t\t\t\tsource: source,\n\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t},\n\t\t\tdata_pie: [\n\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t],\n\t\t\tlastConfirmed: lastConfirmedFormatted,\n\t\t\tlastDeath: lastDeathFormatted,\n\t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n\t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t});\n\t}\n\t\n\trender() {\n\t\t\n\t\tconst graphBlue = '#20A0E0';\n\t\tconst graphYellow = '#FFC060';\n\t\tconst graphRed = '#E04040';\n\t\tconst graphGreen = '#80E080';\n\t\tconst { classes } = this.props;\n\t\tconst { dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar style={{background:'#BB0A1E'}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\n\t\t\t\t\t\t\t<b>Simple COVID-19 Dashboard</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.appBarSpacer}/>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\n\t\t\t\t\t\t\t\t<Typography align=\"right\" color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"right\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={data_text.source}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\n\t\t\t\t\t\t\t\t\t\tdata_text.source\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Confirmed</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Hospitalized</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Deaths</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Recovered</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\n\t\t\t\t\n\t\t\t\t\t{/*Button to toggle graph display*/}\n\t\t\t\t\t{ !this.state.useGlobal && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button onClick={() => this.setState({ showGraph: !this.state.showGraph })}>\n\t\t\t\t\t\t\tShow/Hide Graph\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\n\t\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={graphBlue} />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={graphRed} />\n\t\t\t\t\t\t\t\t\t</BarChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Pie, in total*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphYellow} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphRed} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphGreen} />\n\t\t\t\t\t\t\t\t\t\t</Pie>\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Bar, in total*/}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\n\t\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={graphBlue} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={graphYellow} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={graphRed} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={graphGreen} dot={false} />\n\t\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer className={classes.footer}>\n\t\t\t\t\t<Paper className={classes.paperFoot}>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tSimple Covid-19 Dashboard for Tencent Thailand's Internship Project\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\n            </Typography>\n          </Paper>\n        </footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}