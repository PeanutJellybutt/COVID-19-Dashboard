{"ast":null,"code":"export function countryCompare(category) {\n  return function innerSort(a, b) {\n    let valA = a[category];\n    let valB = b[category];\n\n    if (typeof valA == \"string\") {\n      valA = parseInt(valA);\n      valB = parseInt(valB);\n    }\n\n    if (valA > valB) return -1;else if (valA < valB) return 1;else return 0;\n  };\n}\nexport function globalRankSelect(ranking, country) {\n  return ranking.findIndex(x => x.Country == country);\n}\nexport function globalRankTopTen(ranking) {\n  return ranking.slice(0, 10);\n}\nexport function globalRanking(category) {\n  const countries = Object.values(this.state.globalData);\n  countries.sort(this.countryCompare(category)); //console.log(countries);\n\n  this.setState({\n    rankSelect: this.globalRankSelect(countries, this.state.selectCountry),\n    rankTopTen: this.globalRankTopTen(countries)\n  });\n}\nexport function globalRankingHeading(category) {\n  if (category == 'Confirmed') return \"Confirmed Cases Count\";else if (category == 'Hospitalized') return \"Active Cases Count\";else if (category == 'Deaths') return \"Deceased Cases Count\";else if (category == 'Recovered') return \"Recovered Cases Count\";else if (category == 'RecoveryRate') return \"Recovery Rate\";else if (category == 'MortalityRate') return \"Mortality Rate\";\n}","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/components/dataRank.js"],"names":["countryCompare","category","innerSort","a","b","valA","valB","parseInt","globalRankSelect","ranking","country","findIndex","x","Country","globalRankTopTen","slice","globalRanking","countries","Object","values","state","globalData","sort","setState","rankSelect","selectCountry","rankTopTen","globalRankingHeading"],"mappings":"AACA,OAAO,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AACxC,SAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAqBC,CAArB,EAAwB;AAC9B,QAAIC,IAAI,GAAGF,CAAC,CAACF,QAAD,CAAZ;AACA,QAAIK,IAAI,GAAGF,CAAC,CAACH,QAAD,CAAZ;;AACA,QAAI,OAAOI,IAAP,IAAe,QAAnB,EAA6B;AAC5BA,MAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAD,CAAf;AACAC,MAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAD,CAAf;AACA;;AAED,QAAID,IAAI,GAAGC,IAAX,EACC,OAAO,CAAC,CAAR,CADD,KAEK,IAAID,IAAI,GAAGC,IAAX,EACJ,OAAO,CAAP,CADI,KAEA,OAAO,CAAP;AACL,GAbD;AAcA;AAED,OAAO,SAASE,gBAAT,CAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AAClD,SAAOD,OAAO,CAACE,SAAR,CAAkBC,CAAC,IAAIA,CAAC,CAACC,OAAF,IAAaH,OAApC,CAAP;AACA;AAED,OAAO,SAASI,gBAAT,CAA0BL,OAA1B,EAAmC;AACzC,SAAOA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAgB,EAAhB,CAAP;AACA;AAED,OAAO,SAASC,aAAT,CAAuBf,QAAvB,EAAiC;AACvC,QAAMgB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKC,KAAL,CAAWC,UAAzB,CAAlB;AACAJ,EAAAA,SAAS,CAACK,IAAV,CAAe,KAAKtB,cAAL,CAAoBC,QAApB,CAAf,EAFuC,CAGvC;;AACA,OAAKsB,QAAL,CAAc;AACbC,IAAAA,UAAU,EAAE,KAAKhB,gBAAL,CAAsBS,SAAtB,EAAiC,KAAKG,KAAL,CAAWK,aAA5C,CADC;AAEbC,IAAAA,UAAU,EAAE,KAAKZ,gBAAL,CAAsBG,SAAtB;AAFC,GAAd;AAIA;AAED,OAAO,SAASU,oBAAT,CAA8B1B,QAA9B,EAAwC;AAC9C,MAAIA,QAAQ,IAAI,WAAhB,EACC,OAAO,uBAAP,CADD,KAEK,IAAIA,QAAQ,IAAI,cAAhB,EACJ,OAAO,oBAAP,CADI,KAEA,IAAIA,QAAQ,IAAI,QAAhB,EACJ,OAAO,sBAAP,CADI,KAEA,IAAIA,QAAQ,IAAI,WAAhB,EACJ,OAAO,uBAAP,CADI,KAEA,IAAIA,QAAQ,IAAI,cAAhB,EACJ,OAAO,eAAP,CADI,KAEA,IAAIA,QAAQ,IAAI,eAAhB,EACJ,OAAO,gBAAP;AACD","sourcesContent":["\r\nexport function countryCompare(category) {\r\n\treturn function innerSort(a,b) {\r\n\t\tlet valA = a[category];\r\n\t\tlet valB = b[category];\r\n\t\tif (typeof valA == \"string\") {\r\n\t\t\tvalA = parseInt(valA);\r\n\t\t\tvalB = parseInt(valB);\r\n\t\t}\r\n\t\t\r\n\t\tif (valA > valB)\r\n\t\t\treturn -1;\r\n\t\telse if (valA < valB)\r\n\t\t\treturn 1;\r\n\t\telse return 0;\r\n\t};\r\n}\r\n\r\nexport function globalRankSelect(ranking, country) {\r\n\treturn ranking.findIndex(x => x.Country == country);\r\n}\r\n\r\nexport function globalRankTopTen(ranking) {\r\n\treturn ranking.slice(0,10);\r\n}\r\n\r\nexport function globalRanking(category) {\r\n\tconst countries = Object.values(this.state.globalData);\r\n\tcountries.sort(this.countryCompare(category));\r\n\t//console.log(countries);\r\n\tthis.setState({\r\n\t\trankSelect: this.globalRankSelect(countries, this.state.selectCountry),\r\n\t\trankTopTen: this.globalRankTopTen(countries),\r\n\t});\r\n}\r\n\r\nexport function globalRankingHeading(category) {\r\n\tif (category == 'Confirmed')\r\n\t\treturn \"Confirmed Cases Count\";\r\n\telse if (category == 'Hospitalized')\r\n\t\treturn \"Active Cases Count\";\r\n\telse if (category == 'Deaths')\r\n\t\treturn \"Deceased Cases Count\";\r\n\telse if (category == 'Recovered')\r\n\t\treturn \"Recovered Cases Count\";\r\n\telse if (category == 'RecoveryRate')\r\n\t\treturn \"Recovery Rate\";\r\n\telse if (category == 'MortalityRate')\r\n\t\treturn \"Mortality Rate\";\r\n}"]},"metadata":{},"sourceType":"module"}