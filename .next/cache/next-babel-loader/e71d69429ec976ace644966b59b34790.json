{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Herabat\\\\react-js\\\\covid-19-dashboard\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nvar styles = function styles(theme) {\n  return {\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#FFFEFE\"\n    },\n    paperFoot: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"#777070\"\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing.unit * 2\n    },\n    root: {\n      backgroundColor: \"#000000\"\n    }\n  };\n};\n\nvar darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: ''\n      },\n      data_pie: [{}],\n      lastConfirmed: 0,\n      lastDeath: 0,\n      noConfirmedStreak: 0,\n      noDeathStreak: 0,\n      rateRecovery: 0,\n      rateDeath: 0,\n      showGraph: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getLastDate\",\n    value: function getLastDate(type, data) {\n      for (var i = data.length - 1; i >= 0; i--) {\n        if (data[i][type] != 0) return data[i]['Date'];\n      }\n    }\n  }, {\n    key: \"getDateDiff\",\n    value: function getDateDiff(date) {\n      var now = new Date().getTime();\n      return Math.floor((now - new Date(date).getTime()) / 86400000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPI();\n    }\n  }, {\n    key: \"callAPICSV\",\n    value: function callAPICSV() {\n      var data = [];\n      var dataN = 0;\n      var sourcePrefix = 'https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/08-18-2020.csv';\n      var targetDate = '08-18-2020';\n      axios.get(sourcePrefix + targetDate + '.csv').then(function (response) {\n        var lines = response.split(/\\r?\\n/);\n\n        for (var i = 1; i < lines.length; i++) {\n          var values = lines[i].split(',');\n          if (city != '' && city != values[2] || country != '' && country != values[3]) continue;\n          data[dataN] = {\n            Date: values[4],\n            Confirmed: values[7],\n            Hospitalized: values[10],\n            Deaths: values[8],\n            Recovered: values[9]\n          };\n          dataN++;\n        }\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n\n      if (data.length > 0) {}\n    }\n    /*\n     callAPI() {\n    \taxios.get('https://covid19.th-stat.com/api/open/timeline')\n    \t.then(response => {\n    \t\t//console.log(response.data);\n    \t\tconst data = response.data['Data'];\n    \t\tconst lastData = data.slice(-1)[0];\n    \t\tconst dataReformatted = data.slice().map(d => {\n    \t\t\treturn (\n    \t\t\t\tObject.assign({},d,{\n    \t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n    \t\t\t\t})\n    \t\t\t);\n    \t\t});\n    \t\t\n    \t\tlet lastConfirmed = this.getLastDate('NewConfirmed',data);\n    \t\tlet lastDeath = this.getLastDate('NewDeaths',data);\n    \t\tlet lastUpdated = lastData['Date'];\n    \t\t\n    \t\tthis.setState({\n    \t\t\tdataTimeline: dataReformatted,\n    \t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n    \t\t\tdata_text: {\n    \t\t\t\tsource: response.data['Source'],\n    \t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n    \t\t\t\tconfirmed: lastData['Confirmed'],\n    \t\t\t\thospitalized: lastData['Hospitalized'],\n    \t\t\t\tdeaths: lastData['Deaths'],\n    \t\t\t\trecovered: lastData['Recovered'],\n    \t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n    \t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n    \t\t\t\tnewDeaths: lastData['NewDeaths'],\n    \t\t\t\tnewRecovered: lastData['NewRecovered'],\n    \t\t\t},\n    \t\t\tdata_pie: [\n    \t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n    \t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n    \t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n    \t\t\t],\n    \t\t\tlastConfirmed: lastConfirmed,\n    \t\t\tlastDeath: lastDeath,\n    \t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n    \t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n    \t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n    \t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n    \t\t});\n    \t})\n    \t.catch(function (error) {\n    \t\tconsole.log(error);\n    \t})\n    }\n    */\n\n  }, {\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this2 = this;\n\n      var data = [];\n      axios.get('https://covid19.th-stat.com/api/open/timeline').then(function (response) {\n        _this2.data = response.data['Data'];\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n      this.setState({\n        dataLen: data\n      });\n\n      if (false\n      /*data.length > 0*/\n      ) {\n          var lastData = data.slice(-1)[0];\n          var dataReformatted = data.slice().map(function (d) {\n            return Object.assign({}, d, {\n              Date: d.Date.slice(3, 6) + d.Date.slice(0, 2)\n            });\n          });\n          var lastConfirmed = this.getLastDate('NewConfirmed', data);\n          var lastDeath = this.getLastDate('NewDeaths', data);\n          var lastUpdated = lastData['Date'];\n          this.setState({\n            dataTimeline: dataReformatted,\n            dataTimeline15: dataReformatted.slice(1).slice(-15),\n            data_text: {\n              source: response.data['Source'],\n              updatedDate: lastUpdated.slice(3, 6) + lastUpdated.slice(0, 3) + lastUpdated.slice(6),\n              confirmed: lastData['Confirmed'],\n              hospitalized: lastData['Hospitalized'],\n              deaths: lastData['Deaths'],\n              recovered: lastData['Recovered'],\n              newConfirmed: lastData['NewConfirmed'],\n              newHospitalized: lastData['NewHospitalized'],\n              newDeaths: lastData['NewDeaths'],\n              newRecovered: lastData['NewRecovered']\n            },\n            data_pie: [{\n              name: 'Hospitalized',\n              value: lastData['Hospitalized']\n            }, {\n              name: 'Deaths',\n              value: lastData['Deaths']\n            }, {\n              name: 'Recovered',\n              value: lastData['Recovered']\n            }],\n            lastConfirmed: lastConfirmed,\n            lastDeath: lastDeath,\n            noConfirmedStreak: this.getDateDiff(lastConfirmed),\n            noDeathStreak: this.getDateDiff(lastDeath),\n            rateRecovery: (100 * lastData['Recovered'] / lastData['Confirmed']).toFixed(2) + '%',\n            rateDeath: (100 * lastData['Deaths'] / lastData['Confirmed']).toFixed(2) + '%'\n          });\n        }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var graphBlue = '#20A0E0';\n      var graphYellow = '#FFC060';\n      var graphRed = '#E04040';\n      var graphGreen = '#80E080';\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          dataTimeline = _this$state.dataTimeline,\n          dataTimeline15 = _this$state.dataTimeline15,\n          data_text = _this$state.data_text,\n          data_pie = _this$state.data_pie;\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 4\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 5\n        }\n      }), __jsx(AppBar, {\n        style: {\n          background: '#BB0A1E'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 5\n        }\n      }, __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 7\n        }\n      }, this.state.dataLen))), __jsx(\"div\", {\n        className: classes.appBarSpacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 5\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 5\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 7\n        }\n      }, __jsx(MuiThemeProvider, {\n        theme: darkTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        align: \"right\",\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 10\n        }\n      }), \"Last updated: \", data_text.updatedDate), __jsx(Typography, {\n        variant: \"subtitle2\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: data_text.source,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 10\n        }\n      }, \" \", data_text.source)))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }, \"Confirmed\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }, data_text.confirmed.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newConfirmed.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, \"Hospitalized\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }, data_text.hospitalized.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newHospitalized.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, \"Deaths\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, data_text.deaths.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newDeaths.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, \"Recovered\"), __jsx(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }, data_text.recovered.toLocaleString()), __jsx(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      }, \"(\", data_text.newRecovered.toLocaleString(), \")\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }\n      }, \"Last confirmed: \", this.state.lastConfirmed, \" (\", this.state.noConfirmedStreak, \" days ago)\"), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }\n      }, \"Last death: \", this.state.lastDeath, \" (\", this.state.noDeathStreak, \" days ago)\"))), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 8\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }\n      }, \"Recovery Rate: \", this.state.rateRecovery), __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }\n      }, \"Mortality Rate: \", this.state.rateDeath)))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 6\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showGraph: !_this3.state.showGraph\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 6\n        }\n      }, \"Show/Hide Graph\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 6\n        }\n      }), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 12\n        }\n      }), this.state.showGraph && //Whether or not to display graphs\n      __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 6\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }, __jsx(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataTimeline15,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewConfirmed\",\n        fill: graphBlue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }), __jsx(Bar, {\n        dataKey: \"NewDeaths\",\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }\n      }, __jsx(PieChart, {\n        width: 400,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 10\n        }\n      }, __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }\n      }), __jsx(Pie, {\n        dataKey: \"value\",\n        isAnimationActive: false,\n        data: data_pie,\n        outerRadius: 100,\n        label: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, __jsx(Cell, {\n        fill: graphYellow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphRed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 12\n        }\n      }), __jsx(Cell, {\n        fill: graphGreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 12\n        }\n      })), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }\n      }))))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }\n      }, __jsx(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 8\n        }\n      }, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 9\n        }\n      }, __jsx(LineChart, {\n        data: dataTimeline,\n        margin: {\n          top: 5,\n          right: 5,\n          left: 0,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 10\n        }\n      }, __jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }\n      }), __jsx(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }\n      }), __jsx(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }), __jsx(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Confirmed\",\n        stroke: graphBlue,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Hospitalized\",\n        stroke: graphYellow,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Deaths\",\n        stroke: graphRed,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }\n      }), __jsx(Line, {\n        type: \"monotone\",\n        strokeWidth: 2,\n        dataKey: \"Recovered\",\n        stroke: graphGreen,\n        dot: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }\n      })))))))), __jsx(\"footer\", {\n        className: classes.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 5\n        }\n      }, __jsx(Paper, {\n        className: classes.paperFoot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 6\n        }\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 7\n        }\n      }, \"Simple Covid-19 Dashboard for Tencent Thailand's Internship Project\"), __jsx(Typography, {\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 7\n        }\n      }, \"By Thanjira S. and Woottipat H.\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Users/Herabat/react-js/covid-19-dashboard/pages/App.js"],"names":["React","withStyles","createMuiTheme","MuiThemeProvider","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","axios","ResponsiveContainer","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","styles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","backgroundColor","paperFoot","footer","palette","background","marginTop","unit","root","darkTheme","type","App","props","state","data","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","lastConfirmed","lastDeath","noConfirmedStreak","noDeathStreak","rateRecovery","rateDeath","showGraph","i","length","date","now","Date","getTime","Math","floor","callAPI","dataN","sourcePrefix","targetDate","get","then","response","lines","split","values","city","country","Confirmed","Hospitalized","Deaths","Recovered","error","console","log","setState","dataLen","lastData","slice","dataReformatted","map","d","Object","assign","getLastDate","lastUpdated","source","name","value","getDateDiff","toFixed","graphBlue","graphYellow","graphRed","graphGreen","classes","toLocaleString","top","right","left","bottom","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n  \nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#FFFEFE\",\n  },\n\tpaperFoot: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t\tbackgroundColor: \"#777070\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 2,\n  },\n\troot: {\n    backgroundColor: \"#000000\",\n  },\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tdataTimeline: [],\n\t\t\tdataTimeline15: [],\n\t\t\tdata_text: {\n\t\t\t\tupdatedDate: '',\n\t\t\t\tconfirmed: '',\n\t\t\t\thospitalized: '',\n\t\t\t\tdeaths: '',\n\t\t\t\trecovered: '',\n\t\t\t\tnewConfirmed: '',\n\t\t\t\tnewHospitalized: '',\n\t\t\t\tnewDeaths: '',\n\t\t\t\tnewRecovered: '',\n\t\t\t},\n\t\t\tdata_pie: [{}],\n\t\t\tlastConfirmed: 0,\n\t\t\tlastDeath: 0,\n\t\t\tnoConfirmedStreak: 0,\n\t\t\tnoDeathStreak: 0,\n\t\t\trateRecovery: 0,\n\t\t\trateDeath: 0,\n\t\t\tshowGraph: false,\n\t\t};\n  }\n\t\n\tgetLastDate(type, data) {\n\t\tfor (let i=data.length-1; i>=0; i--) {\n\t\t\tif (data[i][type] != 0)\n\t\t\t\treturn data[i]['Date'];\n\t\t}\n\t}\n\t\n\tgetDateDiff(date) {\n\t\tlet now = (new Date()).getTime();\n\t\treturn Math.floor((now - (new Date(date)).getTime())/86400000);\n\t}\n  \n  componentDidMount() {\n\t  this.callAPI();\n  }\n\t\n\tcallAPICSV() {\n\t\tlet data = [];\n\t\tlet dataN = 0;\n\t\tconst sourcePrefix = 'https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/08-18-2020.csv';\n\t\tlet targetDate = '08-18-2020';\n\t\taxios.get(sourcePrefix + targetDate + '.csv')\n\t\t.then(response => {\n\t\t\tconst lines = response.split(/\\r?\\n/);\n\t\t\tfor (let i=1; i<lines.length; i++) {\n\t\t\t\tconst values = lines[i].split(',');\n\t\t\t\tif ((city != '' && city != values[2]) || (country != '' && country != values[3]))\n\t\t\t\t\tcontinue;\n\t\t\t\tdata[dataN] = {\n\t\t\t\t\tDate: values[4],\n\t\t\t\t\tConfirmed: values[7],\n\t\t\t\t\tHospitalized: values[10],\n\t\t\t\t\tDeaths: values[8],\n\t\t\t\t\tRecovered: values[9],\n\t\t\t\t}\n\t\t\t\tdataN++;\n\t\t\t}\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t});\n\t\t\n\t\tif (data.length > 0) {\n\t\t\t\n\t\t}\n\t}\n\t\n\t/*\n  callAPI() {\n\t\taxios.get('https://covid19.th-stat.com/api/open/timeline')\n\t\t.then(response => {\n\t\t\t//console.log(response.data);\n\t\t\tconst data = response.data['Data'];\n\t\t\tconst lastData = data.slice(-1)[0];\n\t\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\t\treturn (\n\t\t\t\t\tObject.assign({},d,{\n\t\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t\t\n\t\t\tlet lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\t\tlet lastDeath = this.getLastDate('NewDeaths',data);\n\t\t\tlet lastUpdated = lastData['Date'];\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdataTimeline: dataReformatted,\n\t\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\t\tdata_text: {\n\t\t\t\t\tsource: response.data['Source'],\n\t\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t\t},\n\t\t\t\tdata_pie: [\n\t\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t\t],\n\t\t\t\tlastConfirmed: lastConfirmed,\n\t\t\t\tlastDeath: lastDeath,\n\t\t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n\t\t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n\t\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\t});\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t})\n\t}\n\t*/\n\t\n\tcallAPI() {\n\t\t\n\t\tvar data = [];\n\t\t\n\t\taxios.get('https://covid19.th-stat.com/api/open/timeline')\n\t\t.then(response => {\n\t\t\tthis.data = response.data['Data'];\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t})\n\t\t\n\t\t\n\t\tthis.setState({\n\t\t\tdataLen: data,\n\t\t});\n\t\t\n\t\t\n\t\tif (false/*data.length > 0*/) {\n\t\t\tconst lastData = data.slice(-1)[0];\n\t\t\tconst dataReformatted = data.slice().map(d => {\n\t\t\t\treturn (\n\t\t\t\t\tObject.assign({},d,{\n\t\t\t\t\t\tDate: d.Date.slice(3,6) + d.Date.slice(0,2)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t\t\n\t\t\tlet lastConfirmed = this.getLastDate('NewConfirmed',data);\n\t\t\tlet lastDeath = this.getLastDate('NewDeaths',data);\n\t\t\tlet lastUpdated = lastData['Date'];\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdataTimeline: dataReformatted,\n\t\t\t\tdataTimeline15: dataReformatted.slice(1).slice(-15),\n\t\t\t\tdata_text: {\n\t\t\t\t\tsource: response.data['Source'],\n\t\t\t\t\tupdatedDate: lastUpdated.slice(3,6) + lastUpdated.slice(0,3) + lastUpdated.slice(6),\n\t\t\t\t\tconfirmed: lastData['Confirmed'],\n\t\t\t\t\thospitalized: lastData['Hospitalized'],\n\t\t\t\t\tdeaths: lastData['Deaths'],\n\t\t\t\t\trecovered: lastData['Recovered'],\n\t\t\t\t\tnewConfirmed: lastData['NewConfirmed'],\n\t\t\t\t\tnewHospitalized: lastData['NewHospitalized'],\n\t\t\t\t\tnewDeaths: lastData['NewDeaths'],\n\t\t\t\t\tnewRecovered: lastData['NewRecovered'],\n\t\t\t\t},\n\t\t\t\tdata_pie: [\n\t\t\t\t\t{ name: 'Hospitalized', value: lastData['Hospitalized'] },\n\t\t\t\t\t{ name: 'Deaths', value: lastData['Deaths'] },\n\t\t\t\t\t{ name: 'Recovered', value: lastData['Recovered'] },\n\t\t\t\t],\n\t\t\t\tlastConfirmed: lastConfirmed,\n\t\t\t\tlastDeath: lastDeath,\n\t\t\t\tnoConfirmedStreak: this.getDateDiff(lastConfirmed),\n\t\t\t\tnoDeathStreak: this.getDateDiff(lastDeath),\n\t\t\t\trateRecovery: (100*lastData['Recovered']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\t\trateDeath: (100*lastData['Deaths']/lastData['Confirmed']).toFixed(2) + '%',\n\t\t\t});\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst graphBlue = '#20A0E0';\n\t\tconst graphYellow = '#FFC060';\n\t\tconst graphRed = '#E04040';\n\t\tconst graphGreen = '#80E080';\n\t\tconst { classes } = this.props;\n\t\tconst { dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar style={{background:'#BB0A1E'}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\n\t\t\t\t\t\t\t{/*<b>Simple COVID-19 Dashboard</b>*/}\n\t\t\t\t\t\t\t{this.state.dataLen}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.appBarSpacer}/>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<MuiThemeProvider theme={darkTheme}>\n\t\t\t\t\t\t\t\t<Typography align=\"right\" color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\tLast updated: {data_text.updatedDate}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"right\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={data_text.source}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"> {\n\t\t\t\t\t\t\t\t\t\tdata_text.source\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Confirmed</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Hospitalized</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Deaths</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography>Recovered</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast confirmed: {this.state.lastConfirmed} ({this.state.noConfirmedStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tLast death: {this.state.lastDeath} ({this.state.noDeathStreak} days ago)\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant='h6'>\n\t\t\t\t\t\t\t\t\tRecovery Rate: {this.state.rateRecovery}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\t\t\tMortality Rate: {this.state.rateDeath}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t{/*-------------------------------- Graphs --------------------------------*/}\n\t\t\t\t\n\t\t\t\t\t{/*Button to toggle graph display*/}\n\t\t\t\t\t<br/>\n\t\t\t\t\t<button onClick={() => this.setState({ showGraph: !this.state.showGraph })}>\n\t\t\t\t\t\tShow/Hide Graph\n\t\t\t\t\t</button>\n\t\t\t\t\t<br/> <br/>\n\t\t\t\t\t\n\t\t\t\t\t{ this.state.showGraph && (\t//Whether or not to display graphs\n\t\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{/*Bar, last 14 days*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline15}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\"/>\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewConfirmed\" fill={graphBlue} />\n\t\t\t\t\t\t\t\t\t\t<Bar dataKey=\"NewDeaths\" fill={graphRed} />\n\t\t\t\t\t\t\t\t\t</BarChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Pie, in total*/}\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t\t\t\t\t<PieChart width={400}\theight={400}>\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphYellow} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphRed} />\n\t\t\t\t\t\t\t\t\t\t\t<Cell fill={graphGreen} />\n\t\t\t\t\t\t\t\t\t\t</Pie>\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*Bar, in total*/}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={500}>\n\t\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\t\t\tdata={dataTimeline}\n\t\t\t\t\t\t\t\t\t\tmargin={{top: 5, right: 5, left: 0, bottom: 5 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t\t\t\t<XAxis dataKey=\"Date\" />\n\t\t\t\t\t\t\t\t\t\t<YAxis />\n\t\t\t\t\t\t\t\t\t\t<Tooltip />\n\t\t\t\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Confirmed\" stroke={graphBlue} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Hospitalized\" stroke={graphYellow} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Deaths\" stroke={graphRed} dot={false} />\n\t\t\t\t\t\t\t\t\t\t<Line type=\"monotone\" strokeWidth={2} dataKey=\"Recovered\" stroke={graphGreen} dot={false} />\n\t\t\t\t\t\t\t\t\t</LineChart>\n\t\t\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t<footer className={classes.footer}>\n\t\t\t\t\t<Paper className={classes.paperFoot}>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tSimple Covid-19 Dashboard for Tencent Thailand's Internship Project\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\tBy Thanjira S. and Woottipat H.\n            </Typography>\n          </Paper>\n        </footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}